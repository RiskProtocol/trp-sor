/*! For license information please see bundle.js.LICENSE.txt */
!(function(t, e) {
    'object' == typeof exports && 'object' == typeof module
        ? (module.exports = e())
        : 'function' == typeof define && define.amd
        ? define([], e)
        : 'object' == typeof exports
        ? (exports['trp/sor'] = e())
        : (t['trp/sor'] = e());
})(this, () =>
    (() => {
        var t = {
                535: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            AbiCoder: () => re,
                            ConstructorFragment: () => ot,
                            ErrorFragment: () => ht,
                            EventFragment: () => rt,
                            FormatTypes: () => K,
                            Fragment: () => et,
                            FunctionFragment: () => at,
                            Indexed: () => he,
                            Interface: () => fe,
                            LogDescription: () => oe,
                            ParamType: () => Q,
                            TransactionDescription: () => ae,
                            checkResultErrors: () => mt,
                            defaultAbiCoder: () => ne,
                        });
                    var n = r(851),
                        i = r.n(n);
                    let s = !1,
                        o = !1;
                    const a = {
                        debug: 1,
                        default: 2,
                        info: 2,
                        warning: 3,
                        error: 4,
                        off: 5,
                    };
                    let u = a.default,
                        h = null;
                    const l = (function() {
                        try {
                            const t = [];
                            if (
                                (['NFD', 'NFC', 'NFKD', 'NFKC'].forEach(e => {
                                    try {
                                        if ('test' !== 'test'.normalize(e))
                                            throw new Error('bad normalize');
                                    } catch (r) {
                                        t.push(e);
                                    }
                                }),
                                t.length)
                            )
                                throw new Error('missing ' + t.join(', '));
                            if (
                                String.fromCharCode(233).normalize('NFD') !==
                                String.fromCharCode(101, 769)
                            )
                                throw new Error('broken implementation');
                        } catch (t) {
                            return t.message;
                        }
                        return null;
                    })();
                    var c, f;
                    !(function(t) {
                        (t.DEBUG = 'DEBUG'),
                            (t.INFO = 'INFO'),
                            (t.WARNING = 'WARNING'),
                            (t.ERROR = 'ERROR'),
                            (t.OFF = 'OFF');
                    })(c || (c = {})),
                        (function(t) {
                            (t.UNKNOWN_ERROR = 'UNKNOWN_ERROR'),
                                (t.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED'),
                                (t.UNSUPPORTED_OPERATION =
                                    'UNSUPPORTED_OPERATION'),
                                (t.NETWORK_ERROR = 'NETWORK_ERROR'),
                                (t.SERVER_ERROR = 'SERVER_ERROR'),
                                (t.TIMEOUT = 'TIMEOUT'),
                                (t.BUFFER_OVERRUN = 'BUFFER_OVERRUN'),
                                (t.NUMERIC_FAULT = 'NUMERIC_FAULT'),
                                (t.MISSING_NEW = 'MISSING_NEW'),
                                (t.INVALID_ARGUMENT = 'INVALID_ARGUMENT'),
                                (t.MISSING_ARGUMENT = 'MISSING_ARGUMENT'),
                                (t.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT'),
                                (t.CALL_EXCEPTION = 'CALL_EXCEPTION'),
                                (t.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'),
                                (t.NONCE_EXPIRED = 'NONCE_EXPIRED'),
                                (t.REPLACEMENT_UNDERPRICED =
                                    'REPLACEMENT_UNDERPRICED'),
                                (t.UNPREDICTABLE_GAS_LIMIT =
                                    'UNPREDICTABLE_GAS_LIMIT'),
                                (t.TRANSACTION_REPLACED =
                                    'TRANSACTION_REPLACED'),
                                (t.ACTION_REJECTED = 'ACTION_REJECTED');
                        })(f || (f = {}));
                    const d = '0123456789abcdef';
                    class p {
                        constructor(t) {
                            Object.defineProperty(this, 'version', {
                                enumerable: !0,
                                value: t,
                                writable: !1,
                            });
                        }
                        _log(t, e) {
                            const r = t.toLowerCase();
                            null == a[r] &&
                                this.throwArgumentError(
                                    'invalid log level name',
                                    'logLevel',
                                    t
                                ),
                                u > a[r] || console.log.apply(console, e);
                        }
                        debug(...t) {
                            this._log(p.levels.DEBUG, t);
                        }
                        info(...t) {
                            this._log(p.levels.INFO, t);
                        }
                        warn(...t) {
                            this._log(p.levels.WARNING, t);
                        }
                        makeError(t, e, r) {
                            if (o)
                                return this.makeError('censored error', e, {});
                            e || (e = p.errors.UNKNOWN_ERROR), r || (r = {});
                            const n = [];
                            Object.keys(r).forEach(t => {
                                const e = r[t];
                                try {
                                    if (e instanceof Uint8Array) {
                                        let r = '';
                                        for (let t = 0; t < e.length; t++)
                                            (r += d[e[t] >> 4]),
                                                (r += d[15 & e[t]]);
                                        n.push(t + '=Uint8Array(0x' + r + ')');
                                    } else n.push(t + '=' + JSON.stringify(e));
                                } catch (e) {
                                    n.push(
                                        t +
                                            '=' +
                                            JSON.stringify(r[t].toString())
                                    );
                                }
                            }),
                                n.push(`code=${e}`),
                                n.push(`version=${this.version}`);
                            const i = t;
                            let s = '';
                            switch (e) {
                                case f.NUMERIC_FAULT: {
                                    s = 'NUMERIC_FAULT';
                                    const e = t;
                                    switch (e) {
                                        case 'overflow':
                                        case 'underflow':
                                        case 'division-by-zero':
                                            s += '-' + e;
                                            break;
                                        case 'negative-power':
                                        case 'negative-width':
                                            s += '-unsupported';
                                            break;
                                        case 'unbound-bitwise-result':
                                            s += '-unbound-result';
                                    }
                                    break;
                                }
                                case f.CALL_EXCEPTION:
                                case f.INSUFFICIENT_FUNDS:
                                case f.MISSING_NEW:
                                case f.NONCE_EXPIRED:
                                case f.REPLACEMENT_UNDERPRICED:
                                case f.TRANSACTION_REPLACED:
                                case f.UNPREDICTABLE_GAS_LIMIT:
                                    s = e;
                            }
                            s &&
                                (t +=
                                    ' [ See: https://links.ethers.org/v5-errors-' +
                                    s +
                                    ' ]'),
                                n.length && (t += ' (' + n.join(', ') + ')');
                            const a = new Error(t);
                            return (
                                (a.reason = i),
                                (a.code = e),
                                Object.keys(r).forEach(function(t) {
                                    a[t] = r[t];
                                }),
                                a
                            );
                        }
                        throwError(t, e, r) {
                            throw this.makeError(t, e, r);
                        }
                        throwArgumentError(t, e, r) {
                            return this.throwError(
                                t,
                                p.errors.INVALID_ARGUMENT,
                                { argument: e, value: r }
                            );
                        }
                        assert(t, e, r, n) {
                            t || this.throwError(e, r, n);
                        }
                        assertArgument(t, e, r, n) {
                            t || this.throwArgumentError(e, r, n);
                        }
                        checkNormalize(t) {
                            null == t &&
                                (t =
                                    'platform missing String.prototype.normalize'),
                                l &&
                                    this.throwError(
                                        'platform missing String.prototype.normalize',
                                        p.errors.UNSUPPORTED_OPERATION,
                                        {
                                            operation:
                                                'String.prototype.normalize',
                                            form: l,
                                        }
                                    );
                        }
                        checkSafeUint53(t, e) {
                            'number' == typeof t &&
                                (null == e && (e = 'value not safe'),
                                (t < 0 || t >= 9007199254740991) &&
                                    this.throwError(e, p.errors.NUMERIC_FAULT, {
                                        operation: 'checkSafeInteger',
                                        fault: 'out-of-safe-range',
                                        value: t,
                                    }),
                                t % 1 &&
                                    this.throwError(e, p.errors.NUMERIC_FAULT, {
                                        operation: 'checkSafeInteger',
                                        fault: 'non-integer',
                                        value: t,
                                    }));
                        }
                        checkArgumentCount(t, e, r) {
                            (r = r ? ': ' + r : ''),
                                t < e &&
                                    this.throwError(
                                        'missing argument' + r,
                                        p.errors.MISSING_ARGUMENT,
                                        { count: t, expectedCount: e }
                                    ),
                                t > e &&
                                    this.throwError(
                                        'too many arguments' + r,
                                        p.errors.UNEXPECTED_ARGUMENT,
                                        { count: t, expectedCount: e }
                                    );
                        }
                        checkNew(t, e) {
                            (t !== Object && null != t) ||
                                this.throwError(
                                    'missing new',
                                    p.errors.MISSING_NEW,
                                    { name: e.name }
                                );
                        }
                        checkAbstract(t, e) {
                            t === e
                                ? this.throwError(
                                      'cannot instantiate abstract class ' +
                                          JSON.stringify(e.name) +
                                          ' directly; use a sub-class',
                                      p.errors.UNSUPPORTED_OPERATION,
                                      { name: t.name, operation: 'new' }
                                  )
                                : (t !== Object && null != t) ||
                                  this.throwError(
                                      'missing new',
                                      p.errors.MISSING_NEW,
                                      { name: e.name }
                                  );
                        }
                        static globalLogger() {
                            return h || (h = new p('logger/5.7.0')), h;
                        }
                        static setCensorship(t, e) {
                            if (
                                (!t &&
                                    e &&
                                    this.globalLogger().throwError(
                                        'cannot permanently disable censorship',
                                        p.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'setCensorship' }
                                    ),
                                s)
                            ) {
                                if (!t) return;
                                this.globalLogger().throwError(
                                    'error censorship permanent',
                                    p.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'setCensorship' }
                                );
                            }
                            (o = !!t), (s = !!e);
                        }
                        static setLogLevel(t) {
                            const e = a[t.toLowerCase()];
                            null != e
                                ? (u = e)
                                : p
                                      .globalLogger()
                                      .warn('invalid log level - ' + t);
                        }
                        static from(t) {
                            return new p(t);
                        }
                    }
                    (p.errors = f), (p.levels = c);
                    const m = new p('bytes/5.7.0');
                    function g(t) {
                        return !!t.toHexString;
                    }
                    function y(t) {
                        return (
                            t.slice ||
                                (t.slice = function() {
                                    const e = Array.prototype.slice.call(
                                        arguments
                                    );
                                    return y(
                                        new Uint8Array(
                                            Array.prototype.slice.apply(t, e)
                                        )
                                    );
                                }),
                            t
                        );
                    }
                    function v(t) {
                        return 'number' == typeof t && t == t && t % 1 == 0;
                    }
                    function w(t) {
                        if (null == t) return !1;
                        if (t.constructor === Uint8Array) return !0;
                        if ('string' == typeof t) return !1;
                        if (!v(t.length) || t.length < 0) return !1;
                        for (let e = 0; e < t.length; e++) {
                            const r = t[e];
                            if (!v(r) || r < 0 || r >= 256) return !1;
                        }
                        return !0;
                    }
                    function b(t, e) {
                        if ((e || (e = {}), 'number' == typeof t)) {
                            m.checkSafeUint53(t, 'invalid arrayify value');
                            const e = [];
                            for (; t; )
                                e.unshift(255 & t),
                                    (t = parseInt(String(t / 256)));
                            return (
                                0 === e.length && e.push(0),
                                y(new Uint8Array(e))
                            );
                        }
                        if (
                            (e.allowMissingPrefix &&
                                'string' == typeof t &&
                                '0x' !== t.substring(0, 2) &&
                                (t = '0x' + t),
                            g(t) && (t = t.toHexString()),
                            E(t))
                        ) {
                            let r = t.substring(2);
                            r.length % 2 &&
                                ('left' === e.hexPad
                                    ? (r = '0' + r)
                                    : 'right' === e.hexPad
                                    ? (r += '0')
                                    : m.throwArgumentError(
                                          'hex data is odd-length',
                                          'value',
                                          t
                                      ));
                            const n = [];
                            for (let t = 0; t < r.length; t += 2)
                                n.push(parseInt(r.substring(t, t + 2), 16));
                            return y(new Uint8Array(n));
                        }
                        return w(t)
                            ? y(new Uint8Array(t))
                            : m.throwArgumentError(
                                  'invalid arrayify value',
                                  'value',
                                  t
                              );
                    }
                    function M(t) {
                        const e = t.map(t => b(t)),
                            r = e.reduce((t, e) => t + e.length, 0),
                            n = new Uint8Array(r);
                        return (
                            e.reduce((t, e) => (n.set(e, t), t + e.length), 0),
                            y(n)
                        );
                    }
                    function E(t, e) {
                        return !(
                            'string' != typeof t ||
                            !t.match(/^0x[0-9A-Fa-f]*$/) ||
                            (e && t.length !== 2 + 2 * e)
                        );
                    }
                    const _ = '0123456789abcdef';
                    function A(t, e) {
                        if ((e || (e = {}), 'number' == typeof t)) {
                            m.checkSafeUint53(t, 'invalid hexlify value');
                            let e = '';
                            for (; t; )
                                (e = _[15 & t] + e), (t = Math.floor(t / 16));
                            return e.length
                                ? (e.length % 2 && (e = '0' + e), '0x' + e)
                                : '0x00';
                        }
                        if ('bigint' == typeof t)
                            return (t = t.toString(16)).length % 2
                                ? '0x0' + t
                                : '0x' + t;
                        if (
                            (e.allowMissingPrefix &&
                                'string' == typeof t &&
                                '0x' !== t.substring(0, 2) &&
                                (t = '0x' + t),
                            g(t))
                        )
                            return t.toHexString();
                        if (E(t))
                            return (
                                t.length % 2 &&
                                    ('left' === e.hexPad
                                        ? (t = '0x0' + t.substring(2))
                                        : 'right' === e.hexPad
                                        ? (t += '0')
                                        : m.throwArgumentError(
                                              'hex data is odd-length',
                                              'value',
                                              t
                                          )),
                                t.toLowerCase()
                            );
                        if (w(t)) {
                            let e = '0x';
                            for (let r = 0; r < t.length; r++) {
                                let n = t[r];
                                e += _[(240 & n) >> 4] + _[15 & n];
                            }
                            return e;
                        }
                        return m.throwArgumentError(
                            'invalid hexlify value',
                            'value',
                            t
                        );
                    }
                    function N(t, e) {
                        for (
                            'string' != typeof t
                                ? (t = A(t))
                                : E(t) ||
                                  m.throwArgumentError(
                                      'invalid hex string',
                                      'value',
                                      t
                                  ),
                                t.length > 2 * e + 2 &&
                                    m.throwArgumentError(
                                        'value out of range',
                                        'value',
                                        arguments[1]
                                    );
                            t.length < 2 * e + 2;

                        )
                            t = '0x0' + t.substring(2);
                        return t;
                    }
                    var O = i().BN;
                    const S = new p('bignumber/5.7.0'),
                        x = {},
                        P = 9007199254740991;
                    let T = !1;
                    class R {
                        constructor(t, e) {
                            t !== x &&
                                S.throwError(
                                    'cannot call constructor directly; use BigNumber.from',
                                    p.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new (BigNumber)' }
                                ),
                                (this._hex = e),
                                (this._isBigNumber = !0),
                                Object.freeze(this);
                        }
                        fromTwos(t) {
                            return I(B(this).fromTwos(t));
                        }
                        toTwos(t) {
                            return I(B(this).toTwos(t));
                        }
                        abs() {
                            return '-' === this._hex[0]
                                ? R.from(this._hex.substring(1))
                                : this;
                        }
                        add(t) {
                            return I(B(this).add(B(t)));
                        }
                        sub(t) {
                            return I(B(this).sub(B(t)));
                        }
                        div(t) {
                            return (
                                R.from(t).isZero() &&
                                    C('division-by-zero', 'div'),
                                I(B(this).div(B(t)))
                            );
                        }
                        mul(t) {
                            return I(B(this).mul(B(t)));
                        }
                        mod(t) {
                            const e = B(t);
                            return (
                                e.isNeg() && C('division-by-zero', 'mod'),
                                I(B(this).umod(e))
                            );
                        }
                        pow(t) {
                            const e = B(t);
                            return (
                                e.isNeg() && C('negative-power', 'pow'),
                                I(B(this).pow(e))
                            );
                        }
                        and(t) {
                            const e = B(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    C('unbound-bitwise-result', 'and'),
                                I(B(this).and(e))
                            );
                        }
                        or(t) {
                            const e = B(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    C('unbound-bitwise-result', 'or'),
                                I(B(this).or(e))
                            );
                        }
                        xor(t) {
                            const e = B(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    C('unbound-bitwise-result', 'xor'),
                                I(B(this).xor(e))
                            );
                        }
                        mask(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    C('negative-width', 'mask'),
                                I(B(this).maskn(t))
                            );
                        }
                        shl(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    C('negative-width', 'shl'),
                                I(B(this).shln(t))
                            );
                        }
                        shr(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    C('negative-width', 'shr'),
                                I(B(this).shrn(t))
                            );
                        }
                        eq(t) {
                            return B(this).eq(B(t));
                        }
                        lt(t) {
                            return B(this).lt(B(t));
                        }
                        lte(t) {
                            return B(this).lte(B(t));
                        }
                        gt(t) {
                            return B(this).gt(B(t));
                        }
                        gte(t) {
                            return B(this).gte(B(t));
                        }
                        isNegative() {
                            return '-' === this._hex[0];
                        }
                        isZero() {
                            return B(this).isZero();
                        }
                        toNumber() {
                            try {
                                return B(this).toNumber();
                            } catch (t) {
                                C('overflow', 'toNumber', this.toString());
                            }
                            return null;
                        }
                        toBigInt() {
                            try {
                                return BigInt(this.toString());
                            } catch (t) {}
                            return S.throwError(
                                'this platform does not support BigInt',
                                p.errors.UNSUPPORTED_OPERATION,
                                { value: this.toString() }
                            );
                        }
                        toString() {
                            return (
                                arguments.length > 0 &&
                                    (10 === arguments[0]
                                        ? T ||
                                          ((T = !0),
                                          S.warn(
                                              'BigNumber.toString does not accept any parameters; base-10 is assumed'
                                          ))
                                        : 16 === arguments[0]
                                        ? S.throwError(
                                              'BigNumber.toString does not accept any parameters; use bigNumber.toHexString()',
                                              p.errors.UNEXPECTED_ARGUMENT,
                                              {}
                                          )
                                        : S.throwError(
                                              'BigNumber.toString does not accept parameters',
                                              p.errors.UNEXPECTED_ARGUMENT,
                                              {}
                                          )),
                                B(this).toString(10)
                            );
                        }
                        toHexString() {
                            return this._hex;
                        }
                        toJSON(t) {
                            return {
                                type: 'BigNumber',
                                hex: this.toHexString(),
                            };
                        }
                        static from(t) {
                            if (t instanceof R) return t;
                            if ('string' == typeof t)
                                return t.match(/^-?0x[0-9a-f]+$/i)
                                    ? new R(x, k(t))
                                    : t.match(/^-?[0-9]+$/)
                                    ? new R(x, k(new O(t)))
                                    : S.throwArgumentError(
                                          'invalid BigNumber string',
                                          'value',
                                          t
                                      );
                            if ('number' == typeof t)
                                return (
                                    t % 1 &&
                                        C('underflow', 'BigNumber.from', t),
                                    (t >= P || t <= -P) &&
                                        C('overflow', 'BigNumber.from', t),
                                    R.from(String(t))
                                );
                            const e = t;
                            if ('bigint' == typeof e)
                                return R.from(e.toString());
                            if (w(e)) return R.from(A(e));
                            if (e)
                                if (e.toHexString) {
                                    const t = e.toHexString();
                                    if ('string' == typeof t) return R.from(t);
                                } else {
                                    let t = e._hex;
                                    if (
                                        (null == t &&
                                            'BigNumber' === e.type &&
                                            (t = e.hex),
                                        'string' == typeof t &&
                                            (E(t) ||
                                                ('-' === t[0] &&
                                                    E(t.substring(1)))))
                                    )
                                        return R.from(t);
                                }
                            return S.throwArgumentError(
                                'invalid BigNumber value',
                                'value',
                                t
                            );
                        }
                        static isBigNumber(t) {
                            return !(!t || !t._isBigNumber);
                        }
                    }
                    function k(t) {
                        if ('string' != typeof t) return k(t.toString(16));
                        if ('-' === t[0])
                            return (
                                '-' === (t = t.substring(1))[0] &&
                                    S.throwArgumentError(
                                        'invalid hex',
                                        'value',
                                        t
                                    ),
                                '0x00' === (t = k(t)) ? t : '-' + t
                            );
                        if (
                            ('0x' !== t.substring(0, 2) && (t = '0x' + t),
                            '0x' === t)
                        )
                            return '0x00';
                        for (
                            t.length % 2 && (t = '0x0' + t.substring(2));
                            t.length > 4 && '0x00' === t.substring(0, 4);

                        )
                            t = '0x' + t.substring(4);
                        return t;
                    }
                    function I(t) {
                        return R.from(k(t));
                    }
                    function B(t) {
                        const e = R.from(t).toHexString();
                        return '-' === e[0]
                            ? new O('-' + e.substring(3), 16)
                            : new O(e.substring(2), 16);
                    }
                    function C(t, e, r) {
                        const n = { fault: t, operation: e };
                        return (
                            null != r && (n.value = r),
                            S.throwError(t, p.errors.NUMERIC_FAULT, n)
                        );
                    }
                    const L = new p('properties/5.7.0');
                    function F(t, e, r) {
                        Object.defineProperty(t, e, {
                            enumerable: !0,
                            value: r,
                            writable: !1,
                        });
                    }
                    function U(t, e) {
                        for (let r = 0; r < 32; r++) {
                            if (t[e]) return t[e];
                            if (!t.prototype || 'object' != typeof t.prototype)
                                break;
                            t = Object.getPrototypeOf(t.prototype).constructor;
                        }
                        return null;
                    }
                    const D = {
                        bigint: !0,
                        boolean: !0,
                        function: !0,
                        number: !0,
                        string: !0,
                    };
                    function j(t) {
                        if (null == t || D[typeof t]) return !0;
                        if (Array.isArray(t) || 'object' == typeof t) {
                            if (!Object.isFrozen(t)) return !1;
                            const e = Object.keys(t);
                            for (let r = 0; r < e.length; r++) {
                                let n = null;
                                try {
                                    n = t[e[r]];
                                } catch (t) {
                                    continue;
                                }
                                if (!j(n)) return !1;
                            }
                            return !0;
                        }
                        return L.throwArgumentError(
                            'Cannot deepCopy ' + typeof t,
                            'object',
                            t
                        );
                    }
                    function z(t) {
                        if (j(t)) return t;
                        if (Array.isArray(t))
                            return Object.freeze(t.map(t => G(t)));
                        if ('object' == typeof t) {
                            const e = {};
                            for (const r in t) {
                                const n = t[r];
                                void 0 !== n && F(e, r, G(n));
                            }
                            return e;
                        }
                        return L.throwArgumentError(
                            'Cannot deepCopy ' + typeof t,
                            'object',
                            t
                        );
                    }
                    function G(t) {
                        return z(t);
                    }
                    class H {
                        constructor(t) {
                            for (const e in t) this[e] = G(t[e]);
                        }
                    }
                    const $ = 'abi/5.7.0',
                        V = new p($),
                        q = {};
                    let W = { calldata: !0, memory: !0, storage: !0 },
                        Z = { calldata: !0, memory: !0 };
                    function J(t, e) {
                        if ('bytes' === t || 'string' === t) {
                            if (W[e]) return !0;
                        } else if ('address' === t) {
                            if ('payable' === e) return !0;
                        } else if (
                            (t.indexOf('[') >= 0 || 'tuple' === t) &&
                            Z[e]
                        )
                            return !0;
                        return (
                            (W[e] || 'payable' === e) &&
                                V.throwArgumentError(
                                    'invalid modifier',
                                    'name',
                                    e
                                ),
                            !1
                        );
                    }
                    function X(t, e) {
                        for (let r in e) F(t, r, e[r]);
                    }
                    const K = Object.freeze({
                            sighash: 'sighash',
                            minimal: 'minimal',
                            full: 'full',
                            json: 'json',
                        }),
                        Y = new RegExp(/^(.*)\[([0-9]*)\]$/);
                    class Q {
                        constructor(t, e) {
                            t !== q &&
                                V.throwError(
                                    'use fromString',
                                    p.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new ParamType()' }
                                ),
                                X(this, e);
                            let r = this.type.match(Y);
                            X(
                                this,
                                r
                                    ? {
                                          arrayLength: parseInt(r[2] || '-1'),
                                          arrayChildren: Q.fromObject({
                                              type: r[1],
                                              components: this.components,
                                          }),
                                          baseType: 'array',
                                      }
                                    : {
                                          arrayLength: null,
                                          arrayChildren: null,
                                          baseType:
                                              null != this.components
                                                  ? 'tuple'
                                                  : this.type,
                                      }
                            ),
                                (this._isParamType = !0),
                                Object.freeze(this);
                        }
                        format(t) {
                            if (
                                (t || (t = K.sighash),
                                K[t] ||
                                    V.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === K.json)
                            ) {
                                let e = {
                                    type:
                                        'tuple' === this.baseType
                                            ? 'tuple'
                                            : this.type,
                                    name: this.name || void 0,
                                };
                                return (
                                    'boolean' == typeof this.indexed &&
                                        (e.indexed = this.indexed),
                                    this.components &&
                                        (e.components = this.components.map(e =>
                                            JSON.parse(e.format(t))
                                        )),
                                    JSON.stringify(e)
                                );
                            }
                            let e = '';
                            return (
                                'array' === this.baseType
                                    ? ((e += this.arrayChildren.format(t)),
                                      (e +=
                                          '[' +
                                          (this.arrayLength < 0
                                              ? ''
                                              : String(this.arrayLength)) +
                                          ']'))
                                    : 'tuple' === this.baseType
                                    ? (t !== K.sighash && (e += this.type),
                                      (e +=
                                          '(' +
                                          this.components
                                              .map(e => e.format(t))
                                              .join(t === K.full ? ', ' : ',') +
                                          ')'))
                                    : (e += this.type),
                                t !== K.sighash &&
                                    (!0 === this.indexed && (e += ' indexed'),
                                    t === K.full &&
                                        this.name &&
                                        (e += ' ' + this.name)),
                                e
                            );
                        }
                        static from(t, e) {
                            return 'string' == typeof t
                                ? Q.fromString(t, e)
                                : Q.fromObject(t);
                        }
                        static fromObject(t) {
                            return Q.isParamType(t)
                                ? t
                                : new Q(q, {
                                      name: t.name || null,
                                      type: lt(t.type),
                                      indexed:
                                          null == t.indexed
                                              ? null
                                              : !!t.indexed,
                                      components: t.components
                                          ? t.components.map(Q.fromObject)
                                          : null,
                                  });
                        }
                        static fromString(t, e) {
                            return (
                                (r = (function(t, e) {
                                    let r = t;
                                    function n(e) {
                                        V.throwArgumentError(
                                            `unexpected character at position ${e}`,
                                            'param',
                                            t
                                        );
                                    }
                                    function i(t) {
                                        let r = {
                                            type: '',
                                            name: '',
                                            parent: t,
                                            state: { allowType: !0 },
                                        };
                                        return e && (r.indexed = !1), r;
                                    }
                                    t = t.replace(/\s/g, ' ');
                                    let s = {
                                            type: '',
                                            name: '',
                                            state: { allowType: !0 },
                                        },
                                        o = s;
                                    for (let r = 0; r < t.length; r++) {
                                        let s = t[r];
                                        switch (s) {
                                            case '(':
                                                o.state.allowType &&
                                                '' === o.type
                                                    ? (o.type = 'tuple')
                                                    : o.state.allowParams ||
                                                      n(r),
                                                    (o.state.allowType = !1),
                                                    (o.type = lt(o.type)),
                                                    (o.components = [i(o)]),
                                                    (o = o.components[0]);
                                                break;
                                            case ')':
                                                delete o.state,
                                                    'indexed' === o.name &&
                                                        (e || n(r),
                                                        (o.indexed = !0),
                                                        (o.name = '')),
                                                    J(o.type, o.name) &&
                                                        (o.name = ''),
                                                    (o.type = lt(o.type));
                                                let t = o;
                                                (o = o.parent),
                                                    o || n(r),
                                                    delete t.parent,
                                                    (o.state.allowParams = !1),
                                                    (o.state.allowName = !0),
                                                    (o.state.allowArray = !0);
                                                break;
                                            case ',':
                                                delete o.state,
                                                    'indexed' === o.name &&
                                                        (e || n(r),
                                                        (o.indexed = !0),
                                                        (o.name = '')),
                                                    J(o.type, o.name) &&
                                                        (o.name = ''),
                                                    (o.type = lt(o.type));
                                                let a = i(o.parent);
                                                o.parent.components.push(a),
                                                    delete o.parent,
                                                    (o = a);
                                                break;
                                            case ' ':
                                                o.state.allowType &&
                                                    '' !== o.type &&
                                                    ((o.type = lt(o.type)),
                                                    delete o.state.allowType,
                                                    (o.state.allowName = !0),
                                                    (o.state.allowParams = !0)),
                                                    o.state.allowName &&
                                                        '' !== o.name &&
                                                        ('indexed' === o.name
                                                            ? (e || n(r),
                                                              o.indexed && n(r),
                                                              (o.indexed = !0),
                                                              (o.name = ''))
                                                            : J(o.type, o.name)
                                                            ? (o.name = '')
                                                            : (o.state.allowName = !1));
                                                break;
                                            case '[':
                                                o.state.allowArray || n(r),
                                                    (o.type += s),
                                                    (o.state.allowArray = !1),
                                                    (o.state.allowName = !1),
                                                    (o.state.readArray = !0);
                                                break;
                                            case ']':
                                                o.state.readArray || n(r),
                                                    (o.type += s),
                                                    (o.state.readArray = !1),
                                                    (o.state.allowArray = !0),
                                                    (o.state.allowName = !0);
                                                break;
                                            default:
                                                o.state.allowType
                                                    ? ((o.type += s),
                                                      (o.state.allowParams = !0),
                                                      (o.state.allowArray = !0))
                                                    : o.state.allowName
                                                    ? ((o.name += s),
                                                      delete o.state.allowArray)
                                                    : o.state.readArray
                                                    ? (o.type += s)
                                                    : n(r);
                                        }
                                    }
                                    return (
                                        o.parent &&
                                            V.throwArgumentError(
                                                'unexpected eof',
                                                'param',
                                                t
                                            ),
                                        delete s.state,
                                        'indexed' === o.name
                                            ? (e || n(r.length - 7),
                                              o.indexed && n(r.length - 7),
                                              (o.indexed = !0),
                                              (o.name = ''))
                                            : J(o.type, o.name) &&
                                              (o.name = ''),
                                        (s.type = lt(s.type)),
                                        s
                                    );
                                })(t, !!e)),
                                Q.fromObject({
                                    name: r.name,
                                    type: r.type,
                                    indexed: r.indexed,
                                    components: r.components,
                                })
                            );
                            var r;
                        }
                        static isParamType(t) {
                            return !(null == t || !t._isParamType);
                        }
                    }
                    function tt(t, e) {
                        return (function(t) {
                            t = t.trim();
                            let e = [],
                                r = '',
                                n = 0;
                            for (let i = 0; i < t.length; i++) {
                                let s = t[i];
                                ',' === s && 0 === n
                                    ? (e.push(r), (r = ''))
                                    : ((r += s),
                                      '(' === s
                                          ? n++
                                          : ')' === s &&
                                            (n--,
                                            -1 === n &&
                                                V.throwArgumentError(
                                                    'unbalanced parenthesis',
                                                    'value',
                                                    t
                                                )));
                            }
                            return r && e.push(r), e;
                        })(t).map(t => Q.fromString(t, e));
                    }
                    class et {
                        constructor(t, e) {
                            t !== q &&
                                V.throwError(
                                    'use a static from method',
                                    p.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new Fragment()' }
                                ),
                                X(this, e),
                                (this._isFragment = !0),
                                Object.freeze(this);
                        }
                        static from(t) {
                            return et.isFragment(t)
                                ? t
                                : 'string' == typeof t
                                ? et.fromString(t)
                                : et.fromObject(t);
                        }
                        static fromObject(t) {
                            if (et.isFragment(t)) return t;
                            switch (t.type) {
                                case 'function':
                                    return at.fromObject(t);
                                case 'event':
                                    return rt.fromObject(t);
                                case 'constructor':
                                    return ot.fromObject(t);
                                case 'error':
                                    return ht.fromObject(t);
                                case 'fallback':
                                case 'receive':
                                    return null;
                            }
                            return V.throwArgumentError(
                                'invalid fragment object',
                                'value',
                                t
                            );
                        }
                        static fromString(t) {
                            return 'event' ===
                                (t = (t = (t = t.replace(/\s/g, ' '))
                                    .replace(/\(/g, ' (')
                                    .replace(/\)/g, ') ')
                                    .replace(/\s+/g, ' ')).trim()).split(' ')[0]
                                ? rt.fromString(t.substring(5).trim())
                                : 'function' === t.split(' ')[0]
                                ? at.fromString(t.substring(8).trim())
                                : 'constructor' === t.split('(')[0].trim()
                                ? ot.fromString(t.trim())
                                : 'error' === t.split(' ')[0]
                                ? ht.fromString(t.substring(5).trim())
                                : V.throwArgumentError(
                                      'unsupported fragment',
                                      'value',
                                      t
                                  );
                        }
                        static isFragment(t) {
                            return !(!t || !t._isFragment);
                        }
                    }
                    class rt extends et {
                        format(t) {
                            if (
                                (t || (t = K.sighash),
                                K[t] ||
                                    V.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === K.json)
                            )
                                return JSON.stringify({
                                    type: 'event',
                                    anonymous: this.anonymous,
                                    name: this.name,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            let e = '';
                            return (
                                t !== K.sighash && (e += 'event '),
                                (e +=
                                    this.name +
                                    '(' +
                                    this.inputs
                                        .map(e => e.format(t))
                                        .join(t === K.full ? ', ' : ',') +
                                    ') '),
                                t !== K.sighash &&
                                    this.anonymous &&
                                    (e += 'anonymous '),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? rt.fromString(t)
                                : rt.fromObject(t);
                        }
                        static fromObject(t) {
                            if (rt.isEventFragment(t)) return t;
                            'event' !== t.type &&
                                V.throwArgumentError(
                                    'invalid event object',
                                    'value',
                                    t
                                );
                            const e = {
                                name: ft(t.name),
                                anonymous: t.anonymous,
                                inputs: t.inputs
                                    ? t.inputs.map(Q.fromObject)
                                    : [],
                                type: 'event',
                            };
                            return new rt(q, e);
                        }
                        static fromString(t) {
                            let e = t.match(dt);
                            e ||
                                V.throwArgumentError(
                                    'invalid event string',
                                    'value',
                                    t
                                );
                            let r = !1;
                            return (
                                e[3].split(' ').forEach(t => {
                                    switch (t.trim()) {
                                        case 'anonymous':
                                            r = !0;
                                            break;
                                        case '':
                                            break;
                                        default:
                                            V.warn('unknown modifier: ' + t);
                                    }
                                }),
                                rt.fromObject({
                                    name: e[1].trim(),
                                    anonymous: r,
                                    inputs: tt(e[2], !0),
                                    type: 'event',
                                })
                            );
                        }
                        static isEventFragment(t) {
                            return t && t._isFragment && 'event' === t.type;
                        }
                    }
                    function nt(t, e) {
                        e.gas = null;
                        let r = t.split('@');
                        return 1 !== r.length
                            ? (r.length > 2 &&
                                  V.throwArgumentError(
                                      'invalid human-readable ABI signature',
                                      'value',
                                      t
                                  ),
                              r[1].match(/^[0-9]+$/) ||
                                  V.throwArgumentError(
                                      'invalid human-readable ABI signature gas',
                                      'value',
                                      t
                                  ),
                              (e.gas = R.from(r[1])),
                              r[0])
                            : t;
                    }
                    function it(t, e) {
                        (e.constant = !1),
                            (e.payable = !1),
                            (e.stateMutability = 'nonpayable'),
                            t.split(' ').forEach(t => {
                                switch (t.trim()) {
                                    case 'constant':
                                        e.constant = !0;
                                        break;
                                    case 'payable':
                                        (e.payable = !0),
                                            (e.stateMutability = 'payable');
                                        break;
                                    case 'nonpayable':
                                        (e.payable = !1),
                                            (e.stateMutability = 'nonpayable');
                                        break;
                                    case 'pure':
                                        (e.constant = !0),
                                            (e.stateMutability = 'pure');
                                        break;
                                    case 'view':
                                        (e.constant = !0),
                                            (e.stateMutability = 'view');
                                        break;
                                    case 'external':
                                    case 'public':
                                    case '':
                                        break;
                                    default:
                                        console.log('unknown modifier: ' + t);
                                }
                            });
                    }
                    function st(t) {
                        let e = {
                            constant: !1,
                            payable: !0,
                            stateMutability: 'payable',
                        };
                        return (
                            null != t.stateMutability
                                ? ((e.stateMutability = t.stateMutability),
                                  (e.constant =
                                      'view' === e.stateMutability ||
                                      'pure' === e.stateMutability),
                                  null != t.constant &&
                                      !!t.constant !== e.constant &&
                                      V.throwArgumentError(
                                          'cannot have constant function with mutability ' +
                                              e.stateMutability,
                                          'value',
                                          t
                                      ),
                                  (e.payable = 'payable' === e.stateMutability),
                                  null != t.payable &&
                                      !!t.payable !== e.payable &&
                                      V.throwArgumentError(
                                          'cannot have payable function with mutability ' +
                                              e.stateMutability,
                                          'value',
                                          t
                                      ))
                                : null != t.payable
                                ? ((e.payable = !!t.payable),
                                  null != t.constant ||
                                      e.payable ||
                                      'constructor' === t.type ||
                                      V.throwArgumentError(
                                          'unable to determine stateMutability',
                                          'value',
                                          t
                                      ),
                                  (e.constant = !!t.constant),
                                  e.constant
                                      ? (e.stateMutability = 'view')
                                      : (e.stateMutability = e.payable
                                            ? 'payable'
                                            : 'nonpayable'),
                                  e.payable &&
                                      e.constant &&
                                      V.throwArgumentError(
                                          'cannot have constant payable function',
                                          'value',
                                          t
                                      ))
                                : null != t.constant
                                ? ((e.constant = !!t.constant),
                                  (e.payable = !e.constant),
                                  (e.stateMutability = e.constant
                                      ? 'view'
                                      : 'payable'))
                                : 'constructor' !== t.type &&
                                  V.throwArgumentError(
                                      'unable to determine stateMutability',
                                      'value',
                                      t
                                  ),
                            e
                        );
                    }
                    class ot extends et {
                        format(t) {
                            if (
                                (t || (t = K.sighash),
                                K[t] ||
                                    V.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === K.json)
                            )
                                return JSON.stringify({
                                    type: 'constructor',
                                    stateMutability:
                                        'nonpayable' !== this.stateMutability
                                            ? this.stateMutability
                                            : void 0,
                                    payable: this.payable,
                                    gas: this.gas
                                        ? this.gas.toNumber()
                                        : void 0,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            t === K.sighash &&
                                V.throwError(
                                    'cannot format a constructor for sighash',
                                    p.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'format(sighash)' }
                                );
                            let e =
                                'constructor(' +
                                this.inputs
                                    .map(e => e.format(t))
                                    .join(t === K.full ? ', ' : ',') +
                                ') ';
                            return (
                                this.stateMutability &&
                                    'nonpayable' !== this.stateMutability &&
                                    (e += this.stateMutability + ' '),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? ot.fromString(t)
                                : ot.fromObject(t);
                        }
                        static fromObject(t) {
                            if (ot.isConstructorFragment(t)) return t;
                            'constructor' !== t.type &&
                                V.throwArgumentError(
                                    'invalid constructor object',
                                    'value',
                                    t
                                );
                            let e = st(t);
                            e.constant &&
                                V.throwArgumentError(
                                    'constructor cannot be constant',
                                    'value',
                                    t
                                );
                            const r = {
                                name: null,
                                type: t.type,
                                inputs: t.inputs
                                    ? t.inputs.map(Q.fromObject)
                                    : [],
                                payable: e.payable,
                                stateMutability: e.stateMutability,
                                gas: t.gas ? R.from(t.gas) : null,
                            };
                            return new ot(q, r);
                        }
                        static fromString(t) {
                            let e = { type: 'constructor' },
                                r = (t = nt(t, e)).match(dt);
                            return (
                                (r && 'constructor' === r[1].trim()) ||
                                    V.throwArgumentError(
                                        'invalid constructor string',
                                        'value',
                                        t
                                    ),
                                (e.inputs = tt(r[2].trim(), !1)),
                                it(r[3].trim(), e),
                                ot.fromObject(e)
                            );
                        }
                        static isConstructorFragment(t) {
                            return (
                                t && t._isFragment && 'constructor' === t.type
                            );
                        }
                    }
                    class at extends ot {
                        format(t) {
                            if (
                                (t || (t = K.sighash),
                                K[t] ||
                                    V.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === K.json)
                            )
                                return JSON.stringify({
                                    type: 'function',
                                    name: this.name,
                                    constant: this.constant,
                                    stateMutability:
                                        'nonpayable' !== this.stateMutability
                                            ? this.stateMutability
                                            : void 0,
                                    payable: this.payable,
                                    gas: this.gas
                                        ? this.gas.toNumber()
                                        : void 0,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                    outputs: this.outputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            let e = '';
                            return (
                                t !== K.sighash && (e += 'function '),
                                (e +=
                                    this.name +
                                    '(' +
                                    this.inputs
                                        .map(e => e.format(t))
                                        .join(t === K.full ? ', ' : ',') +
                                    ') '),
                                t !== K.sighash &&
                                    (this.stateMutability
                                        ? 'nonpayable' !==
                                              this.stateMutability &&
                                          (e += this.stateMutability + ' ')
                                        : this.constant && (e += 'view '),
                                    this.outputs &&
                                        this.outputs.length &&
                                        (e +=
                                            'returns (' +
                                            this.outputs
                                                .map(e => e.format(t))
                                                .join(', ') +
                                            ') '),
                                    null != this.gas &&
                                        (e += '@' + this.gas.toString() + ' ')),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? at.fromString(t)
                                : at.fromObject(t);
                        }
                        static fromObject(t) {
                            if (at.isFunctionFragment(t)) return t;
                            'function' !== t.type &&
                                V.throwArgumentError(
                                    'invalid function object',
                                    'value',
                                    t
                                );
                            let e = st(t);
                            const r = {
                                type: t.type,
                                name: ft(t.name),
                                constant: e.constant,
                                inputs: t.inputs
                                    ? t.inputs.map(Q.fromObject)
                                    : [],
                                outputs: t.outputs
                                    ? t.outputs.map(Q.fromObject)
                                    : [],
                                payable: e.payable,
                                stateMutability: e.stateMutability,
                                gas: t.gas ? R.from(t.gas) : null,
                            };
                            return new at(q, r);
                        }
                        static fromString(t) {
                            let e = { type: 'function' },
                                r = (t = nt(t, e)).split(' returns ');
                            r.length > 2 &&
                                V.throwArgumentError(
                                    'invalid function string',
                                    'value',
                                    t
                                );
                            let n = r[0].match(dt);
                            if (
                                (n ||
                                    V.throwArgumentError(
                                        'invalid function signature',
                                        'value',
                                        t
                                    ),
                                (e.name = n[1].trim()),
                                e.name && ft(e.name),
                                (e.inputs = tt(n[2], !1)),
                                it(n[3].trim(), e),
                                r.length > 1)
                            ) {
                                let n = r[1].match(dt);
                                ('' == n[1].trim() && '' == n[3].trim()) ||
                                    V.throwArgumentError(
                                        'unexpected tokens',
                                        'value',
                                        t
                                    ),
                                    (e.outputs = tt(n[2], !1));
                            } else e.outputs = [];
                            return at.fromObject(e);
                        }
                        static isFunctionFragment(t) {
                            return t && t._isFragment && 'function' === t.type;
                        }
                    }
                    function ut(t) {
                        const e = t.format();
                        return (
                            ('Error(string)' !== e && 'Panic(uint256)' !== e) ||
                                V.throwArgumentError(
                                    `cannot specify user defined ${e} error`,
                                    'fragment',
                                    t
                                ),
                            t
                        );
                    }
                    class ht extends et {
                        format(t) {
                            if (
                                (t || (t = K.sighash),
                                K[t] ||
                                    V.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === K.json)
                            )
                                return JSON.stringify({
                                    type: 'error',
                                    name: this.name,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            let e = '';
                            return (
                                t !== K.sighash && (e += 'error '),
                                (e +=
                                    this.name +
                                    '(' +
                                    this.inputs
                                        .map(e => e.format(t))
                                        .join(t === K.full ? ', ' : ',') +
                                    ') '),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? ht.fromString(t)
                                : ht.fromObject(t);
                        }
                        static fromObject(t) {
                            if (ht.isErrorFragment(t)) return t;
                            'error' !== t.type &&
                                V.throwArgumentError(
                                    'invalid error object',
                                    'value',
                                    t
                                );
                            const e = {
                                type: t.type,
                                name: ft(t.name),
                                inputs: t.inputs
                                    ? t.inputs.map(Q.fromObject)
                                    : [],
                            };
                            return ut(new ht(q, e));
                        }
                        static fromString(t) {
                            let e = { type: 'error' },
                                r = t.match(dt);
                            return (
                                r ||
                                    V.throwArgumentError(
                                        'invalid error signature',
                                        'value',
                                        t
                                    ),
                                (e.name = r[1].trim()),
                                e.name && ft(e.name),
                                (e.inputs = tt(r[2], !1)),
                                ut(ht.fromObject(e))
                            );
                        }
                        static isErrorFragment(t) {
                            return t && t._isFragment && 'error' === t.type;
                        }
                    }
                    function lt(t) {
                        return (
                            t.match(/^uint($|[^1-9])/)
                                ? (t = 'uint256' + t.substring(4))
                                : t.match(/^int($|[^1-9])/) &&
                                  (t = 'int256' + t.substring(3)),
                            t
                        );
                    }
                    const ct = new RegExp('^[a-zA-Z$_][a-zA-Z0-9$_]*$');
                    function ft(t) {
                        return (
                            (t && t.match(ct)) ||
                                V.throwArgumentError(
                                    `invalid identifier "${t}"`,
                                    'value',
                                    t
                                ),
                            t
                        );
                    }
                    const dt = new RegExp('^([^)(]*)\\((.*)\\)([^)(]*)$'),
                        pt = new p($);
                    function mt(t) {
                        const e = [],
                            r = function(t, n) {
                                if (Array.isArray(n))
                                    for (let i in n) {
                                        const s = t.slice();
                                        s.push(i);
                                        try {
                                            r(s, n[i]);
                                        } catch (t) {
                                            e.push({ path: s, error: t });
                                        }
                                    }
                            };
                        return r([], t), e;
                    }
                    class gt {
                        constructor(t, e, r, n) {
                            (this.name = t),
                                (this.type = e),
                                (this.localName = r),
                                (this.dynamic = n);
                        }
                        _throwError(t, e) {
                            pt.throwArgumentError(t, this.localName, e);
                        }
                    }
                    class yt {
                        constructor(t) {
                            F(this, 'wordSize', t || 32),
                                (this._data = []),
                                (this._dataLength = 0),
                                (this._padding = new Uint8Array(t));
                        }
                        get data() {
                            return (function(t) {
                                let e = '0x';
                                return (
                                    t.forEach(t => {
                                        e += A(t).substring(2);
                                    }),
                                    e
                                );
                            })(this._data);
                        }
                        get length() {
                            return this._dataLength;
                        }
                        _writeData(t) {
                            return (
                                this._data.push(t),
                                (this._dataLength += t.length),
                                t.length
                            );
                        }
                        appendWriter(t) {
                            return this._writeData(M(t._data));
                        }
                        writeBytes(t) {
                            let e = b(t);
                            const r = e.length % this.wordSize;
                            return (
                                r && (e = M([e, this._padding.slice(r)])),
                                this._writeData(e)
                            );
                        }
                        _getValue(t) {
                            let e = b(R.from(t));
                            return (
                                e.length > this.wordSize &&
                                    pt.throwError(
                                        'value out-of-bounds',
                                        p.errors.BUFFER_OVERRUN,
                                        {
                                            length: this.wordSize,
                                            offset: e.length,
                                        }
                                    ),
                                e.length % this.wordSize &&
                                    (e = M([
                                        this._padding.slice(
                                            e.length % this.wordSize
                                        ),
                                        e,
                                    ])),
                                e
                            );
                        }
                        writeValue(t) {
                            return this._writeData(this._getValue(t));
                        }
                        writeUpdatableValue() {
                            const t = this._data.length;
                            return (
                                this._data.push(this._padding),
                                (this._dataLength += this.wordSize),
                                e => {
                                    this._data[t] = this._getValue(e);
                                }
                            );
                        }
                    }
                    class vt {
                        constructor(t, e, r, n) {
                            F(this, '_data', b(t)),
                                F(this, 'wordSize', e || 32),
                                F(this, '_coerceFunc', r),
                                F(this, 'allowLoose', n),
                                (this._offset = 0);
                        }
                        get data() {
                            return A(this._data);
                        }
                        get consumed() {
                            return this._offset;
                        }
                        static coerce(t, e) {
                            let r = t.match('^u?int([0-9]+)$');
                            return (
                                r && parseInt(r[1]) <= 48 && (e = e.toNumber()),
                                e
                            );
                        }
                        coerce(t, e) {
                            return this._coerceFunc
                                ? this._coerceFunc(t, e)
                                : vt.coerce(t, e);
                        }
                        _peekBytes(t, e, r) {
                            let n =
                                Math.ceil(e / this.wordSize) * this.wordSize;
                            return (
                                this._offset + n > this._data.length &&
                                    (this.allowLoose &&
                                    r &&
                                    this._offset + e <= this._data.length
                                        ? (n = e)
                                        : pt.throwError(
                                              'data out-of-bounds',
                                              p.errors.BUFFER_OVERRUN,
                                              {
                                                  length: this._data.length,
                                                  offset: this._offset + n,
                                              }
                                          )),
                                this._data.slice(this._offset, this._offset + n)
                            );
                        }
                        subReader(t) {
                            return new vt(
                                this._data.slice(this._offset + t),
                                this.wordSize,
                                this._coerceFunc,
                                this.allowLoose
                            );
                        }
                        readBytes(t, e) {
                            let r = this._peekBytes(0, t, !!e);
                            return (this._offset += r.length), r.slice(0, t);
                        }
                        readValue() {
                            return R.from(this.readBytes(this.wordSize));
                        }
                    }
                    var wt = r(643),
                        bt = r.n(wt);
                    function Mt(t) {
                        return '0x' + bt().keccak_256(b(t));
                    }
                    const Et = new p('address/5.7.0');
                    function _t(t) {
                        E(t, 20) ||
                            Et.throwArgumentError(
                                'invalid address',
                                'address',
                                t
                            );
                        const e = (t = t.toLowerCase()).substring(2).split(''),
                            r = new Uint8Array(40);
                        for (let t = 0; t < 40; t++) r[t] = e[t].charCodeAt(0);
                        const n = b(Mt(r));
                        for (let t = 0; t < 40; t += 2)
                            n[t >> 1] >> 4 >= 8 && (e[t] = e[t].toUpperCase()),
                                (15 & n[t >> 1]) >= 8 &&
                                    (e[t + 1] = e[t + 1].toUpperCase());
                        return '0x' + e.join('');
                    }
                    const At = {};
                    for (let t = 0; t < 10; t++) At[String(t)] = String(t);
                    for (let t = 0; t < 26; t++)
                        At[String.fromCharCode(65 + t)] = String(10 + t);
                    const Nt = Math.floor(
                        ((Ot = 9007199254740991),
                        Math.log10 ? Math.log10(Ot) : Math.log(Ot) / Math.LN10)
                    );
                    var Ot;
                    function St(t) {
                        let e = null;
                        if (
                            ('string' != typeof t &&
                                Et.throwArgumentError(
                                    'invalid address',
                                    'address',
                                    t
                                ),
                            t.match(/^(0x)?[0-9a-fA-F]{40}$/))
                        )
                            '0x' !== t.substring(0, 2) && (t = '0x' + t),
                                (e = _t(t)),
                                t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) &&
                                    e !== t &&
                                    Et.throwArgumentError(
                                        'bad address checksum',
                                        'address',
                                        t
                                    );
                        else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                            for (
                                t.substring(2, 4) !==
                                    (function(t) {
                                        let e = (t =
                                            (t = t.toUpperCase()).substring(4) +
                                            t.substring(0, 2) +
                                            '00')
                                            .split('')
                                            .map(t => At[t])
                                            .join('');
                                        for (; e.length >= Nt; ) {
                                            let t = e.substring(0, Nt);
                                            e =
                                                (parseInt(t, 10) % 97) +
                                                e.substring(t.length);
                                        }
                                        let r = String(
                                            98 - (parseInt(e, 10) % 97)
                                        );
                                        for (; r.length < 2; ) r = '0' + r;
                                        return r;
                                    })(t) &&
                                    Et.throwArgumentError(
                                        'bad icap checksum',
                                        'address',
                                        t
                                    ),
                                    r = t.substring(4),
                                    e = new O(r, 36).toString(16);
                                e.length < 40;

                            )
                                e = '0' + e;
                            e = _t('0x' + e);
                        } else
                            Et.throwArgumentError(
                                'invalid address',
                                'address',
                                t
                            );
                        var r;
                        return e;
                    }
                    class xt extends gt {
                        constructor(t) {
                            super('address', 'address', t, !1);
                        }
                        defaultValue() {
                            return '0x0000000000000000000000000000000000000000';
                        }
                        encode(t, e) {
                            try {
                                e = St(e);
                            } catch (t) {
                                this._throwError(t.message, e);
                            }
                            return t.writeValue(e);
                        }
                        decode(t) {
                            return St(N(t.readValue().toHexString(), 20));
                        }
                    }
                    class Pt extends gt {
                        constructor(t) {
                            super(t.name, t.type, void 0, t.dynamic),
                                (this.coder = t);
                        }
                        defaultValue() {
                            return this.coder.defaultValue();
                        }
                        encode(t, e) {
                            return this.coder.encode(t, e);
                        }
                        decode(t) {
                            return this.coder.decode(t);
                        }
                    }
                    const Tt = new p($);
                    function Rt(t, e, r) {
                        let n = null;
                        if (Array.isArray(r)) n = r;
                        else if (r && 'object' == typeof r) {
                            let t = {};
                            n = e.map(e => {
                                const n = e.localName;
                                return (
                                    n ||
                                        Tt.throwError(
                                            'cannot encode object for signature with missing names',
                                            p.errors.INVALID_ARGUMENT,
                                            {
                                                argument: 'values',
                                                coder: e,
                                                value: r,
                                            }
                                        ),
                                    t[n] &&
                                        Tt.throwError(
                                            'cannot encode object for signature with duplicate names',
                                            p.errors.INVALID_ARGUMENT,
                                            {
                                                argument: 'values',
                                                coder: e,
                                                value: r,
                                            }
                                        ),
                                    (t[n] = !0),
                                    r[n]
                                );
                            });
                        } else
                            Tt.throwArgumentError(
                                'invalid tuple value',
                                'tuple',
                                r
                            );
                        e.length !== n.length &&
                            Tt.throwArgumentError(
                                'types/value length mismatch',
                                'tuple',
                                r
                            );
                        let i = new yt(t.wordSize),
                            s = new yt(t.wordSize),
                            o = [];
                        e.forEach((t, e) => {
                            let r = n[e];
                            if (t.dynamic) {
                                let e = s.length;
                                t.encode(s, r);
                                let n = i.writeUpdatableValue();
                                o.push(t => {
                                    n(t + e);
                                });
                            } else t.encode(i, r);
                        }),
                            o.forEach(t => {
                                t(i.length);
                            });
                        let a = t.appendWriter(i);
                        return (a += t.appendWriter(s)), a;
                    }
                    function kt(t, e) {
                        let r = [],
                            n = t.subReader(0);
                        e.forEach(e => {
                            let i = null;
                            if (e.dynamic) {
                                let r = t.readValue(),
                                    s = n.subReader(r.toNumber());
                                try {
                                    i = e.decode(s);
                                } catch (t) {
                                    if (t.code === p.errors.BUFFER_OVERRUN)
                                        throw t;
                                    (i = t),
                                        (i.baseType = e.name),
                                        (i.name = e.localName),
                                        (i.type = e.type);
                                }
                            } else
                                try {
                                    i = e.decode(t);
                                } catch (t) {
                                    if (t.code === p.errors.BUFFER_OVERRUN)
                                        throw t;
                                    (i = t),
                                        (i.baseType = e.name),
                                        (i.name = e.localName),
                                        (i.type = e.type);
                                }
                            null != i && r.push(i);
                        });
                        const i = e.reduce((t, e) => {
                            const r = e.localName;
                            return r && (t[r] || (t[r] = 0), t[r]++), t;
                        }, {});
                        e.forEach((t, e) => {
                            let n = t.localName;
                            if (!n || 1 !== i[n]) return;
                            if (
                                ('length' === n && (n = '_length'),
                                null != r[n])
                            )
                                return;
                            const s = r[e];
                            s instanceof Error
                                ? Object.defineProperty(r, n, {
                                      enumerable: !0,
                                      get: () => {
                                          throw s;
                                      },
                                  })
                                : (r[n] = s);
                        });
                        for (let t = 0; t < r.length; t++) {
                            const e = r[t];
                            e instanceof Error &&
                                Object.defineProperty(r, t, {
                                    enumerable: !0,
                                    get: () => {
                                        throw e;
                                    },
                                });
                        }
                        return Object.freeze(r);
                    }
                    class It extends gt {
                        constructor(t, e, r) {
                            super(
                                'array',
                                t.type + '[' + (e >= 0 ? e : '') + ']',
                                r,
                                -1 === e || t.dynamic
                            ),
                                (this.coder = t),
                                (this.length = e);
                        }
                        defaultValue() {
                            const t = this.coder.defaultValue(),
                                e = [];
                            for (let r = 0; r < this.length; r++) e.push(t);
                            return e;
                        }
                        encode(t, e) {
                            Array.isArray(e) ||
                                this._throwError('expected array value', e);
                            let r = this.length;
                            -1 === r &&
                                ((r = e.length), t.writeValue(e.length)),
                                Tt.checkArgumentCount(
                                    e.length,
                                    r,
                                    'coder array' +
                                        (this.localName
                                            ? ' ' + this.localName
                                            : '')
                                );
                            let n = [];
                            for (let t = 0; t < e.length; t++)
                                n.push(this.coder);
                            return Rt(t, n, e);
                        }
                        decode(t) {
                            let e = this.length;
                            -1 === e &&
                                ((e = t.readValue().toNumber()),
                                32 * e > t._data.length &&
                                    Tt.throwError(
                                        'insufficient data length',
                                        p.errors.BUFFER_OVERRUN,
                                        { length: t._data.length, count: e }
                                    ));
                            let r = [];
                            for (let t = 0; t < e; t++)
                                r.push(new Pt(this.coder));
                            return t.coerce(this.name, kt(t, r));
                        }
                    }
                    class Bt extends gt {
                        constructor(t) {
                            super('bool', 'bool', t, !1);
                        }
                        defaultValue() {
                            return !1;
                        }
                        encode(t, e) {
                            return t.writeValue(e ? 1 : 0);
                        }
                        decode(t) {
                            return t.coerce(this.type, !t.readValue().isZero());
                        }
                    }
                    class Ct extends gt {
                        constructor(t, e) {
                            super(t, t, e, !0);
                        }
                        defaultValue() {
                            return '0x';
                        }
                        encode(t, e) {
                            e = b(e);
                            let r = t.writeValue(e.length);
                            return (r += t.writeBytes(e)), r;
                        }
                        decode(t) {
                            return t.readBytes(t.readValue().toNumber(), !0);
                        }
                    }
                    class Lt extends Ct {
                        constructor(t) {
                            super('bytes', t);
                        }
                        decode(t) {
                            return t.coerce(this.name, A(super.decode(t)));
                        }
                    }
                    class Ft extends gt {
                        constructor(t, e) {
                            let r = 'bytes' + String(t);
                            super(r, r, e, !1), (this.size = t);
                        }
                        defaultValue() {
                            return '0x0000000000000000000000000000000000000000000000000000000000000000'.substring(
                                0,
                                2 + 2 * this.size
                            );
                        }
                        encode(t, e) {
                            let r = b(e);
                            return (
                                r.length !== this.size &&
                                    this._throwError(
                                        'incorrect data length',
                                        e
                                    ),
                                t.writeBytes(r)
                            );
                        }
                        decode(t) {
                            return t.coerce(
                                this.name,
                                A(t.readBytes(this.size))
                            );
                        }
                    }
                    class Ut extends gt {
                        constructor(t) {
                            super('null', '', t, !1);
                        }
                        defaultValue() {
                            return null;
                        }
                        encode(t, e) {
                            return (
                                null != e && this._throwError('not null', e),
                                t.writeBytes([])
                            );
                        }
                        decode(t) {
                            return t.readBytes(0), t.coerce(this.name, null);
                        }
                    }
                    const Dt = R.from(-1),
                        jt = R.from(0),
                        zt = R.from(1),
                        Gt = R.from(
                            '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
                        );
                    class Ht extends gt {
                        constructor(t, e, r) {
                            const n = (e ? 'int' : 'uint') + 8 * t;
                            super(n, n, r, !1),
                                (this.size = t),
                                (this.signed = e);
                        }
                        defaultValue() {
                            return 0;
                        }
                        encode(t, e) {
                            let r = R.from(e),
                                n = Gt.mask(8 * t.wordSize);
                            if (this.signed) {
                                let t = n.mask(8 * this.size - 1);
                                (r.gt(t) || r.lt(t.add(zt).mul(Dt))) &&
                                    this._throwError('value out-of-bounds', e);
                            } else
                                (r.lt(jt) || r.gt(n.mask(8 * this.size))) &&
                                    this._throwError('value out-of-bounds', e);
                            return (
                                (r = r
                                    .toTwos(8 * this.size)
                                    .mask(8 * this.size)),
                                this.signed &&
                                    (r = r
                                        .fromTwos(8 * this.size)
                                        .toTwos(8 * t.wordSize)),
                                t.writeValue(r)
                            );
                        }
                        decode(t) {
                            let e = t.readValue().mask(8 * this.size);
                            return (
                                this.signed && (e = e.fromTwos(8 * this.size)),
                                t.coerce(this.name, e)
                            );
                        }
                    }
                    const $t = new p('strings/5.7.0');
                    var Vt, qt;
                    function Wt(t, e, r, n, i) {
                        if (
                            t === qt.BAD_PREFIX ||
                            t === qt.UNEXPECTED_CONTINUE
                        ) {
                            let t = 0;
                            for (
                                let n = e + 1;
                                n < r.length && r[n] >> 6 == 2;
                                n++
                            )
                                t++;
                            return t;
                        }
                        return t === qt.OVERRUN ? r.length - e - 1 : 0;
                    }
                    !(function(t) {
                        (t.current = ''),
                            (t.NFC = 'NFC'),
                            (t.NFD = 'NFD'),
                            (t.NFKC = 'NFKC'),
                            (t.NFKD = 'NFKD');
                    })(Vt || (Vt = {})),
                        (function(t) {
                            (t.UNEXPECTED_CONTINUE =
                                'unexpected continuation byte'),
                                (t.BAD_PREFIX = 'bad codepoint prefix'),
                                (t.OVERRUN = 'string overrun'),
                                (t.MISSING_CONTINUE =
                                    'missing continuation byte'),
                                (t.OUT_OF_RANGE = 'out of UTF-8 range'),
                                (t.UTF16_SURROGATE = 'UTF-16 surrogate'),
                                (t.OVERLONG = 'overlong representation');
                        })(qt || (qt = {}));
                    const Zt = Object.freeze({
                        error: function(t, e, r, n, i) {
                            return $t.throwArgumentError(
                                `invalid codepoint at offset ${e}; ${t}`,
                                'bytes',
                                r
                            );
                        },
                        ignore: Wt,
                        replace: function(t, e, r, n, i) {
                            return t === qt.OVERLONG
                                ? (n.push(i), 0)
                                : (n.push(65533), Wt(t, e, r));
                        },
                    });
                    function Jt(t, e = Vt.current) {
                        e != Vt.current &&
                            ($t.checkNormalize(), (t = t.normalize(e)));
                        let r = [];
                        for (let e = 0; e < t.length; e++) {
                            const n = t.charCodeAt(e);
                            if (n < 128) r.push(n);
                            else if (n < 2048)
                                r.push((n >> 6) | 192), r.push((63 & n) | 128);
                            else if (55296 == (64512 & n)) {
                                e++;
                                const i = t.charCodeAt(e);
                                if (e >= t.length || 56320 != (64512 & i))
                                    throw new Error('invalid utf-8 string');
                                const s =
                                    65536 + ((1023 & n) << 10) + (1023 & i);
                                r.push((s >> 18) | 240),
                                    r.push(((s >> 12) & 63) | 128),
                                    r.push(((s >> 6) & 63) | 128),
                                    r.push((63 & s) | 128);
                            } else
                                r.push((n >> 12) | 224),
                                    r.push(((n >> 6) & 63) | 128),
                                    r.push((63 & n) | 128);
                        }
                        return b(r);
                    }
                    function Xt(t, e) {
                        return (function(t, e) {
                            null == e && (e = Zt.error), (t = b(t));
                            const r = [];
                            let n = 0;
                            for (; n < t.length; ) {
                                const i = t[n++];
                                if (!(i >> 7)) {
                                    r.push(i);
                                    continue;
                                }
                                let s = null,
                                    o = null;
                                if (192 == (224 & i)) (s = 1), (o = 127);
                                else if (224 == (240 & i)) (s = 2), (o = 2047);
                                else {
                                    if (240 != (248 & i)) {
                                        n += e(
                                            128 == (192 & i)
                                                ? qt.UNEXPECTED_CONTINUE
                                                : qt.BAD_PREFIX,
                                            n - 1,
                                            t,
                                            r
                                        );
                                        continue;
                                    }
                                    (s = 3), (o = 65535);
                                }
                                if (n - 1 + s >= t.length) {
                                    n += e(qt.OVERRUN, n - 1, t, r);
                                    continue;
                                }
                                let a = i & ((1 << (8 - s - 1)) - 1);
                                for (let i = 0; i < s; i++) {
                                    let i = t[n];
                                    if (128 != (192 & i)) {
                                        (n += e(qt.MISSING_CONTINUE, n, t, r)),
                                            (a = null);
                                        break;
                                    }
                                    (a = (a << 6) | (63 & i)), n++;
                                }
                                null !== a &&
                                    (a > 1114111
                                        ? (n += e(
                                              qt.OUT_OF_RANGE,
                                              n - 1 - s,
                                              t,
                                              r,
                                              a
                                          ))
                                        : a >= 55296 && a <= 57343
                                        ? (n += e(
                                              qt.UTF16_SURROGATE,
                                              n - 1 - s,
                                              t,
                                              r,
                                              a
                                          ))
                                        : a <= o
                                        ? (n += e(
                                              qt.OVERLONG,
                                              n - 1 - s,
                                              t,
                                              r,
                                              a
                                          ))
                                        : r.push(a));
                            }
                            return r;
                        })(t, e)
                            .map(t =>
                                t <= 65535
                                    ? String.fromCharCode(t)
                                    : ((t -= 65536),
                                      String.fromCharCode(
                                          55296 + ((t >> 10) & 1023),
                                          56320 + (1023 & t)
                                      ))
                            )
                            .join('');
                    }
                    class Kt extends Ct {
                        constructor(t) {
                            super('string', t);
                        }
                        defaultValue() {
                            return '';
                        }
                        encode(t, e) {
                            return super.encode(t, Jt(e));
                        }
                        decode(t) {
                            return Xt(super.decode(t));
                        }
                    }
                    class Yt extends gt {
                        constructor(t, e) {
                            let r = !1;
                            const n = [];
                            t.forEach(t => {
                                t.dynamic && (r = !0), n.push(t.type);
                            }),
                                super(
                                    'tuple',
                                    'tuple(' + n.join(',') + ')',
                                    e,
                                    r
                                ),
                                (this.coders = t);
                        }
                        defaultValue() {
                            const t = [];
                            this.coders.forEach(e => {
                                t.push(e.defaultValue());
                            });
                            const e = this.coders.reduce((t, e) => {
                                const r = e.localName;
                                return r && (t[r] || (t[r] = 0), t[r]++), t;
                            }, {});
                            return (
                                this.coders.forEach((r, n) => {
                                    let i = r.localName;
                                    i &&
                                        1 === e[i] &&
                                        ('length' === i && (i = '_length'),
                                        null == t[i] && (t[i] = t[n]));
                                }),
                                Object.freeze(t)
                            );
                        }
                        encode(t, e) {
                            return Rt(t, this.coders, e);
                        }
                        decode(t) {
                            return t.coerce(this.name, kt(t, this.coders));
                        }
                    }
                    const Qt = new p($),
                        te = new RegExp(/^bytes([0-9]*)$/),
                        ee = new RegExp(/^(u?int)([0-9]*)$/);
                    class re {
                        constructor(t) {
                            F(this, 'coerceFunc', t || null);
                        }
                        _getCoder(t) {
                            switch (t.baseType) {
                                case 'address':
                                    return new xt(t.name);
                                case 'bool':
                                    return new Bt(t.name);
                                case 'string':
                                    return new Kt(t.name);
                                case 'bytes':
                                    return new Lt(t.name);
                                case 'array':
                                    return new It(
                                        this._getCoder(t.arrayChildren),
                                        t.arrayLength,
                                        t.name
                                    );
                                case 'tuple':
                                    return new Yt(
                                        (t.components || []).map(t =>
                                            this._getCoder(t)
                                        ),
                                        t.name
                                    );
                                case '':
                                    return new Ut(t.name);
                            }
                            let e = t.type.match(ee);
                            if (e) {
                                let r = parseInt(e[2] || '256');
                                return (
                                    (0 === r || r > 256 || r % 8 != 0) &&
                                        Qt.throwArgumentError(
                                            'invalid ' + e[1] + ' bit length',
                                            'param',
                                            t
                                        ),
                                    new Ht(r / 8, 'int' === e[1], t.name)
                                );
                            }
                            if (((e = t.type.match(te)), e)) {
                                let r = parseInt(e[1]);
                                return (
                                    (0 === r || r > 32) &&
                                        Qt.throwArgumentError(
                                            'invalid bytes length',
                                            'param',
                                            t
                                        ),
                                    new Ft(r, t.name)
                                );
                            }
                            return Qt.throwArgumentError(
                                'invalid type',
                                'type',
                                t.type
                            );
                        }
                        _getWordSize() {
                            return 32;
                        }
                        _getReader(t, e) {
                            return new vt(
                                t,
                                this._getWordSize(),
                                this.coerceFunc,
                                e
                            );
                        }
                        _getWriter() {
                            return new yt(this._getWordSize());
                        }
                        getDefaultValue(t) {
                            const e = t.map(t => this._getCoder(Q.from(t)));
                            return new Yt(e, '_').defaultValue();
                        }
                        encode(t, e) {
                            t.length !== e.length &&
                                Qt.throwError(
                                    'types/values length mismatch',
                                    p.errors.INVALID_ARGUMENT,
                                    {
                                        count: {
                                            types: t.length,
                                            values: e.length,
                                        },
                                        value: { types: t, values: e },
                                    }
                                );
                            const r = t.map(t => this._getCoder(Q.from(t))),
                                n = new Yt(r, '_'),
                                i = this._getWriter();
                            return n.encode(i, e), i.data;
                        }
                        decode(t, e, r) {
                            const n = t.map(t => this._getCoder(Q.from(t)));
                            return new Yt(n, '_').decode(
                                this._getReader(b(e), r)
                            );
                        }
                    }
                    const ne = new re();
                    function ie(t) {
                        return Mt(Jt(t));
                    }
                    const se = new p($);
                    class oe extends H {}
                    class ae extends H {}
                    class ue extends H {}
                    class he extends H {
                        static isIndexed(t) {
                            return !(!t || !t._isIndexed);
                        }
                    }
                    const le = {
                        '0x08c379a0': {
                            signature: 'Error(string)',
                            name: 'Error',
                            inputs: ['string'],
                            reason: !0,
                        },
                        '0x4e487b71': {
                            signature: 'Panic(uint256)',
                            name: 'Panic',
                            inputs: ['uint256'],
                        },
                    };
                    function ce(t, e) {
                        const r = new Error(
                            `deferred error during ABI decoding triggered accessing ${t}`
                        );
                        return (r.error = e), r;
                    }
                    class fe {
                        constructor(t) {
                            let e = [];
                            (e = 'string' == typeof t ? JSON.parse(t) : t),
                                F(
                                    this,
                                    'fragments',
                                    e
                                        .map(t => et.from(t))
                                        .filter(t => null != t)
                                ),
                                F(
                                    this,
                                    '_abiCoder',
                                    U(new.target, 'getAbiCoder')()
                                ),
                                F(this, 'functions', {}),
                                F(this, 'errors', {}),
                                F(this, 'events', {}),
                                F(this, 'structs', {}),
                                this.fragments.forEach(t => {
                                    let e = null;
                                    switch (t.type) {
                                        case 'constructor':
                                            return this.deploy
                                                ? void se.warn(
                                                      'duplicate definition - constructor'
                                                  )
                                                : void F(this, 'deploy', t);
                                        case 'function':
                                            e = this.functions;
                                            break;
                                        case 'event':
                                            e = this.events;
                                            break;
                                        case 'error':
                                            e = this.errors;
                                            break;
                                        default:
                                            return;
                                    }
                                    let r = t.format();
                                    e[r]
                                        ? se.warn('duplicate definition - ' + r)
                                        : (e[r] = t);
                                }),
                                this.deploy ||
                                    F(
                                        this,
                                        'deploy',
                                        ot.from({
                                            payable: !1,
                                            type: 'constructor',
                                        })
                                    ),
                                F(this, '_isInterface', !0);
                        }
                        format(t) {
                            t || (t = K.full),
                                t === K.sighash &&
                                    se.throwArgumentError(
                                        'interface does not support formatting sighash',
                                        'format',
                                        t
                                    );
                            const e = this.fragments.map(e => e.format(t));
                            return t === K.json
                                ? JSON.stringify(e.map(t => JSON.parse(t)))
                                : e;
                        }
                        static getAbiCoder() {
                            return ne;
                        }
                        static getAddress(t) {
                            return St(t);
                        }
                        static getSighash(t) {
                            return (
                                (r = 0),
                                'string' != typeof (e = ie(t.format()))
                                    ? (e = A(e))
                                    : (!E(e) || e.length % 2) &&
                                      m.throwArgumentError(
                                          'invalid hexData',
                                          'value',
                                          e
                                      ),
                                (r = 2 + 2 * r),
                                '0x' + e.substring(r, 10)
                            );
                            var e, r;
                        }
                        static getEventTopic(t) {
                            return ie(t.format());
                        }
                        getFunction(t) {
                            if (E(t)) {
                                for (const e in this.functions)
                                    if (t === this.getSighash(e))
                                        return this.functions[e];
                                se.throwArgumentError(
                                    'no matching function',
                                    'sighash',
                                    t
                                );
                            }
                            if (-1 === t.indexOf('(')) {
                                const e = t.trim(),
                                    r = Object.keys(this.functions).filter(
                                        t => t.split('(')[0] === e
                                    );
                                return (
                                    0 === r.length
                                        ? se.throwArgumentError(
                                              'no matching function',
                                              'name',
                                              e
                                          )
                                        : r.length > 1 &&
                                          se.throwArgumentError(
                                              'multiple matching functions',
                                              'name',
                                              e
                                          ),
                                    this.functions[r[0]]
                                );
                            }
                            const e = this.functions[at.fromString(t).format()];
                            return (
                                e ||
                                    se.throwArgumentError(
                                        'no matching function',
                                        'signature',
                                        t
                                    ),
                                e
                            );
                        }
                        getEvent(t) {
                            if (E(t)) {
                                const e = t.toLowerCase();
                                for (const t in this.events)
                                    if (e === this.getEventTopic(t))
                                        return this.events[t];
                                se.throwArgumentError(
                                    'no matching event',
                                    'topichash',
                                    e
                                );
                            }
                            if (-1 === t.indexOf('(')) {
                                const e = t.trim(),
                                    r = Object.keys(this.events).filter(
                                        t => t.split('(')[0] === e
                                    );
                                return (
                                    0 === r.length
                                        ? se.throwArgumentError(
                                              'no matching event',
                                              'name',
                                              e
                                          )
                                        : r.length > 1 &&
                                          se.throwArgumentError(
                                              'multiple matching events',
                                              'name',
                                              e
                                          ),
                                    this.events[r[0]]
                                );
                            }
                            const e = this.events[rt.fromString(t).format()];
                            return (
                                e ||
                                    se.throwArgumentError(
                                        'no matching event',
                                        'signature',
                                        t
                                    ),
                                e
                            );
                        }
                        getError(t) {
                            if (E(t)) {
                                const e = U(this.constructor, 'getSighash');
                                for (const r in this.errors)
                                    if (t === e(this.errors[r]))
                                        return this.errors[r];
                                se.throwArgumentError(
                                    'no matching error',
                                    'sighash',
                                    t
                                );
                            }
                            if (-1 === t.indexOf('(')) {
                                const e = t.trim(),
                                    r = Object.keys(this.errors).filter(
                                        t => t.split('(')[0] === e
                                    );
                                return (
                                    0 === r.length
                                        ? se.throwArgumentError(
                                              'no matching error',
                                              'name',
                                              e
                                          )
                                        : r.length > 1 &&
                                          se.throwArgumentError(
                                              'multiple matching errors',
                                              'name',
                                              e
                                          ),
                                    this.errors[r[0]]
                                );
                            }
                            const e = this.errors[at.fromString(t).format()];
                            return (
                                e ||
                                    se.throwArgumentError(
                                        'no matching error',
                                        'signature',
                                        t
                                    ),
                                e
                            );
                        }
                        getSighash(t) {
                            if ('string' == typeof t)
                                try {
                                    t = this.getFunction(t);
                                } catch (e) {
                                    try {
                                        t = this.getError(t);
                                    } catch (t) {
                                        throw e;
                                    }
                                }
                            return U(this.constructor, 'getSighash')(t);
                        }
                        getEventTopic(t) {
                            return (
                                'string' == typeof t && (t = this.getEvent(t)),
                                U(this.constructor, 'getEventTopic')(t)
                            );
                        }
                        _decodeParams(t, e) {
                            return this._abiCoder.decode(t, e);
                        }
                        _encodeParams(t, e) {
                            return this._abiCoder.encode(t, e);
                        }
                        encodeDeploy(t) {
                            return this._encodeParams(
                                this.deploy.inputs,
                                t || []
                            );
                        }
                        decodeErrorResult(t, e) {
                            'string' == typeof t && (t = this.getError(t));
                            const r = b(e);
                            return (
                                A(r.slice(0, 4)) !== this.getSighash(t) &&
                                    se.throwArgumentError(
                                        `data signature does not match error ${t.name}.`,
                                        'data',
                                        A(r)
                                    ),
                                this._decodeParams(t.inputs, r.slice(4))
                            );
                        }
                        encodeErrorResult(t, e) {
                            return (
                                'string' == typeof t && (t = this.getError(t)),
                                A(
                                    M([
                                        this.getSighash(t),
                                        this._encodeParams(t.inputs, e || []),
                                    ])
                                )
                            );
                        }
                        decodeFunctionData(t, e) {
                            'string' == typeof t && (t = this.getFunction(t));
                            const r = b(e);
                            return (
                                A(r.slice(0, 4)) !== this.getSighash(t) &&
                                    se.throwArgumentError(
                                        `data signature does not match function ${t.name}.`,
                                        'data',
                                        A(r)
                                    ),
                                this._decodeParams(t.inputs, r.slice(4))
                            );
                        }
                        encodeFunctionData(t, e) {
                            return (
                                'string' == typeof t &&
                                    (t = this.getFunction(t)),
                                A(
                                    M([
                                        this.getSighash(t),
                                        this._encodeParams(t.inputs, e || []),
                                    ])
                                )
                            );
                        }
                        decodeFunctionResult(t, e) {
                            'string' == typeof t && (t = this.getFunction(t));
                            let r = b(e),
                                n = null,
                                i = '',
                                s = null,
                                o = null,
                                a = null;
                            switch (r.length % this._abiCoder._getWordSize()) {
                                case 0:
                                    try {
                                        return this._abiCoder.decode(
                                            t.outputs,
                                            r
                                        );
                                    } catch (t) {}
                                    break;
                                case 4: {
                                    const t = A(r.slice(0, 4)),
                                        e = le[t];
                                    if (e)
                                        (s = this._abiCoder.decode(
                                            e.inputs,
                                            r.slice(4)
                                        )),
                                            (o = e.name),
                                            (a = e.signature),
                                            e.reason && (n = s[0]),
                                            'Error' === o
                                                ? (i = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(
                                                      s[0]
                                                  )}`)
                                                : 'Panic' === o &&
                                                  (i = `; VM Exception while processing transaction: reverted with panic code ${s[0]}`);
                                    else
                                        try {
                                            const e = this.getError(t);
                                            (s = this._abiCoder.decode(
                                                e.inputs,
                                                r.slice(4)
                                            )),
                                                (o = e.name),
                                                (a = e.format());
                                        } catch (t) {}
                                    break;
                                }
                            }
                            return se.throwError(
                                'call revert exception' + i,
                                p.errors.CALL_EXCEPTION,
                                {
                                    method: t.format(),
                                    data: A(e),
                                    errorArgs: s,
                                    errorName: o,
                                    errorSignature: a,
                                    reason: n,
                                }
                            );
                        }
                        encodeFunctionResult(t, e) {
                            return (
                                'string' == typeof t &&
                                    (t = this.getFunction(t)),
                                A(this._abiCoder.encode(t.outputs, e || []))
                            );
                        }
                        encodeFilterTopics(t, e) {
                            'string' == typeof t && (t = this.getEvent(t)),
                                e.length > t.inputs.length &&
                                    se.throwError(
                                        'too many arguments for ' + t.format(),
                                        p.errors.UNEXPECTED_ARGUMENT,
                                        { argument: 'values', value: e }
                                    );
                            let r = [];
                            t.anonymous || r.push(this.getEventTopic(t));
                            const n = (t, e) =>
                                'string' === t.type
                                    ? ie(e)
                                    : 'bytes' === t.type
                                    ? Mt(A(e))
                                    : ('bool' === t.type &&
                                          'boolean' == typeof e &&
                                          (e = e ? '0x01' : '0x00'),
                                      t.type.match(/^u?int/) &&
                                          (e = R.from(e).toHexString()),
                                      'address' === t.type &&
                                          this._abiCoder.encode(
                                              ['address'],
                                              [e]
                                          ),
                                      N(A(e), 32));
                            for (
                                e.forEach((e, i) => {
                                    let s = t.inputs[i];
                                    s.indexed
                                        ? null == e
                                            ? r.push(null)
                                            : 'array' === s.baseType ||
                                              'tuple' === s.baseType
                                            ? se.throwArgumentError(
                                                  'filtering with tuples or arrays not supported',
                                                  'contract.' + s.name,
                                                  e
                                              )
                                            : Array.isArray(e)
                                            ? r.push(e.map(t => n(s, t)))
                                            : r.push(n(s, e))
                                        : null != e &&
                                          se.throwArgumentError(
                                              'cannot filter non-indexed parameters; must be null',
                                              'contract.' + s.name,
                                              e
                                          );
                                });
                                r.length && null === r[r.length - 1];

                            )
                                r.pop();
                            return r;
                        }
                        encodeEventLog(t, e) {
                            'string' == typeof t && (t = this.getEvent(t));
                            const r = [],
                                n = [],
                                i = [];
                            return (
                                t.anonymous || r.push(this.getEventTopic(t)),
                                e.length !== t.inputs.length &&
                                    se.throwArgumentError(
                                        'event arguments/values mismatch',
                                        'values',
                                        e
                                    ),
                                t.inputs.forEach((t, s) => {
                                    const o = e[s];
                                    if (t.indexed)
                                        if ('string' === t.type) r.push(ie(o));
                                        else if ('bytes' === t.type)
                                            r.push(Mt(o));
                                        else {
                                            if (
                                                'tuple' === t.baseType ||
                                                'array' === t.baseType
                                            )
                                                throw new Error(
                                                    'not implemented'
                                                );
                                            r.push(
                                                this._abiCoder.encode(
                                                    [t.type],
                                                    [o]
                                                )
                                            );
                                        }
                                    else n.push(t), i.push(o);
                                }),
                                { data: this._abiCoder.encode(n, i), topics: r }
                            );
                        }
                        decodeEventLog(t, e, r) {
                            if (
                                ('string' == typeof t && (t = this.getEvent(t)),
                                null != r && !t.anonymous)
                            ) {
                                let e = this.getEventTopic(t);
                                (E(r[0], 32) && r[0].toLowerCase() === e) ||
                                    se.throwError(
                                        'fragment/topic mismatch',
                                        p.errors.INVALID_ARGUMENT,
                                        {
                                            argument: 'topics[0]',
                                            expected: e,
                                            value: r[0],
                                        }
                                    ),
                                    (r = r.slice(1));
                            }
                            let n = [],
                                i = [],
                                s = [];
                            t.inputs.forEach((t, e) => {
                                t.indexed
                                    ? 'string' === t.type ||
                                      'bytes' === t.type ||
                                      'tuple' === t.baseType ||
                                      'array' === t.baseType
                                        ? (n.push(
                                              Q.fromObject({
                                                  type: 'bytes32',
                                                  name: t.name,
                                              })
                                          ),
                                          s.push(!0))
                                        : (n.push(t), s.push(!1))
                                    : (i.push(t), s.push(!1));
                            });
                            let o =
                                    null != r
                                        ? this._abiCoder.decode(n, M(r))
                                        : null,
                                a = this._abiCoder.decode(i, e, !0),
                                u = [],
                                h = 0,
                                l = 0;
                            t.inputs.forEach((t, e) => {
                                if (t.indexed)
                                    if (null == o)
                                        u[e] = new he({
                                            _isIndexed: !0,
                                            hash: null,
                                        });
                                    else if (s[e])
                                        u[e] = new he({
                                            _isIndexed: !0,
                                            hash: o[l++],
                                        });
                                    else
                                        try {
                                            u[e] = o[l++];
                                        } catch (t) {
                                            u[e] = t;
                                        }
                                else
                                    try {
                                        u[e] = a[h++];
                                    } catch (t) {
                                        u[e] = t;
                                    }
                                if (t.name && null == u[t.name]) {
                                    const r = u[e];
                                    r instanceof Error
                                        ? Object.defineProperty(u, t.name, {
                                              enumerable: !0,
                                              get: () => {
                                                  throw ce(
                                                      `property ${JSON.stringify(
                                                          t.name
                                                      )}`,
                                                      r
                                                  );
                                              },
                                          })
                                        : (u[t.name] = r);
                                }
                            });
                            for (let t = 0; t < u.length; t++) {
                                const e = u[t];
                                e instanceof Error &&
                                    Object.defineProperty(u, t, {
                                        enumerable: !0,
                                        get: () => {
                                            throw ce(`index ${t}`, e);
                                        },
                                    });
                            }
                            return Object.freeze(u);
                        }
                        parseTransaction(t) {
                            let e = this.getFunction(
                                t.data.substring(0, 10).toLowerCase()
                            );
                            return e
                                ? new ae({
                                      args: this._abiCoder.decode(
                                          e.inputs,
                                          '0x' + t.data.substring(10)
                                      ),
                                      functionFragment: e,
                                      name: e.name,
                                      signature: e.format(),
                                      sighash: this.getSighash(e),
                                      value: R.from(t.value || '0'),
                                  })
                                : null;
                        }
                        parseLog(t) {
                            let e = this.getEvent(t.topics[0]);
                            return !e || e.anonymous
                                ? null
                                : new oe({
                                      eventFragment: e,
                                      name: e.name,
                                      signature: e.format(),
                                      topic: this.getEventTopic(e),
                                      args: this.decodeEventLog(
                                          e,
                                          t.data,
                                          t.topics
                                      ),
                                  });
                        }
                        parseError(t) {
                            const e = A(t);
                            let r = this.getError(
                                e.substring(0, 10).toLowerCase()
                            );
                            return r
                                ? new ue({
                                      args: this._abiCoder.decode(
                                          r.inputs,
                                          '0x' + e.substring(10)
                                      ),
                                      errorFragment: r,
                                      name: r.name,
                                      signature: r.format(),
                                      sighash: this.getSighash(r),
                                  })
                                : null;
                        }
                        static isInterface(t) {
                            return !(!t || !t._isInterface);
                        }
                    }
                },
                851: function(t, e, r) {
                    !(function(t, e) {
                        'use strict';
                        function n(t, e) {
                            if (!t) throw new Error(e || 'Assertion failed');
                        }
                        function i(t, e) {
                            t.super_ = e;
                            var r = function() {};
                            (r.prototype = e.prototype),
                                (t.prototype = new r()),
                                (t.prototype.constructor = t);
                        }
                        function s(t, e, r) {
                            if (s.isBN(t)) return t;
                            (this.negative = 0),
                                (this.words = null),
                                (this.length = 0),
                                (this.red = null),
                                null !== t &&
                                    (('le' !== e && 'be' !== e) ||
                                        ((r = e), (e = 10)),
                                    this._init(t || 0, e || 10, r || 'be'));
                        }
                        var o;
                        'object' == typeof t ? (t.exports = s) : (e.BN = s),
                            (s.BN = s),
                            (s.wordSize = 26);
                        try {
                            o =
                                'undefined' != typeof window &&
                                void 0 !== window.Buffer
                                    ? window.Buffer
                                    : r(555).Buffer;
                        } catch (t) {}
                        function a(t, e) {
                            var r = t.charCodeAt(e);
                            return r >= 48 && r <= 57
                                ? r - 48
                                : r >= 65 && r <= 70
                                ? r - 55
                                : r >= 97 && r <= 102
                                ? r - 87
                                : void n(!1, 'Invalid character in ' + t);
                        }
                        function u(t, e, r) {
                            var n = a(t, r);
                            return r - 1 >= e && (n |= a(t, r - 1) << 4), n;
                        }
                        function h(t, e, r, i) {
                            for (
                                var s = 0,
                                    o = 0,
                                    a = Math.min(t.length, r),
                                    u = e;
                                u < a;
                                u++
                            ) {
                                var h = t.charCodeAt(u) - 48;
                                (s *= i),
                                    (o =
                                        h >= 49
                                            ? h - 49 + 10
                                            : h >= 17
                                            ? h - 17 + 10
                                            : h),
                                    n(h >= 0 && o < i, 'Invalid character'),
                                    (s += o);
                            }
                            return s;
                        }
                        function l(t, e) {
                            (t.words = e.words),
                                (t.length = e.length),
                                (t.negative = e.negative),
                                (t.red = e.red);
                        }
                        if (
                            ((s.isBN = function(t) {
                                return (
                                    t instanceof s ||
                                    (null !== t &&
                                        'object' == typeof t &&
                                        t.constructor.wordSize === s.wordSize &&
                                        Array.isArray(t.words))
                                );
                            }),
                            (s.max = function(t, e) {
                                return t.cmp(e) > 0 ? t : e;
                            }),
                            (s.min = function(t, e) {
                                return t.cmp(e) < 0 ? t : e;
                            }),
                            (s.prototype._init = function(t, e, r) {
                                if ('number' == typeof t)
                                    return this._initNumber(t, e, r);
                                if ('object' == typeof t)
                                    return this._initArray(t, e, r);
                                'hex' === e && (e = 16),
                                    n(e === (0 | e) && e >= 2 && e <= 36);
                                var i = 0;
                                '-' ===
                                    (t = t.toString().replace(/\s+/g, ''))[0] &&
                                    (i++, (this.negative = 1)),
                                    i < t.length &&
                                        (16 === e
                                            ? this._parseHex(t, i, r)
                                            : (this._parseBase(t, e, i),
                                              'le' === r &&
                                                  this._initArray(
                                                      this.toArray(),
                                                      e,
                                                      r
                                                  )));
                            }),
                            (s.prototype._initNumber = function(t, e, r) {
                                t < 0 && ((this.negative = 1), (t = -t)),
                                    t < 67108864
                                        ? ((this.words = [67108863 & t]),
                                          (this.length = 1))
                                        : t < 4503599627370496
                                        ? ((this.words = [
                                              67108863 & t,
                                              (t / 67108864) & 67108863,
                                          ]),
                                          (this.length = 2))
                                        : (n(t < 9007199254740992),
                                          (this.words = [
                                              67108863 & t,
                                              (t / 67108864) & 67108863,
                                              1,
                                          ]),
                                          (this.length = 3)),
                                    'le' === r &&
                                        this._initArray(this.toArray(), e, r);
                            }),
                            (s.prototype._initArray = function(t, e, r) {
                                if (
                                    (n('number' == typeof t.length),
                                    t.length <= 0)
                                )
                                    return (
                                        (this.words = [0]),
                                        (this.length = 1),
                                        this
                                    );
                                (this.length = Math.ceil(t.length / 3)),
                                    (this.words = new Array(this.length));
                                for (var i = 0; i < this.length; i++)
                                    this.words[i] = 0;
                                var s,
                                    o,
                                    a = 0;
                                if ('be' === r)
                                    for (
                                        i = t.length - 1, s = 0;
                                        i >= 0;
                                        i -= 3
                                    )
                                        (o =
                                            t[i] |
                                            (t[i - 1] << 8) |
                                            (t[i - 2] << 16)),
                                            (this.words[s] |=
                                                (o << a) & 67108863),
                                            (this.words[s + 1] =
                                                (o >>> (26 - a)) & 67108863),
                                            (a += 24) >= 26 && ((a -= 26), s++);
                                else if ('le' === r)
                                    for (i = 0, s = 0; i < t.length; i += 3)
                                        (o =
                                            t[i] |
                                            (t[i + 1] << 8) |
                                            (t[i + 2] << 16)),
                                            (this.words[s] |=
                                                (o << a) & 67108863),
                                            (this.words[s + 1] =
                                                (o >>> (26 - a)) & 67108863),
                                            (a += 24) >= 26 && ((a -= 26), s++);
                                return this._strip();
                            }),
                            (s.prototype._parseHex = function(t, e, r) {
                                (this.length = Math.ceil((t.length - e) / 6)),
                                    (this.words = new Array(this.length));
                                for (var n = 0; n < this.length; n++)
                                    this.words[n] = 0;
                                var i,
                                    s = 0,
                                    o = 0;
                                if ('be' === r)
                                    for (n = t.length - 1; n >= e; n -= 2)
                                        (i = u(t, e, n) << s),
                                            (this.words[o] |= 67108863 & i),
                                            s >= 18
                                                ? ((s -= 18),
                                                  (o += 1),
                                                  (this.words[o] |= i >>> 26))
                                                : (s += 8);
                                else
                                    for (
                                        n = (t.length - e) % 2 == 0 ? e + 1 : e;
                                        n < t.length;
                                        n += 2
                                    )
                                        (i = u(t, e, n) << s),
                                            (this.words[o] |= 67108863 & i),
                                            s >= 18
                                                ? ((s -= 18),
                                                  (o += 1),
                                                  (this.words[o] |= i >>> 26))
                                                : (s += 8);
                                this._strip();
                            }),
                            (s.prototype._parseBase = function(t, e, r) {
                                (this.words = [0]), (this.length = 1);
                                for (var n = 0, i = 1; i <= 67108863; i *= e)
                                    n++;
                                n--, (i = (i / e) | 0);
                                for (
                                    var s = t.length - r,
                                        o = s % n,
                                        a = Math.min(s, s - o) + r,
                                        u = 0,
                                        l = r;
                                    l < a;
                                    l += n
                                )
                                    (u = h(t, l, l + n, e)),
                                        this.imuln(i),
                                        this.words[0] + u < 67108864
                                            ? (this.words[0] += u)
                                            : this._iaddn(u);
                                if (0 !== o) {
                                    var c = 1;
                                    for (
                                        u = h(t, l, t.length, e), l = 0;
                                        l < o;
                                        l++
                                    )
                                        c *= e;
                                    this.imuln(c),
                                        this.words[0] + u < 67108864
                                            ? (this.words[0] += u)
                                            : this._iaddn(u);
                                }
                                this._strip();
                            }),
                            (s.prototype.copy = function(t) {
                                t.words = new Array(this.length);
                                for (var e = 0; e < this.length; e++)
                                    t.words[e] = this.words[e];
                                (t.length = this.length),
                                    (t.negative = this.negative),
                                    (t.red = this.red);
                            }),
                            (s.prototype._move = function(t) {
                                l(t, this);
                            }),
                            (s.prototype.clone = function() {
                                var t = new s(null);
                                return this.copy(t), t;
                            }),
                            (s.prototype._expand = function(t) {
                                for (; this.length < t; )
                                    this.words[this.length++] = 0;
                                return this;
                            }),
                            (s.prototype._strip = function() {
                                for (
                                    ;
                                    this.length > 1 &&
                                    0 === this.words[this.length - 1];

                                )
                                    this.length--;
                                return this._normSign();
                            }),
                            (s.prototype._normSign = function() {
                                return (
                                    1 === this.length &&
                                        0 === this.words[0] &&
                                        (this.negative = 0),
                                    this
                                );
                            }),
                            'undefined' != typeof Symbol &&
                                'function' == typeof Symbol.for)
                        )
                            try {
                                s.prototype[
                                    Symbol.for('nodejs.util.inspect.custom')
                                ] = c;
                            } catch (t) {
                                s.prototype.inspect = c;
                            }
                        else s.prototype.inspect = c;
                        function c() {
                            return (
                                (this.red ? '<BN-R: ' : '<BN: ') +
                                this.toString(16) +
                                '>'
                            );
                        }
                        var f = [
                                '',
                                '0',
                                '00',
                                '000',
                                '0000',
                                '00000',
                                '000000',
                                '0000000',
                                '00000000',
                                '000000000',
                                '0000000000',
                                '00000000000',
                                '000000000000',
                                '0000000000000',
                                '00000000000000',
                                '000000000000000',
                                '0000000000000000',
                                '00000000000000000',
                                '000000000000000000',
                                '0000000000000000000',
                                '00000000000000000000',
                                '000000000000000000000',
                                '0000000000000000000000',
                                '00000000000000000000000',
                                '000000000000000000000000',
                                '0000000000000000000000000',
                            ],
                            d = [
                                0,
                                0,
                                25,
                                16,
                                12,
                                11,
                                10,
                                9,
                                8,
                                8,
                                7,
                                7,
                                7,
                                7,
                                6,
                                6,
                                6,
                                6,
                                6,
                                6,
                                6,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                            ],
                            p = [
                                0,
                                0,
                                33554432,
                                43046721,
                                16777216,
                                48828125,
                                60466176,
                                40353607,
                                16777216,
                                43046721,
                                1e7,
                                19487171,
                                35831808,
                                62748517,
                                7529536,
                                11390625,
                                16777216,
                                24137569,
                                34012224,
                                47045881,
                                64e6,
                                4084101,
                                5153632,
                                6436343,
                                7962624,
                                9765625,
                                11881376,
                                14348907,
                                17210368,
                                20511149,
                                243e5,
                                28629151,
                                33554432,
                                39135393,
                                45435424,
                                52521875,
                                60466176,
                            ];
                        function m(t, e, r) {
                            r.negative = e.negative ^ t.negative;
                            var n = (t.length + e.length) | 0;
                            (r.length = n), (n = (n - 1) | 0);
                            var i = 0 | t.words[0],
                                s = 0 | e.words[0],
                                o = i * s,
                                a = 67108863 & o,
                                u = (o / 67108864) | 0;
                            r.words[0] = a;
                            for (var h = 1; h < n; h++) {
                                for (
                                    var l = u >>> 26,
                                        c = 67108863 & u,
                                        f = Math.min(h, e.length - 1),
                                        d = Math.max(0, h - t.length + 1);
                                    d <= f;
                                    d++
                                ) {
                                    var p = (h - d) | 0;
                                    (l +=
                                        ((o =
                                            (i = 0 | t.words[p]) *
                                                (s = 0 | e.words[d]) +
                                            c) /
                                            67108864) |
                                        0),
                                        (c = 67108863 & o);
                                }
                                (r.words[h] = 0 | c), (u = 0 | l);
                            }
                            return (
                                0 !== u ? (r.words[h] = 0 | u) : r.length--,
                                r._strip()
                            );
                        }
                        (s.prototype.toString = function(t, e) {
                            var r;
                            if (
                                ((e = 0 | e || 1),
                                16 === (t = t || 10) || 'hex' === t)
                            ) {
                                r = '';
                                for (
                                    var i = 0, s = 0, o = 0;
                                    o < this.length;
                                    o++
                                ) {
                                    var a = this.words[o],
                                        u = (
                                            16777215 &
                                            ((a << i) | s)
                                        ).toString(16);
                                    (s = (a >>> (24 - i)) & 16777215),
                                        (i += 2) >= 26 && ((i -= 26), o--),
                                        (r =
                                            0 !== s || o !== this.length - 1
                                                ? f[6 - u.length] + u + r
                                                : u + r);
                                }
                                for (
                                    0 !== s && (r = s.toString(16) + r);
                                    r.length % e != 0;

                                )
                                    r = '0' + r;
                                return 0 !== this.negative && (r = '-' + r), r;
                            }
                            if (t === (0 | t) && t >= 2 && t <= 36) {
                                var h = d[t],
                                    l = p[t];
                                r = '';
                                var c = this.clone();
                                for (c.negative = 0; !c.isZero(); ) {
                                    var m = c.modrn(l).toString(t);
                                    r = (c = c.idivn(l)).isZero()
                                        ? m + r
                                        : f[h - m.length] + m + r;
                                }
                                for (
                                    this.isZero() && (r = '0' + r);
                                    r.length % e != 0;

                                )
                                    r = '0' + r;
                                return 0 !== this.negative && (r = '-' + r), r;
                            }
                            n(!1, 'Base should be between 2 and 36');
                        }),
                            (s.prototype.toNumber = function() {
                                var t = this.words[0];
                                return (
                                    2 === this.length
                                        ? (t += 67108864 * this.words[1])
                                        : 3 === this.length &&
                                          1 === this.words[2]
                                        ? (t +=
                                              4503599627370496 +
                                              67108864 * this.words[1])
                                        : this.length > 2 &&
                                          n(
                                              !1,
                                              'Number can only safely store up to 53 bits'
                                          ),
                                    0 !== this.negative ? -t : t
                                );
                            }),
                            (s.prototype.toJSON = function() {
                                return this.toString(16, 2);
                            }),
                            o &&
                                (s.prototype.toBuffer = function(t, e) {
                                    return this.toArrayLike(o, t, e);
                                }),
                            (s.prototype.toArray = function(t, e) {
                                return this.toArrayLike(Array, t, e);
                            }),
                            (s.prototype.toArrayLike = function(t, e, r) {
                                this._strip();
                                var i = this.byteLength(),
                                    s = r || Math.max(1, i);
                                n(
                                    i <= s,
                                    'byte array longer than desired length'
                                ),
                                    n(s > 0, 'Requested array length <= 0');
                                var o = (function(t, e) {
                                    return t.allocUnsafe
                                        ? t.allocUnsafe(e)
                                        : new t(e);
                                })(t, s);
                                return (
                                    this[
                                        '_toArrayLike' +
                                            ('le' === e ? 'LE' : 'BE')
                                    ](o, i),
                                    o
                                );
                            }),
                            (s.prototype._toArrayLikeLE = function(t, e) {
                                for (
                                    var r = 0, n = 0, i = 0, s = 0;
                                    i < this.length;
                                    i++
                                ) {
                                    var o = (this.words[i] << s) | n;
                                    (t[r++] = 255 & o),
                                        r < t.length &&
                                            (t[r++] = (o >> 8) & 255),
                                        r < t.length &&
                                            (t[r++] = (o >> 16) & 255),
                                        6 === s
                                            ? (r < t.length &&
                                                  (t[r++] = (o >> 24) & 255),
                                              (n = 0),
                                              (s = 0))
                                            : ((n = o >>> 24), (s += 2));
                                }
                                if (r < t.length)
                                    for (t[r++] = n; r < t.length; ) t[r++] = 0;
                            }),
                            (s.prototype._toArrayLikeBE = function(t, e) {
                                for (
                                    var r = t.length - 1, n = 0, i = 0, s = 0;
                                    i < this.length;
                                    i++
                                ) {
                                    var o = (this.words[i] << s) | n;
                                    (t[r--] = 255 & o),
                                        r >= 0 && (t[r--] = (o >> 8) & 255),
                                        r >= 0 && (t[r--] = (o >> 16) & 255),
                                        6 === s
                                            ? (r >= 0 &&
                                                  (t[r--] = (o >> 24) & 255),
                                              (n = 0),
                                              (s = 0))
                                            : ((n = o >>> 24), (s += 2));
                                }
                                if (r >= 0)
                                    for (t[r--] = n; r >= 0; ) t[r--] = 0;
                            }),
                            Math.clz32
                                ? (s.prototype._countBits = function(t) {
                                      return 32 - Math.clz32(t);
                                  })
                                : (s.prototype._countBits = function(t) {
                                      var e = t,
                                          r = 0;
                                      return (
                                          e >= 4096 && ((r += 13), (e >>>= 13)),
                                          e >= 64 && ((r += 7), (e >>>= 7)),
                                          e >= 8 && ((r += 4), (e >>>= 4)),
                                          e >= 2 && ((r += 2), (e >>>= 2)),
                                          r + e
                                      );
                                  }),
                            (s.prototype._zeroBits = function(t) {
                                if (0 === t) return 26;
                                var e = t,
                                    r = 0;
                                return (
                                    8191 & e || ((r += 13), (e >>>= 13)),
                                    127 & e || ((r += 7), (e >>>= 7)),
                                    15 & e || ((r += 4), (e >>>= 4)),
                                    3 & e || ((r += 2), (e >>>= 2)),
                                    1 & e || r++,
                                    r
                                );
                            }),
                            (s.prototype.bitLength = function() {
                                var t = this.words[this.length - 1],
                                    e = this._countBits(t);
                                return 26 * (this.length - 1) + e;
                            }),
                            (s.prototype.zeroBits = function() {
                                if (this.isZero()) return 0;
                                for (var t = 0, e = 0; e < this.length; e++) {
                                    var r = this._zeroBits(this.words[e]);
                                    if (((t += r), 26 !== r)) break;
                                }
                                return t;
                            }),
                            (s.prototype.byteLength = function() {
                                return Math.ceil(this.bitLength() / 8);
                            }),
                            (s.prototype.toTwos = function(t) {
                                return 0 !== this.negative
                                    ? this.abs()
                                          .inotn(t)
                                          .iaddn(1)
                                    : this.clone();
                            }),
                            (s.prototype.fromTwos = function(t) {
                                return this.testn(t - 1)
                                    ? this.notn(t)
                                          .iaddn(1)
                                          .ineg()
                                    : this.clone();
                            }),
                            (s.prototype.isNeg = function() {
                                return 0 !== this.negative;
                            }),
                            (s.prototype.neg = function() {
                                return this.clone().ineg();
                            }),
                            (s.prototype.ineg = function() {
                                return (
                                    this.isZero() || (this.negative ^= 1), this
                                );
                            }),
                            (s.prototype.iuor = function(t) {
                                for (; this.length < t.length; )
                                    this.words[this.length++] = 0;
                                for (var e = 0; e < t.length; e++)
                                    this.words[e] = this.words[e] | t.words[e];
                                return this._strip();
                            }),
                            (s.prototype.ior = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuor(t)
                                );
                            }),
                            (s.prototype.or = function(t) {
                                return this.length > t.length
                                    ? this.clone().ior(t)
                                    : t.clone().ior(this);
                            }),
                            (s.prototype.uor = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuor(t)
                                    : t.clone().iuor(this);
                            }),
                            (s.prototype.iuand = function(t) {
                                var e;
                                e = this.length > t.length ? t : this;
                                for (var r = 0; r < e.length; r++)
                                    this.words[r] = this.words[r] & t.words[r];
                                return (this.length = e.length), this._strip();
                            }),
                            (s.prototype.iand = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuand(t)
                                );
                            }),
                            (s.prototype.and = function(t) {
                                return this.length > t.length
                                    ? this.clone().iand(t)
                                    : t.clone().iand(this);
                            }),
                            (s.prototype.uand = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuand(t)
                                    : t.clone().iuand(this);
                            }),
                            (s.prototype.iuxor = function(t) {
                                var e, r;
                                this.length > t.length
                                    ? ((e = this), (r = t))
                                    : ((e = t), (r = this));
                                for (var n = 0; n < r.length; n++)
                                    this.words[n] = e.words[n] ^ r.words[n];
                                if (this !== e)
                                    for (; n < e.length; n++)
                                        this.words[n] = e.words[n];
                                return (this.length = e.length), this._strip();
                            }),
                            (s.prototype.ixor = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuxor(t)
                                );
                            }),
                            (s.prototype.xor = function(t) {
                                return this.length > t.length
                                    ? this.clone().ixor(t)
                                    : t.clone().ixor(this);
                            }),
                            (s.prototype.uxor = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuxor(t)
                                    : t.clone().iuxor(this);
                            }),
                            (s.prototype.inotn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = 0 | Math.ceil(t / 26),
                                    r = t % 26;
                                this._expand(e), r > 0 && e--;
                                for (var i = 0; i < e; i++)
                                    this.words[i] = 67108863 & ~this.words[i];
                                return (
                                    r > 0 &&
                                        (this.words[i] =
                                            ~this.words[i] &
                                            (67108863 >> (26 - r))),
                                    this._strip()
                                );
                            }),
                            (s.prototype.notn = function(t) {
                                return this.clone().inotn(t);
                            }),
                            (s.prototype.setn = function(t, e) {
                                n('number' == typeof t && t >= 0);
                                var r = (t / 26) | 0,
                                    i = t % 26;
                                return (
                                    this._expand(r + 1),
                                    (this.words[r] = e
                                        ? this.words[r] | (1 << i)
                                        : this.words[r] & ~(1 << i)),
                                    this._strip()
                                );
                            }),
                            (s.prototype.iadd = function(t) {
                                var e, r, n;
                                if (0 !== this.negative && 0 === t.negative)
                                    return (
                                        (this.negative = 0),
                                        (e = this.isub(t)),
                                        (this.negative ^= 1),
                                        this._normSign()
                                    );
                                if (0 === this.negative && 0 !== t.negative)
                                    return (
                                        (t.negative = 0),
                                        (e = this.isub(t)),
                                        (t.negative = 1),
                                        e._normSign()
                                    );
                                this.length > t.length
                                    ? ((r = this), (n = t))
                                    : ((r = t), (n = this));
                                for (var i = 0, s = 0; s < n.length; s++)
                                    (e =
                                        (0 | r.words[s]) +
                                        (0 | n.words[s]) +
                                        i),
                                        (this.words[s] = 67108863 & e),
                                        (i = e >>> 26);
                                for (; 0 !== i && s < r.length; s++)
                                    (e = (0 | r.words[s]) + i),
                                        (this.words[s] = 67108863 & e),
                                        (i = e >>> 26);
                                if (((this.length = r.length), 0 !== i))
                                    (this.words[this.length] = i),
                                        this.length++;
                                else if (r !== this)
                                    for (; s < r.length; s++)
                                        this.words[s] = r.words[s];
                                return this;
                            }),
                            (s.prototype.add = function(t) {
                                var e;
                                return 0 !== t.negative && 0 === this.negative
                                    ? ((t.negative = 0),
                                      (e = this.sub(t)),
                                      (t.negative ^= 1),
                                      e)
                                    : 0 === t.negative && 0 !== this.negative
                                    ? ((this.negative = 0),
                                      (e = t.sub(this)),
                                      (this.negative = 1),
                                      e)
                                    : this.length > t.length
                                    ? this.clone().iadd(t)
                                    : t.clone().iadd(this);
                            }),
                            (s.prototype.isub = function(t) {
                                if (0 !== t.negative) {
                                    t.negative = 0;
                                    var e = this.iadd(t);
                                    return (t.negative = 1), e._normSign();
                                }
                                if (0 !== this.negative)
                                    return (
                                        (this.negative = 0),
                                        this.iadd(t),
                                        (this.negative = 1),
                                        this._normSign()
                                    );
                                var r,
                                    n,
                                    i = this.cmp(t);
                                if (0 === i)
                                    return (
                                        (this.negative = 0),
                                        (this.length = 1),
                                        (this.words[0] = 0),
                                        this
                                    );
                                i > 0
                                    ? ((r = this), (n = t))
                                    : ((r = t), (n = this));
                                for (var s = 0, o = 0; o < n.length; o++)
                                    (s =
                                        (e =
                                            (0 | r.words[o]) -
                                            (0 | n.words[o]) +
                                            s) >> 26),
                                        (this.words[o] = 67108863 & e);
                                for (; 0 !== s && o < r.length; o++)
                                    (s = (e = (0 | r.words[o]) + s) >> 26),
                                        (this.words[o] = 67108863 & e);
                                if (0 === s && o < r.length && r !== this)
                                    for (; o < r.length; o++)
                                        this.words[o] = r.words[o];
                                return (
                                    (this.length = Math.max(this.length, o)),
                                    r !== this && (this.negative = 1),
                                    this._strip()
                                );
                            }),
                            (s.prototype.sub = function(t) {
                                return this.clone().isub(t);
                            });
                        var g = function(t, e, r) {
                            var n,
                                i,
                                s,
                                o = t.words,
                                a = e.words,
                                u = r.words,
                                h = 0,
                                l = 0 | o[0],
                                c = 8191 & l,
                                f = l >>> 13,
                                d = 0 | o[1],
                                p = 8191 & d,
                                m = d >>> 13,
                                g = 0 | o[2],
                                y = 8191 & g,
                                v = g >>> 13,
                                w = 0 | o[3],
                                b = 8191 & w,
                                M = w >>> 13,
                                E = 0 | o[4],
                                _ = 8191 & E,
                                A = E >>> 13,
                                N = 0 | o[5],
                                O = 8191 & N,
                                S = N >>> 13,
                                x = 0 | o[6],
                                P = 8191 & x,
                                T = x >>> 13,
                                R = 0 | o[7],
                                k = 8191 & R,
                                I = R >>> 13,
                                B = 0 | o[8],
                                C = 8191 & B,
                                L = B >>> 13,
                                F = 0 | o[9],
                                U = 8191 & F,
                                D = F >>> 13,
                                j = 0 | a[0],
                                z = 8191 & j,
                                G = j >>> 13,
                                H = 0 | a[1],
                                $ = 8191 & H,
                                V = H >>> 13,
                                q = 0 | a[2],
                                W = 8191 & q,
                                Z = q >>> 13,
                                J = 0 | a[3],
                                X = 8191 & J,
                                K = J >>> 13,
                                Y = 0 | a[4],
                                Q = 8191 & Y,
                                tt = Y >>> 13,
                                et = 0 | a[5],
                                rt = 8191 & et,
                                nt = et >>> 13,
                                it = 0 | a[6],
                                st = 8191 & it,
                                ot = it >>> 13,
                                at = 0 | a[7],
                                ut = 8191 & at,
                                ht = at >>> 13,
                                lt = 0 | a[8],
                                ct = 8191 & lt,
                                ft = lt >>> 13,
                                dt = 0 | a[9],
                                pt = 8191 & dt,
                                mt = dt >>> 13;
                            (r.negative = t.negative ^ e.negative),
                                (r.length = 19);
                            var gt =
                                (((h + (n = Math.imul(c, z))) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = Math.imul(c, G)) +
                                                Math.imul(f, z)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = Math.imul(f, G)) + (i >>> 13)) | 0) +
                                    (gt >>> 26)) |
                                0),
                                (gt &= 67108863),
                                (n = Math.imul(p, z)),
                                (i =
                                    ((i = Math.imul(p, G)) + Math.imul(m, z)) |
                                    0),
                                (s = Math.imul(m, G));
                            var yt =
                                (((h + (n = (n + Math.imul(c, $)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, V)) | 0) +
                                                Math.imul(f, $)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, V)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (yt >>> 26)) |
                                0),
                                (yt &= 67108863),
                                (n = Math.imul(y, z)),
                                (i =
                                    ((i = Math.imul(y, G)) + Math.imul(v, z)) |
                                    0),
                                (s = Math.imul(v, G)),
                                (n = (n + Math.imul(p, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, V)) | 0) +
                                        Math.imul(m, $)) |
                                    0),
                                (s = (s + Math.imul(m, V)) | 0);
                            var vt =
                                (((h + (n = (n + Math.imul(c, W)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, Z)) | 0) +
                                                Math.imul(f, W)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, Z)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (vt >>> 26)) |
                                0),
                                (vt &= 67108863),
                                (n = Math.imul(b, z)),
                                (i =
                                    ((i = Math.imul(b, G)) + Math.imul(M, z)) |
                                    0),
                                (s = Math.imul(M, G)),
                                (n = (n + Math.imul(y, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, V)) | 0) +
                                        Math.imul(v, $)) |
                                    0),
                                (s = (s + Math.imul(v, V)) | 0),
                                (n = (n + Math.imul(p, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, Z)) | 0) +
                                        Math.imul(m, W)) |
                                    0),
                                (s = (s + Math.imul(m, Z)) | 0);
                            var wt =
                                (((h + (n = (n + Math.imul(c, X)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, K)) | 0) +
                                                Math.imul(f, X)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, K)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (wt >>> 26)) |
                                0),
                                (wt &= 67108863),
                                (n = Math.imul(_, z)),
                                (i =
                                    ((i = Math.imul(_, G)) + Math.imul(A, z)) |
                                    0),
                                (s = Math.imul(A, G)),
                                (n = (n + Math.imul(b, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, V)) | 0) +
                                        Math.imul(M, $)) |
                                    0),
                                (s = (s + Math.imul(M, V)) | 0),
                                (n = (n + Math.imul(y, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, Z)) | 0) +
                                        Math.imul(v, W)) |
                                    0),
                                (s = (s + Math.imul(v, Z)) | 0),
                                (n = (n + Math.imul(p, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, K)) | 0) +
                                        Math.imul(m, X)) |
                                    0),
                                (s = (s + Math.imul(m, K)) | 0);
                            var bt =
                                (((h + (n = (n + Math.imul(c, Q)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, tt)) | 0) +
                                                Math.imul(f, Q)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, tt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (bt >>> 26)) |
                                0),
                                (bt &= 67108863),
                                (n = Math.imul(O, z)),
                                (i =
                                    ((i = Math.imul(O, G)) + Math.imul(S, z)) |
                                    0),
                                (s = Math.imul(S, G)),
                                (n = (n + Math.imul(_, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, V)) | 0) +
                                        Math.imul(A, $)) |
                                    0),
                                (s = (s + Math.imul(A, V)) | 0),
                                (n = (n + Math.imul(b, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, Z)) | 0) +
                                        Math.imul(M, W)) |
                                    0),
                                (s = (s + Math.imul(M, Z)) | 0),
                                (n = (n + Math.imul(y, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, K)) | 0) +
                                        Math.imul(v, X)) |
                                    0),
                                (s = (s + Math.imul(v, K)) | 0),
                                (n = (n + Math.imul(p, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, tt)) | 0) +
                                        Math.imul(m, Q)) |
                                    0),
                                (s = (s + Math.imul(m, tt)) | 0);
                            var Mt =
                                (((h + (n = (n + Math.imul(c, rt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, nt)) | 0) +
                                                Math.imul(f, rt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, nt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Mt >>> 26)) |
                                0),
                                (Mt &= 67108863),
                                (n = Math.imul(P, z)),
                                (i =
                                    ((i = Math.imul(P, G)) + Math.imul(T, z)) |
                                    0),
                                (s = Math.imul(T, G)),
                                (n = (n + Math.imul(O, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, V)) | 0) +
                                        Math.imul(S, $)) |
                                    0),
                                (s = (s + Math.imul(S, V)) | 0),
                                (n = (n + Math.imul(_, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, Z)) | 0) +
                                        Math.imul(A, W)) |
                                    0),
                                (s = (s + Math.imul(A, Z)) | 0),
                                (n = (n + Math.imul(b, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, K)) | 0) +
                                        Math.imul(M, X)) |
                                    0),
                                (s = (s + Math.imul(M, K)) | 0),
                                (n = (n + Math.imul(y, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, tt)) | 0) +
                                        Math.imul(v, Q)) |
                                    0),
                                (s = (s + Math.imul(v, tt)) | 0),
                                (n = (n + Math.imul(p, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, nt)) | 0) +
                                        Math.imul(m, rt)) |
                                    0),
                                (s = (s + Math.imul(m, nt)) | 0);
                            var Et =
                                (((h + (n = (n + Math.imul(c, st)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ot)) | 0) +
                                                Math.imul(f, st)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ot)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Et >>> 26)) |
                                0),
                                (Et &= 67108863),
                                (n = Math.imul(k, z)),
                                (i =
                                    ((i = Math.imul(k, G)) + Math.imul(I, z)) |
                                    0),
                                (s = Math.imul(I, G)),
                                (n = (n + Math.imul(P, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, V)) | 0) +
                                        Math.imul(T, $)) |
                                    0),
                                (s = (s + Math.imul(T, V)) | 0),
                                (n = (n + Math.imul(O, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, Z)) | 0) +
                                        Math.imul(S, W)) |
                                    0),
                                (s = (s + Math.imul(S, Z)) | 0),
                                (n = (n + Math.imul(_, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, K)) | 0) +
                                        Math.imul(A, X)) |
                                    0),
                                (s = (s + Math.imul(A, K)) | 0),
                                (n = (n + Math.imul(b, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, tt)) | 0) +
                                        Math.imul(M, Q)) |
                                    0),
                                (s = (s + Math.imul(M, tt)) | 0),
                                (n = (n + Math.imul(y, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, nt)) | 0) +
                                        Math.imul(v, rt)) |
                                    0),
                                (s = (s + Math.imul(v, nt)) | 0),
                                (n = (n + Math.imul(p, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ot)) | 0) +
                                        Math.imul(m, st)) |
                                    0),
                                (s = (s + Math.imul(m, ot)) | 0);
                            var _t =
                                (((h + (n = (n + Math.imul(c, ut)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ht)) | 0) +
                                                Math.imul(f, ut)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ht)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (_t >>> 26)) |
                                0),
                                (_t &= 67108863),
                                (n = Math.imul(C, z)),
                                (i =
                                    ((i = Math.imul(C, G)) + Math.imul(L, z)) |
                                    0),
                                (s = Math.imul(L, G)),
                                (n = (n + Math.imul(k, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, V)) | 0) +
                                        Math.imul(I, $)) |
                                    0),
                                (s = (s + Math.imul(I, V)) | 0),
                                (n = (n + Math.imul(P, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, Z)) | 0) +
                                        Math.imul(T, W)) |
                                    0),
                                (s = (s + Math.imul(T, Z)) | 0),
                                (n = (n + Math.imul(O, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, K)) | 0) +
                                        Math.imul(S, X)) |
                                    0),
                                (s = (s + Math.imul(S, K)) | 0),
                                (n = (n + Math.imul(_, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, tt)) | 0) +
                                        Math.imul(A, Q)) |
                                    0),
                                (s = (s + Math.imul(A, tt)) | 0),
                                (n = (n + Math.imul(b, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, nt)) | 0) +
                                        Math.imul(M, rt)) |
                                    0),
                                (s = (s + Math.imul(M, nt)) | 0),
                                (n = (n + Math.imul(y, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ot)) | 0) +
                                        Math.imul(v, st)) |
                                    0),
                                (s = (s + Math.imul(v, ot)) | 0),
                                (n = (n + Math.imul(p, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ht)) | 0) +
                                        Math.imul(m, ut)) |
                                    0),
                                (s = (s + Math.imul(m, ht)) | 0);
                            var At =
                                (((h + (n = (n + Math.imul(c, ct)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ft)) | 0) +
                                                Math.imul(f, ct)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ft)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (At >>> 26)) |
                                0),
                                (At &= 67108863),
                                (n = Math.imul(U, z)),
                                (i =
                                    ((i = Math.imul(U, G)) + Math.imul(D, z)) |
                                    0),
                                (s = Math.imul(D, G)),
                                (n = (n + Math.imul(C, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, V)) | 0) +
                                        Math.imul(L, $)) |
                                    0),
                                (s = (s + Math.imul(L, V)) | 0),
                                (n = (n + Math.imul(k, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, Z)) | 0) +
                                        Math.imul(I, W)) |
                                    0),
                                (s = (s + Math.imul(I, Z)) | 0),
                                (n = (n + Math.imul(P, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, K)) | 0) +
                                        Math.imul(T, X)) |
                                    0),
                                (s = (s + Math.imul(T, K)) | 0),
                                (n = (n + Math.imul(O, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, tt)) | 0) +
                                        Math.imul(S, Q)) |
                                    0),
                                (s = (s + Math.imul(S, tt)) | 0),
                                (n = (n + Math.imul(_, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, nt)) | 0) +
                                        Math.imul(A, rt)) |
                                    0),
                                (s = (s + Math.imul(A, nt)) | 0),
                                (n = (n + Math.imul(b, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ot)) | 0) +
                                        Math.imul(M, st)) |
                                    0),
                                (s = (s + Math.imul(M, ot)) | 0),
                                (n = (n + Math.imul(y, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ht)) | 0) +
                                        Math.imul(v, ut)) |
                                    0),
                                (s = (s + Math.imul(v, ht)) | 0),
                                (n = (n + Math.imul(p, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ft)) | 0) +
                                        Math.imul(m, ct)) |
                                    0),
                                (s = (s + Math.imul(m, ft)) | 0);
                            var Nt =
                                (((h + (n = (n + Math.imul(c, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, mt)) | 0) +
                                                Math.imul(f, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Nt >>> 26)) |
                                0),
                                (Nt &= 67108863),
                                (n = Math.imul(U, $)),
                                (i =
                                    ((i = Math.imul(U, V)) + Math.imul(D, $)) |
                                    0),
                                (s = Math.imul(D, V)),
                                (n = (n + Math.imul(C, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, Z)) | 0) +
                                        Math.imul(L, W)) |
                                    0),
                                (s = (s + Math.imul(L, Z)) | 0),
                                (n = (n + Math.imul(k, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, K)) | 0) +
                                        Math.imul(I, X)) |
                                    0),
                                (s = (s + Math.imul(I, K)) | 0),
                                (n = (n + Math.imul(P, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, tt)) | 0) +
                                        Math.imul(T, Q)) |
                                    0),
                                (s = (s + Math.imul(T, tt)) | 0),
                                (n = (n + Math.imul(O, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, nt)) | 0) +
                                        Math.imul(S, rt)) |
                                    0),
                                (s = (s + Math.imul(S, nt)) | 0),
                                (n = (n + Math.imul(_, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ot)) | 0) +
                                        Math.imul(A, st)) |
                                    0),
                                (s = (s + Math.imul(A, ot)) | 0),
                                (n = (n + Math.imul(b, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ht)) | 0) +
                                        Math.imul(M, ut)) |
                                    0),
                                (s = (s + Math.imul(M, ht)) | 0),
                                (n = (n + Math.imul(y, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ft)) | 0) +
                                        Math.imul(v, ct)) |
                                    0),
                                (s = (s + Math.imul(v, ft)) | 0);
                            var Ot =
                                (((h + (n = (n + Math.imul(p, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(p, mt)) | 0) +
                                                Math.imul(m, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(m, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Ot >>> 26)) |
                                0),
                                (Ot &= 67108863),
                                (n = Math.imul(U, W)),
                                (i =
                                    ((i = Math.imul(U, Z)) + Math.imul(D, W)) |
                                    0),
                                (s = Math.imul(D, Z)),
                                (n = (n + Math.imul(C, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, K)) | 0) +
                                        Math.imul(L, X)) |
                                    0),
                                (s = (s + Math.imul(L, K)) | 0),
                                (n = (n + Math.imul(k, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, tt)) | 0) +
                                        Math.imul(I, Q)) |
                                    0),
                                (s = (s + Math.imul(I, tt)) | 0),
                                (n = (n + Math.imul(P, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, nt)) | 0) +
                                        Math.imul(T, rt)) |
                                    0),
                                (s = (s + Math.imul(T, nt)) | 0),
                                (n = (n + Math.imul(O, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ot)) | 0) +
                                        Math.imul(S, st)) |
                                    0),
                                (s = (s + Math.imul(S, ot)) | 0),
                                (n = (n + Math.imul(_, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ht)) | 0) +
                                        Math.imul(A, ut)) |
                                    0),
                                (s = (s + Math.imul(A, ht)) | 0),
                                (n = (n + Math.imul(b, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ft)) | 0) +
                                        Math.imul(M, ct)) |
                                    0),
                                (s = (s + Math.imul(M, ft)) | 0);
                            var St =
                                (((h + (n = (n + Math.imul(y, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(y, mt)) | 0) +
                                                Math.imul(v, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(v, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (St >>> 26)) |
                                0),
                                (St &= 67108863),
                                (n = Math.imul(U, X)),
                                (i =
                                    ((i = Math.imul(U, K)) + Math.imul(D, X)) |
                                    0),
                                (s = Math.imul(D, K)),
                                (n = (n + Math.imul(C, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, tt)) | 0) +
                                        Math.imul(L, Q)) |
                                    0),
                                (s = (s + Math.imul(L, tt)) | 0),
                                (n = (n + Math.imul(k, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, nt)) | 0) +
                                        Math.imul(I, rt)) |
                                    0),
                                (s = (s + Math.imul(I, nt)) | 0),
                                (n = (n + Math.imul(P, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ot)) | 0) +
                                        Math.imul(T, st)) |
                                    0),
                                (s = (s + Math.imul(T, ot)) | 0),
                                (n = (n + Math.imul(O, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ht)) | 0) +
                                        Math.imul(S, ut)) |
                                    0),
                                (s = (s + Math.imul(S, ht)) | 0),
                                (n = (n + Math.imul(_, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ft)) | 0) +
                                        Math.imul(A, ct)) |
                                    0),
                                (s = (s + Math.imul(A, ft)) | 0);
                            var xt =
                                (((h + (n = (n + Math.imul(b, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(b, mt)) | 0) +
                                                Math.imul(M, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(M, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (xt >>> 26)) |
                                0),
                                (xt &= 67108863),
                                (n = Math.imul(U, Q)),
                                (i =
                                    ((i = Math.imul(U, tt)) + Math.imul(D, Q)) |
                                    0),
                                (s = Math.imul(D, tt)),
                                (n = (n + Math.imul(C, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, nt)) | 0) +
                                        Math.imul(L, rt)) |
                                    0),
                                (s = (s + Math.imul(L, nt)) | 0),
                                (n = (n + Math.imul(k, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ot)) | 0) +
                                        Math.imul(I, st)) |
                                    0),
                                (s = (s + Math.imul(I, ot)) | 0),
                                (n = (n + Math.imul(P, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ht)) | 0) +
                                        Math.imul(T, ut)) |
                                    0),
                                (s = (s + Math.imul(T, ht)) | 0),
                                (n = (n + Math.imul(O, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ft)) | 0) +
                                        Math.imul(S, ct)) |
                                    0),
                                (s = (s + Math.imul(S, ft)) | 0);
                            var Pt =
                                (((h + (n = (n + Math.imul(_, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(_, mt)) | 0) +
                                                Math.imul(A, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(A, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Pt >>> 26)) |
                                0),
                                (Pt &= 67108863),
                                (n = Math.imul(U, rt)),
                                (i =
                                    ((i = Math.imul(U, nt)) +
                                        Math.imul(D, rt)) |
                                    0),
                                (s = Math.imul(D, nt)),
                                (n = (n + Math.imul(C, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ot)) | 0) +
                                        Math.imul(L, st)) |
                                    0),
                                (s = (s + Math.imul(L, ot)) | 0),
                                (n = (n + Math.imul(k, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ht)) | 0) +
                                        Math.imul(I, ut)) |
                                    0),
                                (s = (s + Math.imul(I, ht)) | 0),
                                (n = (n + Math.imul(P, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ft)) | 0) +
                                        Math.imul(T, ct)) |
                                    0),
                                (s = (s + Math.imul(T, ft)) | 0);
                            var Tt =
                                (((h + (n = (n + Math.imul(O, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(O, mt)) | 0) +
                                                Math.imul(S, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(S, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Tt >>> 26)) |
                                0),
                                (Tt &= 67108863),
                                (n = Math.imul(U, st)),
                                (i =
                                    ((i = Math.imul(U, ot)) +
                                        Math.imul(D, st)) |
                                    0),
                                (s = Math.imul(D, ot)),
                                (n = (n + Math.imul(C, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ht)) | 0) +
                                        Math.imul(L, ut)) |
                                    0),
                                (s = (s + Math.imul(L, ht)) | 0),
                                (n = (n + Math.imul(k, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ft)) | 0) +
                                        Math.imul(I, ct)) |
                                    0),
                                (s = (s + Math.imul(I, ft)) | 0);
                            var Rt =
                                (((h + (n = (n + Math.imul(P, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(P, mt)) | 0) +
                                                Math.imul(T, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(T, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Rt >>> 26)) |
                                0),
                                (Rt &= 67108863),
                                (n = Math.imul(U, ut)),
                                (i =
                                    ((i = Math.imul(U, ht)) +
                                        Math.imul(D, ut)) |
                                    0),
                                (s = Math.imul(D, ht)),
                                (n = (n + Math.imul(C, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ft)) | 0) +
                                        Math.imul(L, ct)) |
                                    0),
                                (s = (s + Math.imul(L, ft)) | 0);
                            var kt =
                                (((h + (n = (n + Math.imul(k, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(k, mt)) | 0) +
                                                Math.imul(I, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(I, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (kt >>> 26)) |
                                0),
                                (kt &= 67108863),
                                (n = Math.imul(U, ct)),
                                (i =
                                    ((i = Math.imul(U, ft)) +
                                        Math.imul(D, ct)) |
                                    0),
                                (s = Math.imul(D, ft));
                            var It =
                                (((h + (n = (n + Math.imul(C, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(C, mt)) | 0) +
                                                Math.imul(L, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(L, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (It >>> 26)) |
                                0),
                                (It &= 67108863);
                            var Bt =
                                (((h + (n = Math.imul(U, pt))) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = Math.imul(U, mt)) +
                                                Math.imul(D, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            return (
                                (h =
                                    ((((s = Math.imul(D, mt)) + (i >>> 13)) |
                                        0) +
                                        (Bt >>> 26)) |
                                    0),
                                (Bt &= 67108863),
                                (u[0] = gt),
                                (u[1] = yt),
                                (u[2] = vt),
                                (u[3] = wt),
                                (u[4] = bt),
                                (u[5] = Mt),
                                (u[6] = Et),
                                (u[7] = _t),
                                (u[8] = At),
                                (u[9] = Nt),
                                (u[10] = Ot),
                                (u[11] = St),
                                (u[12] = xt),
                                (u[13] = Pt),
                                (u[14] = Tt),
                                (u[15] = Rt),
                                (u[16] = kt),
                                (u[17] = It),
                                (u[18] = Bt),
                                0 !== h && ((u[19] = h), r.length++),
                                r
                            );
                        };
                        function y(t, e, r) {
                            (r.negative = e.negative ^ t.negative),
                                (r.length = t.length + e.length);
                            for (
                                var n = 0, i = 0, s = 0;
                                s < r.length - 1;
                                s++
                            ) {
                                var o = i;
                                i = 0;
                                for (
                                    var a = 67108863 & n,
                                        u = Math.min(s, e.length - 1),
                                        h = Math.max(0, s - t.length + 1);
                                    h <= u;
                                    h++
                                ) {
                                    var l = s - h,
                                        c = (0 | t.words[l]) * (0 | e.words[h]),
                                        f = 67108863 & c;
                                    (a = 67108863 & (f = (f + a) | 0)),
                                        (i +=
                                            (o =
                                                ((o =
                                                    (o + ((c / 67108864) | 0)) |
                                                    0) +
                                                    (f >>> 26)) |
                                                0) >>> 26),
                                        (o &= 67108863);
                                }
                                (r.words[s] = a), (n = o), (o = i);
                            }
                            return (
                                0 !== n ? (r.words[s] = n) : r.length--,
                                r._strip()
                            );
                        }
                        function v(t, e, r) {
                            return y(t, e, r);
                        }
                        function w(t, e) {
                            (this.x = t), (this.y = e);
                        }
                        Math.imul || (g = m),
                            (s.prototype.mulTo = function(t, e) {
                                var r = this.length + t.length;
                                return 10 === this.length && 10 === t.length
                                    ? g(this, t, e)
                                    : r < 63
                                    ? m(this, t, e)
                                    : r < 1024
                                    ? y(this, t, e)
                                    : v(this, t, e);
                            }),
                            (w.prototype.makeRBT = function(t) {
                                for (
                                    var e = new Array(t),
                                        r = s.prototype._countBits(t) - 1,
                                        n = 0;
                                    n < t;
                                    n++
                                )
                                    e[n] = this.revBin(n, r, t);
                                return e;
                            }),
                            (w.prototype.revBin = function(t, e, r) {
                                if (0 === t || t === r - 1) return t;
                                for (var n = 0, i = 0; i < e; i++)
                                    (n |= (1 & t) << (e - i - 1)), (t >>= 1);
                                return n;
                            }),
                            (w.prototype.permute = function(t, e, r, n, i, s) {
                                for (var o = 0; o < s; o++)
                                    (n[o] = e[t[o]]), (i[o] = r[t[o]]);
                            }),
                            (w.prototype.transform = function(
                                t,
                                e,
                                r,
                                n,
                                i,
                                s
                            ) {
                                this.permute(s, t, e, r, n, i);
                                for (var o = 1; o < i; o <<= 1)
                                    for (
                                        var a = o << 1,
                                            u = Math.cos((2 * Math.PI) / a),
                                            h = Math.sin((2 * Math.PI) / a),
                                            l = 0;
                                        l < i;
                                        l += a
                                    )
                                        for (
                                            var c = u, f = h, d = 0;
                                            d < o;
                                            d++
                                        ) {
                                            var p = r[l + d],
                                                m = n[l + d],
                                                g = r[l + d + o],
                                                y = n[l + d + o],
                                                v = c * g - f * y;
                                            (y = c * y + f * g),
                                                (g = v),
                                                (r[l + d] = p + g),
                                                (n[l + d] = m + y),
                                                (r[l + d + o] = p - g),
                                                (n[l + d + o] = m - y),
                                                d !== a &&
                                                    ((v = u * c - h * f),
                                                    (f = u * f + h * c),
                                                    (c = v));
                                        }
                            }),
                            (w.prototype.guessLen13b = function(t, e) {
                                var r = 1 | Math.max(e, t),
                                    n = 1 & r,
                                    i = 0;
                                for (r = (r / 2) | 0; r; r >>>= 1) i++;
                                return 1 << (i + 1 + n);
                            }),
                            (w.prototype.conjugate = function(t, e, r) {
                                if (!(r <= 1))
                                    for (var n = 0; n < r / 2; n++) {
                                        var i = t[n];
                                        (t[n] = t[r - n - 1]),
                                            (t[r - n - 1] = i),
                                            (i = e[n]),
                                            (e[n] = -e[r - n - 1]),
                                            (e[r - n - 1] = -i);
                                    }
                            }),
                            (w.prototype.normalize13b = function(t, e) {
                                for (var r = 0, n = 0; n < e / 2; n++) {
                                    var i =
                                        8192 * Math.round(t[2 * n + 1] / e) +
                                        Math.round(t[2 * n] / e) +
                                        r;
                                    (t[n] = 67108863 & i),
                                        (r =
                                            i < 67108864
                                                ? 0
                                                : (i / 67108864) | 0);
                                }
                                return t;
                            }),
                            (w.prototype.convert13b = function(t, e, r, i) {
                                for (var s = 0, o = 0; o < e; o++)
                                    (s += 0 | t[o]),
                                        (r[2 * o] = 8191 & s),
                                        (s >>>= 13),
                                        (r[2 * o + 1] = 8191 & s),
                                        (s >>>= 13);
                                for (o = 2 * e; o < i; ++o) r[o] = 0;
                                n(0 === s), n(!(-8192 & s));
                            }),
                            (w.prototype.stub = function(t) {
                                for (var e = new Array(t), r = 0; r < t; r++)
                                    e[r] = 0;
                                return e;
                            }),
                            (w.prototype.mulp = function(t, e, r) {
                                var n =
                                        2 *
                                        this.guessLen13b(t.length, e.length),
                                    i = this.makeRBT(n),
                                    s = this.stub(n),
                                    o = new Array(n),
                                    a = new Array(n),
                                    u = new Array(n),
                                    h = new Array(n),
                                    l = new Array(n),
                                    c = new Array(n),
                                    f = r.words;
                                (f.length = n),
                                    this.convert13b(t.words, t.length, o, n),
                                    this.convert13b(e.words, e.length, h, n),
                                    this.transform(o, s, a, u, n, i),
                                    this.transform(h, s, l, c, n, i);
                                for (var d = 0; d < n; d++) {
                                    var p = a[d] * l[d] - u[d] * c[d];
                                    (u[d] = a[d] * c[d] + u[d] * l[d]),
                                        (a[d] = p);
                                }
                                return (
                                    this.conjugate(a, u, n),
                                    this.transform(a, u, f, s, n, i),
                                    this.conjugate(f, s, n),
                                    this.normalize13b(f, n),
                                    (r.negative = t.negative ^ e.negative),
                                    (r.length = t.length + e.length),
                                    r._strip()
                                );
                            }),
                            (s.prototype.mul = function(t) {
                                var e = new s(null);
                                return (
                                    (e.words = new Array(
                                        this.length + t.length
                                    )),
                                    this.mulTo(t, e)
                                );
                            }),
                            (s.prototype.mulf = function(t) {
                                var e = new s(null);
                                return (
                                    (e.words = new Array(
                                        this.length + t.length
                                    )),
                                    v(this, t, e)
                                );
                            }),
                            (s.prototype.imul = function(t) {
                                return this.clone().mulTo(t, this);
                            }),
                            (s.prototype.imuln = function(t) {
                                var e = t < 0;
                                e && (t = -t),
                                    n('number' == typeof t),
                                    n(t < 67108864);
                                for (var r = 0, i = 0; i < this.length; i++) {
                                    var s = (0 | this.words[i]) * t,
                                        o = (67108863 & s) + (67108863 & r);
                                    (r >>= 26),
                                        (r += (s / 67108864) | 0),
                                        (r += o >>> 26),
                                        (this.words[i] = 67108863 & o);
                                }
                                return (
                                    0 !== r &&
                                        ((this.words[i] = r), this.length++),
                                    e ? this.ineg() : this
                                );
                            }),
                            (s.prototype.muln = function(t) {
                                return this.clone().imuln(t);
                            }),
                            (s.prototype.sqr = function() {
                                return this.mul(this);
                            }),
                            (s.prototype.isqr = function() {
                                return this.imul(this.clone());
                            }),
                            (s.prototype.pow = function(t) {
                                var e = (function(t) {
                                    for (
                                        var e = new Array(t.bitLength()), r = 0;
                                        r < e.length;
                                        r++
                                    ) {
                                        var n = (r / 26) | 0,
                                            i = r % 26;
                                        e[r] = (t.words[n] >>> i) & 1;
                                    }
                                    return e;
                                })(t);
                                if (0 === e.length) return new s(1);
                                for (
                                    var r = this, n = 0;
                                    n < e.length && 0 === e[n];
                                    n++, r = r.sqr()
                                );
                                if (++n < e.length)
                                    for (
                                        var i = r.sqr();
                                        n < e.length;
                                        n++, i = i.sqr()
                                    )
                                        0 !== e[n] && (r = r.mul(i));
                                return r;
                            }),
                            (s.prototype.iushln = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e,
                                    r = t % 26,
                                    i = (t - r) / 26,
                                    s = (67108863 >>> (26 - r)) << (26 - r);
                                if (0 !== r) {
                                    var o = 0;
                                    for (e = 0; e < this.length; e++) {
                                        var a = this.words[e] & s,
                                            u = ((0 | this.words[e]) - a) << r;
                                        (this.words[e] = u | o),
                                            (o = a >>> (26 - r));
                                    }
                                    o && ((this.words[e] = o), this.length++);
                                }
                                if (0 !== i) {
                                    for (e = this.length - 1; e >= 0; e--)
                                        this.words[e + i] = this.words[e];
                                    for (e = 0; e < i; e++) this.words[e] = 0;
                                    this.length += i;
                                }
                                return this._strip();
                            }),
                            (s.prototype.ishln = function(t) {
                                return n(0 === this.negative), this.iushln(t);
                            }),
                            (s.prototype.iushrn = function(t, e, r) {
                                var i;
                                n('number' == typeof t && t >= 0),
                                    (i = e ? (e - (e % 26)) / 26 : 0);
                                var s = t % 26,
                                    o = Math.min((t - s) / 26, this.length),
                                    a = 67108863 ^ ((67108863 >>> s) << s),
                                    u = r;
                                if (((i -= o), (i = Math.max(0, i)), u)) {
                                    for (var h = 0; h < o; h++)
                                        u.words[h] = this.words[h];
                                    u.length = o;
                                }
                                if (0 === o);
                                else if (this.length > o)
                                    for (
                                        this.length -= o, h = 0;
                                        h < this.length;
                                        h++
                                    )
                                        this.words[h] = this.words[h + o];
                                else (this.words[0] = 0), (this.length = 1);
                                var l = 0;
                                for (
                                    h = this.length - 1;
                                    h >= 0 && (0 !== l || h >= i);
                                    h--
                                ) {
                                    var c = 0 | this.words[h];
                                    (this.words[h] =
                                        (l << (26 - s)) | (c >>> s)),
                                        (l = c & a);
                                }
                                return (
                                    u && 0 !== l && (u.words[u.length++] = l),
                                    0 === this.length &&
                                        ((this.words[0] = 0),
                                        (this.length = 1)),
                                    this._strip()
                                );
                            }),
                            (s.prototype.ishrn = function(t, e, r) {
                                return (
                                    n(0 === this.negative), this.iushrn(t, e, r)
                                );
                            }),
                            (s.prototype.shln = function(t) {
                                return this.clone().ishln(t);
                            }),
                            (s.prototype.ushln = function(t) {
                                return this.clone().iushln(t);
                            }),
                            (s.prototype.shrn = function(t) {
                                return this.clone().ishrn(t);
                            }),
                            (s.prototype.ushrn = function(t) {
                                return this.clone().iushrn(t);
                            }),
                            (s.prototype.testn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = t % 26,
                                    r = (t - e) / 26,
                                    i = 1 << e;
                                return !(
                                    this.length <= r || !(this.words[r] & i)
                                );
                            }),
                            (s.prototype.imaskn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = t % 26,
                                    r = (t - e) / 26;
                                if (
                                    (n(
                                        0 === this.negative,
                                        'imaskn works only with positive numbers'
                                    ),
                                    this.length <= r)
                                )
                                    return this;
                                if (
                                    (0 !== e && r++,
                                    (this.length = Math.min(r, this.length)),
                                    0 !== e)
                                ) {
                                    var i = 67108863 ^ ((67108863 >>> e) << e);
                                    this.words[this.length - 1] &= i;
                                }
                                return this._strip();
                            }),
                            (s.prototype.maskn = function(t) {
                                return this.clone().imaskn(t);
                            }),
                            (s.prototype.iaddn = function(t) {
                                return (
                                    n('number' == typeof t),
                                    n(t < 67108864),
                                    t < 0
                                        ? this.isubn(-t)
                                        : 0 !== this.negative
                                        ? 1 === this.length &&
                                          (0 | this.words[0]) <= t
                                            ? ((this.words[0] =
                                                  t - (0 | this.words[0])),
                                              (this.negative = 0),
                                              this)
                                            : ((this.negative = 0),
                                              this.isubn(t),
                                              (this.negative = 1),
                                              this)
                                        : this._iaddn(t)
                                );
                            }),
                            (s.prototype._iaddn = function(t) {
                                this.words[0] += t;
                                for (
                                    var e = 0;
                                    e < this.length &&
                                    this.words[e] >= 67108864;
                                    e++
                                )
                                    (this.words[e] -= 67108864),
                                        e === this.length - 1
                                            ? (this.words[e + 1] = 1)
                                            : this.words[e + 1]++;
                                return (
                                    (this.length = Math.max(
                                        this.length,
                                        e + 1
                                    )),
                                    this
                                );
                            }),
                            (s.prototype.isubn = function(t) {
                                if (
                                    (n('number' == typeof t),
                                    n(t < 67108864),
                                    t < 0)
                                )
                                    return this.iaddn(-t);
                                if (0 !== this.negative)
                                    return (
                                        (this.negative = 0),
                                        this.iaddn(t),
                                        (this.negative = 1),
                                        this
                                    );
                                if (
                                    ((this.words[0] -= t),
                                    1 === this.length && this.words[0] < 0)
                                )
                                    (this.words[0] = -this.words[0]),
                                        (this.negative = 1);
                                else
                                    for (
                                        var e = 0;
                                        e < this.length && this.words[e] < 0;
                                        e++
                                    )
                                        (this.words[e] += 67108864),
                                            (this.words[e + 1] -= 1);
                                return this._strip();
                            }),
                            (s.prototype.addn = function(t) {
                                return this.clone().iaddn(t);
                            }),
                            (s.prototype.subn = function(t) {
                                return this.clone().isubn(t);
                            }),
                            (s.prototype.iabs = function() {
                                return (this.negative = 0), this;
                            }),
                            (s.prototype.abs = function() {
                                return this.clone().iabs();
                            }),
                            (s.prototype._ishlnsubmul = function(t, e, r) {
                                var i,
                                    s,
                                    o = t.length + r;
                                this._expand(o);
                                var a = 0;
                                for (i = 0; i < t.length; i++) {
                                    s = (0 | this.words[i + r]) + a;
                                    var u = (0 | t.words[i]) * e;
                                    (a =
                                        ((s -= 67108863 & u) >> 26) -
                                        ((u / 67108864) | 0)),
                                        (this.words[i + r] = 67108863 & s);
                                }
                                for (; i < this.length - r; i++)
                                    (a =
                                        (s = (0 | this.words[i + r]) + a) >>
                                        26),
                                        (this.words[i + r] = 67108863 & s);
                                if (0 === a) return this._strip();
                                for (
                                    n(-1 === a), a = 0, i = 0;
                                    i < this.length;
                                    i++
                                )
                                    (a = (s = -(0 | this.words[i]) + a) >> 26),
                                        (this.words[i] = 67108863 & s);
                                return (this.negative = 1), this._strip();
                            }),
                            (s.prototype._wordDiv = function(t, e) {
                                var r = (this.length, t.length),
                                    n = this.clone(),
                                    i = t,
                                    o = 0 | i.words[i.length - 1];
                                0 != (r = 26 - this._countBits(o)) &&
                                    ((i = i.ushln(r)),
                                    n.iushln(r),
                                    (o = 0 | i.words[i.length - 1]));
                                var a,
                                    u = n.length - i.length;
                                if ('mod' !== e) {
                                    ((a = new s(null)).length = u + 1),
                                        (a.words = new Array(a.length));
                                    for (var h = 0; h < a.length; h++)
                                        a.words[h] = 0;
                                }
                                var l = n.clone()._ishlnsubmul(i, 1, u);
                                0 === l.negative &&
                                    ((n = l), a && (a.words[u] = 1));
                                for (var c = u - 1; c >= 0; c--) {
                                    var f =
                                        67108864 * (0 | n.words[i.length + c]) +
                                        (0 | n.words[i.length + c - 1]);
                                    for (
                                        f = Math.min((f / o) | 0, 67108863),
                                            n._ishlnsubmul(i, f, c);
                                        0 !== n.negative;

                                    )
                                        f--,
                                            (n.negative = 0),
                                            n._ishlnsubmul(i, 1, c),
                                            n.isZero() || (n.negative ^= 1);
                                    a && (a.words[c] = f);
                                }
                                return (
                                    a && a._strip(),
                                    n._strip(),
                                    'div' !== e && 0 !== r && n.iushrn(r),
                                    { div: a || null, mod: n }
                                );
                            }),
                            (s.prototype.divmod = function(t, e, r) {
                                return (
                                    n(!t.isZero()),
                                    this.isZero()
                                        ? { div: new s(0), mod: new s(0) }
                                        : 0 !== this.negative &&
                                          0 === t.negative
                                        ? ((a = this.neg().divmod(t, e)),
                                          'mod' !== e && (i = a.div.neg()),
                                          'div' !== e &&
                                              ((o = a.mod.neg()),
                                              r &&
                                                  0 !== o.negative &&
                                                  o.iadd(t)),
                                          { div: i, mod: o })
                                        : 0 === this.negative &&
                                          0 !== t.negative
                                        ? ((a = this.divmod(t.neg(), e)),
                                          'mod' !== e && (i = a.div.neg()),
                                          { div: i, mod: a.mod })
                                        : this.negative & t.negative
                                        ? ((a = this.neg().divmod(t.neg(), e)),
                                          'div' !== e &&
                                              ((o = a.mod.neg()),
                                              r &&
                                                  0 !== o.negative &&
                                                  o.isub(t)),
                                          { div: a.div, mod: o })
                                        : t.length > this.length ||
                                          this.cmp(t) < 0
                                        ? { div: new s(0), mod: this }
                                        : 1 === t.length
                                        ? 'div' === e
                                            ? {
                                                  div: this.divn(t.words[0]),
                                                  mod: null,
                                              }
                                            : 'mod' === e
                                            ? {
                                                  div: null,
                                                  mod: new s(
                                                      this.modrn(t.words[0])
                                                  ),
                                              }
                                            : {
                                                  div: this.divn(t.words[0]),
                                                  mod: new s(
                                                      this.modrn(t.words[0])
                                                  ),
                                              }
                                        : this._wordDiv(t, e)
                                );
                                var i, o, a;
                            }),
                            (s.prototype.div = function(t) {
                                return this.divmod(t, 'div', !1).div;
                            }),
                            (s.prototype.mod = function(t) {
                                return this.divmod(t, 'mod', !1).mod;
                            }),
                            (s.prototype.umod = function(t) {
                                return this.divmod(t, 'mod', !0).mod;
                            }),
                            (s.prototype.divRound = function(t) {
                                var e = this.divmod(t);
                                if (e.mod.isZero()) return e.div;
                                var r =
                                        0 !== e.div.negative
                                            ? e.mod.isub(t)
                                            : e.mod,
                                    n = t.ushrn(1),
                                    i = t.andln(1),
                                    s = r.cmp(n);
                                return s < 0 || (1 === i && 0 === s)
                                    ? e.div
                                    : 0 !== e.div.negative
                                    ? e.div.isubn(1)
                                    : e.div.iaddn(1);
                            }),
                            (s.prototype.modrn = function(t) {
                                var e = t < 0;
                                e && (t = -t), n(t <= 67108863);
                                for (
                                    var r = (1 << 26) % t,
                                        i = 0,
                                        s = this.length - 1;
                                    s >= 0;
                                    s--
                                )
                                    i = (r * i + (0 | this.words[s])) % t;
                                return e ? -i : i;
                            }),
                            (s.prototype.modn = function(t) {
                                return this.modrn(t);
                            }),
                            (s.prototype.idivn = function(t) {
                                var e = t < 0;
                                e && (t = -t), n(t <= 67108863);
                                for (
                                    var r = 0, i = this.length - 1;
                                    i >= 0;
                                    i--
                                ) {
                                    var s = (0 | this.words[i]) + 67108864 * r;
                                    (this.words[i] = (s / t) | 0), (r = s % t);
                                }
                                return this._strip(), e ? this.ineg() : this;
                            }),
                            (s.prototype.divn = function(t) {
                                return this.clone().idivn(t);
                            }),
                            (s.prototype.egcd = function(t) {
                                n(0 === t.negative), n(!t.isZero());
                                var e = this,
                                    r = t.clone();
                                e = 0 !== e.negative ? e.umod(t) : e.clone();
                                for (
                                    var i = new s(1),
                                        o = new s(0),
                                        a = new s(0),
                                        u = new s(1),
                                        h = 0;
                                    e.isEven() && r.isEven();

                                )
                                    e.iushrn(1), r.iushrn(1), ++h;
                                for (
                                    var l = r.clone(), c = e.clone();
                                    !e.isZero();

                                ) {
                                    for (
                                        var f = 0, d = 1;
                                        !(e.words[0] & d) && f < 26;
                                        ++f, d <<= 1
                                    );
                                    if (f > 0)
                                        for (e.iushrn(f); f-- > 0; )
                                            (i.isOdd() || o.isOdd()) &&
                                                (i.iadd(l), o.isub(c)),
                                                i.iushrn(1),
                                                o.iushrn(1);
                                    for (
                                        var p = 0, m = 1;
                                        !(r.words[0] & m) && p < 26;
                                        ++p, m <<= 1
                                    );
                                    if (p > 0)
                                        for (r.iushrn(p); p-- > 0; )
                                            (a.isOdd() || u.isOdd()) &&
                                                (a.iadd(l), u.isub(c)),
                                                a.iushrn(1),
                                                u.iushrn(1);
                                    e.cmp(r) >= 0
                                        ? (e.isub(r), i.isub(a), o.isub(u))
                                        : (r.isub(e), a.isub(i), u.isub(o));
                                }
                                return { a, b: u, gcd: r.iushln(h) };
                            }),
                            (s.prototype._invmp = function(t) {
                                n(0 === t.negative), n(!t.isZero());
                                var e = this,
                                    r = t.clone();
                                e = 0 !== e.negative ? e.umod(t) : e.clone();
                                for (
                                    var i,
                                        o = new s(1),
                                        a = new s(0),
                                        u = r.clone();
                                    e.cmpn(1) > 0 && r.cmpn(1) > 0;

                                ) {
                                    for (
                                        var h = 0, l = 1;
                                        !(e.words[0] & l) && h < 26;
                                        ++h, l <<= 1
                                    );
                                    if (h > 0)
                                        for (e.iushrn(h); h-- > 0; )
                                            o.isOdd() && o.iadd(u), o.iushrn(1);
                                    for (
                                        var c = 0, f = 1;
                                        !(r.words[0] & f) && c < 26;
                                        ++c, f <<= 1
                                    );
                                    if (c > 0)
                                        for (r.iushrn(c); c-- > 0; )
                                            a.isOdd() && a.iadd(u), a.iushrn(1);
                                    e.cmp(r) >= 0
                                        ? (e.isub(r), o.isub(a))
                                        : (r.isub(e), a.isub(o));
                                }
                                return (
                                    (i = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 &&
                                        i.iadd(t),
                                    i
                                );
                            }),
                            (s.prototype.gcd = function(t) {
                                if (this.isZero()) return t.abs();
                                if (t.isZero()) return this.abs();
                                var e = this.clone(),
                                    r = t.clone();
                                (e.negative = 0), (r.negative = 0);
                                for (var n = 0; e.isEven() && r.isEven(); n++)
                                    e.iushrn(1), r.iushrn(1);
                                for (;;) {
                                    for (; e.isEven(); ) e.iushrn(1);
                                    for (; r.isEven(); ) r.iushrn(1);
                                    var i = e.cmp(r);
                                    if (i < 0) {
                                        var s = e;
                                        (e = r), (r = s);
                                    } else if (0 === i || 0 === r.cmpn(1))
                                        break;
                                    e.isub(r);
                                }
                                return r.iushln(n);
                            }),
                            (s.prototype.invm = function(t) {
                                return this.egcd(t).a.umod(t);
                            }),
                            (s.prototype.isEven = function() {
                                return !(1 & this.words[0]);
                            }),
                            (s.prototype.isOdd = function() {
                                return !(1 & ~this.words[0]);
                            }),
                            (s.prototype.andln = function(t) {
                                return this.words[0] & t;
                            }),
                            (s.prototype.bincn = function(t) {
                                n('number' == typeof t);
                                var e = t % 26,
                                    r = (t - e) / 26,
                                    i = 1 << e;
                                if (this.length <= r)
                                    return (
                                        this._expand(r + 1),
                                        (this.words[r] |= i),
                                        this
                                    );
                                for (
                                    var s = i, o = r;
                                    0 !== s && o < this.length;
                                    o++
                                ) {
                                    var a = 0 | this.words[o];
                                    (s = (a += s) >>> 26),
                                        (a &= 67108863),
                                        (this.words[o] = a);
                                }
                                return (
                                    0 !== s &&
                                        ((this.words[o] = s), this.length++),
                                    this
                                );
                            }),
                            (s.prototype.isZero = function() {
                                return 1 === this.length && 0 === this.words[0];
                            }),
                            (s.prototype.cmpn = function(t) {
                                var e,
                                    r = t < 0;
                                if (0 !== this.negative && !r) return -1;
                                if (0 === this.negative && r) return 1;
                                if ((this._strip(), this.length > 1)) e = 1;
                                else {
                                    r && (t = -t),
                                        n(t <= 67108863, 'Number is too big');
                                    var i = 0 | this.words[0];
                                    e = i === t ? 0 : i < t ? -1 : 1;
                                }
                                return 0 !== this.negative ? 0 | -e : e;
                            }),
                            (s.prototype.cmp = function(t) {
                                if (0 !== this.negative && 0 === t.negative)
                                    return -1;
                                if (0 === this.negative && 0 !== t.negative)
                                    return 1;
                                var e = this.ucmp(t);
                                return 0 !== this.negative ? 0 | -e : e;
                            }),
                            (s.prototype.ucmp = function(t) {
                                if (this.length > t.length) return 1;
                                if (this.length < t.length) return -1;
                                for (
                                    var e = 0, r = this.length - 1;
                                    r >= 0;
                                    r--
                                ) {
                                    var n = 0 | this.words[r],
                                        i = 0 | t.words[r];
                                    if (n !== i) {
                                        n < i ? (e = -1) : n > i && (e = 1);
                                        break;
                                    }
                                }
                                return e;
                            }),
                            (s.prototype.gtn = function(t) {
                                return 1 === this.cmpn(t);
                            }),
                            (s.prototype.gt = function(t) {
                                return 1 === this.cmp(t);
                            }),
                            (s.prototype.gten = function(t) {
                                return this.cmpn(t) >= 0;
                            }),
                            (s.prototype.gte = function(t) {
                                return this.cmp(t) >= 0;
                            }),
                            (s.prototype.ltn = function(t) {
                                return -1 === this.cmpn(t);
                            }),
                            (s.prototype.lt = function(t) {
                                return -1 === this.cmp(t);
                            }),
                            (s.prototype.lten = function(t) {
                                return this.cmpn(t) <= 0;
                            }),
                            (s.prototype.lte = function(t) {
                                return this.cmp(t) <= 0;
                            }),
                            (s.prototype.eqn = function(t) {
                                return 0 === this.cmpn(t);
                            }),
                            (s.prototype.eq = function(t) {
                                return 0 === this.cmp(t);
                            }),
                            (s.red = function(t) {
                                return new O(t);
                            }),
                            (s.prototype.toRed = function(t) {
                                return (
                                    n(
                                        !this.red,
                                        'Already a number in reduction context'
                                    ),
                                    n(
                                        0 === this.negative,
                                        'red works only with positives'
                                    ),
                                    t.convertTo(this)._forceRed(t)
                                );
                            }),
                            (s.prototype.fromRed = function() {
                                return (
                                    n(
                                        this.red,
                                        'fromRed works only with numbers in reduction context'
                                    ),
                                    this.red.convertFrom(this)
                                );
                            }),
                            (s.prototype._forceRed = function(t) {
                                return (this.red = t), this;
                            }),
                            (s.prototype.forceRed = function(t) {
                                return (
                                    n(
                                        !this.red,
                                        'Already a number in reduction context'
                                    ),
                                    this._forceRed(t)
                                );
                            }),
                            (s.prototype.redAdd = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redAdd works only with red numbers'
                                    ),
                                    this.red.add(this, t)
                                );
                            }),
                            (s.prototype.redIAdd = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redIAdd works only with red numbers'
                                    ),
                                    this.red.iadd(this, t)
                                );
                            }),
                            (s.prototype.redSub = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redSub works only with red numbers'
                                    ),
                                    this.red.sub(this, t)
                                );
                            }),
                            (s.prototype.redISub = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redISub works only with red numbers'
                                    ),
                                    this.red.isub(this, t)
                                );
                            }),
                            (s.prototype.redShl = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redShl works only with red numbers'
                                    ),
                                    this.red.shl(this, t)
                                );
                            }),
                            (s.prototype.redMul = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redMul works only with red numbers'
                                    ),
                                    this.red._verify2(this, t),
                                    this.red.mul(this, t)
                                );
                            }),
                            (s.prototype.redIMul = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redMul works only with red numbers'
                                    ),
                                    this.red._verify2(this, t),
                                    this.red.imul(this, t)
                                );
                            }),
                            (s.prototype.redSqr = function() {
                                return (
                                    n(
                                        this.red,
                                        'redSqr works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.sqr(this)
                                );
                            }),
                            (s.prototype.redISqr = function() {
                                return (
                                    n(
                                        this.red,
                                        'redISqr works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.isqr(this)
                                );
                            }),
                            (s.prototype.redSqrt = function() {
                                return (
                                    n(
                                        this.red,
                                        'redSqrt works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.sqrt(this)
                                );
                            }),
                            (s.prototype.redInvm = function() {
                                return (
                                    n(
                                        this.red,
                                        'redInvm works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.invm(this)
                                );
                            }),
                            (s.prototype.redNeg = function() {
                                return (
                                    n(
                                        this.red,
                                        'redNeg works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.neg(this)
                                );
                            }),
                            (s.prototype.redPow = function(t) {
                                return (
                                    n(this.red && !t.red, 'redPow(normalNum)'),
                                    this.red._verify1(this),
                                    this.red.pow(this, t)
                                );
                            });
                        var b = {
                            k256: null,
                            p224: null,
                            p192: null,
                            p25519: null,
                        };
                        function M(t, e) {
                            (this.name = t),
                                (this.p = new s(e, 16)),
                                (this.n = this.p.bitLength()),
                                (this.k = new s(1).iushln(this.n).isub(this.p)),
                                (this.tmp = this._tmp());
                        }
                        function E() {
                            M.call(
                                this,
                                'k256',
                                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
                            );
                        }
                        function _() {
                            M.call(
                                this,
                                'p224',
                                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
                            );
                        }
                        function A() {
                            M.call(
                                this,
                                'p192',
                                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
                            );
                        }
                        function N() {
                            M.call(
                                this,
                                '25519',
                                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
                            );
                        }
                        function O(t) {
                            if ('string' == typeof t) {
                                var e = s._prime(t);
                                (this.m = e.p), (this.prime = e);
                            } else
                                n(t.gtn(1), 'modulus must be greater than 1'),
                                    (this.m = t),
                                    (this.prime = null);
                        }
                        function S(t) {
                            O.call(this, t),
                                (this.shift = this.m.bitLength()),
                                this.shift % 26 != 0 &&
                                    (this.shift += 26 - (this.shift % 26)),
                                (this.r = new s(1).iushln(this.shift)),
                                (this.r2 = this.imod(this.r.sqr())),
                                (this.rinv = this.r._invmp(this.m)),
                                (this.minv = this.rinv
                                    .mul(this.r)
                                    .isubn(1)
                                    .div(this.m)),
                                (this.minv = this.minv.umod(this.r)),
                                (this.minv = this.r.sub(this.minv));
                        }
                        (M.prototype._tmp = function() {
                            var t = new s(null);
                            return (
                                (t.words = new Array(Math.ceil(this.n / 13))), t
                            );
                        }),
                            (M.prototype.ireduce = function(t) {
                                var e,
                                    r = t;
                                do {
                                    this.split(r, this.tmp),
                                        (e = (r = (r = this.imulK(r)).iadd(
                                            this.tmp
                                        )).bitLength());
                                } while (e > this.n);
                                var n = e < this.n ? -1 : r.ucmp(this.p);
                                return (
                                    0 === n
                                        ? ((r.words[0] = 0), (r.length = 1))
                                        : n > 0
                                        ? r.isub(this.p)
                                        : void 0 !== r.strip
                                        ? r.strip()
                                        : r._strip(),
                                    r
                                );
                            }),
                            (M.prototype.split = function(t, e) {
                                t.iushrn(this.n, 0, e);
                            }),
                            (M.prototype.imulK = function(t) {
                                return t.imul(this.k);
                            }),
                            i(E, M),
                            (E.prototype.split = function(t, e) {
                                for (
                                    var r = 4194303,
                                        n = Math.min(t.length, 9),
                                        i = 0;
                                    i < n;
                                    i++
                                )
                                    e.words[i] = t.words[i];
                                if (((e.length = n), t.length <= 9))
                                    return (
                                        (t.words[0] = 0), void (t.length = 1)
                                    );
                                var s = t.words[9];
                                for (
                                    e.words[e.length++] = s & r, i = 10;
                                    i < t.length;
                                    i++
                                ) {
                                    var o = 0 | t.words[i];
                                    (t.words[i - 10] =
                                        ((o & r) << 4) | (s >>> 22)),
                                        (s = o);
                                }
                                (s >>>= 22),
                                    (t.words[i - 10] = s),
                                    0 === s && t.length > 10
                                        ? (t.length -= 10)
                                        : (t.length -= 9);
                            }),
                            (E.prototype.imulK = function(t) {
                                (t.words[t.length] = 0),
                                    (t.words[t.length + 1] = 0),
                                    (t.length += 2);
                                for (var e = 0, r = 0; r < t.length; r++) {
                                    var n = 0 | t.words[r];
                                    (e += 977 * n),
                                        (t.words[r] = 67108863 & e),
                                        (e = 64 * n + ((e / 67108864) | 0));
                                }
                                return (
                                    0 === t.words[t.length - 1] &&
                                        (t.length--,
                                        0 === t.words[t.length - 1] &&
                                            t.length--),
                                    t
                                );
                            }),
                            i(_, M),
                            i(A, M),
                            i(N, M),
                            (N.prototype.imulK = function(t) {
                                for (var e = 0, r = 0; r < t.length; r++) {
                                    var n = 19 * (0 | t.words[r]) + e,
                                        i = 67108863 & n;
                                    (n >>>= 26), (t.words[r] = i), (e = n);
                                }
                                return 0 !== e && (t.words[t.length++] = e), t;
                            }),
                            (s._prime = function(t) {
                                if (b[t]) return b[t];
                                var e;
                                if ('k256' === t) e = new E();
                                else if ('p224' === t) e = new _();
                                else if ('p192' === t) e = new A();
                                else {
                                    if ('p25519' !== t)
                                        throw new Error('Unknown prime ' + t);
                                    e = new N();
                                }
                                return (b[t] = e), e;
                            }),
                            (O.prototype._verify1 = function(t) {
                                n(
                                    0 === t.negative,
                                    'red works only with positives'
                                ),
                                    n(t.red, 'red works only with red numbers');
                            }),
                            (O.prototype._verify2 = function(t, e) {
                                n(
                                    !(t.negative | e.negative),
                                    'red works only with positives'
                                ),
                                    n(
                                        t.red && t.red === e.red,
                                        'red works only with red numbers'
                                    );
                            }),
                            (O.prototype.imod = function(t) {
                                return this.prime
                                    ? this.prime.ireduce(t)._forceRed(this)
                                    : (l(t, t.umod(this.m)._forceRed(this)), t);
                            }),
                            (O.prototype.neg = function(t) {
                                return t.isZero()
                                    ? t.clone()
                                    : this.m.sub(t)._forceRed(this);
                            }),
                            (O.prototype.add = function(t, e) {
                                this._verify2(t, e);
                                var r = t.add(e);
                                return (
                                    r.cmp(this.m) >= 0 && r.isub(this.m),
                                    r._forceRed(this)
                                );
                            }),
                            (O.prototype.iadd = function(t, e) {
                                this._verify2(t, e);
                                var r = t.iadd(e);
                                return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                            }),
                            (O.prototype.sub = function(t, e) {
                                this._verify2(t, e);
                                var r = t.sub(e);
                                return (
                                    r.cmpn(0) < 0 && r.iadd(this.m),
                                    r._forceRed(this)
                                );
                            }),
                            (O.prototype.isub = function(t, e) {
                                this._verify2(t, e);
                                var r = t.isub(e);
                                return r.cmpn(0) < 0 && r.iadd(this.m), r;
                            }),
                            (O.prototype.shl = function(t, e) {
                                return this._verify1(t), this.imod(t.ushln(e));
                            }),
                            (O.prototype.imul = function(t, e) {
                                return (
                                    this._verify2(t, e), this.imod(t.imul(e))
                                );
                            }),
                            (O.prototype.mul = function(t, e) {
                                return this._verify2(t, e), this.imod(t.mul(e));
                            }),
                            (O.prototype.isqr = function(t) {
                                return this.imul(t, t.clone());
                            }),
                            (O.prototype.sqr = function(t) {
                                return this.mul(t, t);
                            }),
                            (O.prototype.sqrt = function(t) {
                                if (t.isZero()) return t.clone();
                                var e = this.m.andln(3);
                                if ((n(e % 2 == 1), 3 === e)) {
                                    var r = this.m.add(new s(1)).iushrn(2);
                                    return this.pow(t, r);
                                }
                                for (
                                    var i = this.m.subn(1), o = 0;
                                    !i.isZero() && 0 === i.andln(1);

                                )
                                    o++, i.iushrn(1);
                                n(!i.isZero());
                                var a = new s(1).toRed(this),
                                    u = a.redNeg(),
                                    h = this.m.subn(1).iushrn(1),
                                    l = this.m.bitLength();
                                for (
                                    l = new s(2 * l * l).toRed(this);
                                    0 !== this.pow(l, h).cmp(u);

                                )
                                    l.redIAdd(u);
                                for (
                                    var c = this.pow(l, i),
                                        f = this.pow(t, i.addn(1).iushrn(1)),
                                        d = this.pow(t, i),
                                        p = o;
                                    0 !== d.cmp(a);

                                ) {
                                    for (var m = d, g = 0; 0 !== m.cmp(a); g++)
                                        m = m.redSqr();
                                    n(g < p);
                                    var y = this.pow(
                                        c,
                                        new s(1).iushln(p - g - 1)
                                    );
                                    (f = f.redMul(y)),
                                        (c = y.redSqr()),
                                        (d = d.redMul(c)),
                                        (p = g);
                                }
                                return f;
                            }),
                            (O.prototype.invm = function(t) {
                                var e = t._invmp(this.m);
                                return 0 !== e.negative
                                    ? ((e.negative = 0), this.imod(e).redNeg())
                                    : this.imod(e);
                            }),
                            (O.prototype.pow = function(t, e) {
                                if (e.isZero()) return new s(1).toRed(this);
                                if (0 === e.cmpn(1)) return t.clone();
                                var r = new Array(16);
                                (r[0] = new s(1).toRed(this)), (r[1] = t);
                                for (var n = 2; n < r.length; n++)
                                    r[n] = this.mul(r[n - 1], t);
                                var i = r[0],
                                    o = 0,
                                    a = 0,
                                    u = e.bitLength() % 26;
                                for (
                                    0 === u && (u = 26), n = e.length - 1;
                                    n >= 0;
                                    n--
                                ) {
                                    for (
                                        var h = e.words[n], l = u - 1;
                                        l >= 0;
                                        l--
                                    ) {
                                        var c = (h >> l) & 1;
                                        i !== r[0] && (i = this.sqr(i)),
                                            0 !== c || 0 !== o
                                                ? ((o <<= 1),
                                                  (o |= c),
                                                  (4 == ++a ||
                                                      (0 === n && 0 === l)) &&
                                                      ((i = this.mul(i, r[o])),
                                                      (a = 0),
                                                      (o = 0)))
                                                : (a = 0);
                                    }
                                    u = 26;
                                }
                                return i;
                            }),
                            (O.prototype.convertTo = function(t) {
                                var e = t.umod(this.m);
                                return e === t ? e.clone() : e;
                            }),
                            (O.prototype.convertFrom = function(t) {
                                var e = t.clone();
                                return (e.red = null), e;
                            }),
                            (s.mont = function(t) {
                                return new S(t);
                            }),
                            i(S, O),
                            (S.prototype.convertTo = function(t) {
                                return this.imod(t.ushln(this.shift));
                            }),
                            (S.prototype.convertFrom = function(t) {
                                var e = this.imod(t.mul(this.rinv));
                                return (e.red = null), e;
                            }),
                            (S.prototype.imul = function(t, e) {
                                if (t.isZero() || e.isZero())
                                    return (t.words[0] = 0), (t.length = 1), t;
                                var r = t.imul(e),
                                    n = r
                                        .maskn(this.shift)
                                        .mul(this.minv)
                                        .imaskn(this.shift)
                                        .mul(this.m),
                                    i = r.isub(n).iushrn(this.shift),
                                    s = i;
                                return (
                                    i.cmp(this.m) >= 0
                                        ? (s = i.isub(this.m))
                                        : i.cmpn(0) < 0 && (s = i.iadd(this.m)),
                                    s._forceRed(this)
                                );
                            }),
                            (S.prototype.mul = function(t, e) {
                                if (t.isZero() || e.isZero())
                                    return new s(0)._forceRed(this);
                                var r = t.mul(e),
                                    n = r
                                        .maskn(this.shift)
                                        .mul(this.minv)
                                        .imaskn(this.shift)
                                        .mul(this.m),
                                    i = r.isub(n).iushrn(this.shift),
                                    o = i;
                                return (
                                    i.cmp(this.m) >= 0
                                        ? (o = i.isub(this.m))
                                        : i.cmpn(0) < 0 && (o = i.iadd(this.m)),
                                    o._forceRed(this)
                                );
                            }),
                            (S.prototype.invm = function(t) {
                                return this.imod(
                                    t._invmp(this.m).mul(this.r2)
                                )._forceRed(this);
                            });
                    })((t = r.nmd(t)), this);
                },
                643: (t, e, r) => {
                    var n;
                    !(function() {
                        'use strict';
                        var i = 'input is invalid type',
                            s = 'object' == typeof window,
                            o = s ? window : {};
                        o.JS_SHA3_NO_WINDOW && (s = !1);
                        var a = !s && 'object' == typeof self;
                        !o.JS_SHA3_NO_NODE_JS &&
                        'object' == typeof process &&
                        process.versions &&
                        process.versions.node
                            ? (o = r.g)
                            : a && (o = self);
                        var u = !o.JS_SHA3_NO_COMMON_JS && t.exports,
                            h = r.amdO,
                            l =
                                !o.JS_SHA3_NO_ARRAY_BUFFER &&
                                'undefined' != typeof ArrayBuffer,
                            c = '0123456789abcdef'.split(''),
                            f = [4, 1024, 262144, 67108864],
                            d = [0, 8, 16, 24],
                            p = [
                                1,
                                0,
                                32898,
                                0,
                                32906,
                                2147483648,
                                2147516416,
                                2147483648,
                                32907,
                                0,
                                2147483649,
                                0,
                                2147516545,
                                2147483648,
                                32777,
                                2147483648,
                                138,
                                0,
                                136,
                                0,
                                2147516425,
                                0,
                                2147483658,
                                0,
                                2147516555,
                                0,
                                139,
                                2147483648,
                                32905,
                                2147483648,
                                32771,
                                2147483648,
                                32770,
                                2147483648,
                                128,
                                2147483648,
                                32778,
                                0,
                                2147483658,
                                2147483648,
                                2147516545,
                                2147483648,
                                32896,
                                2147483648,
                                2147483649,
                                0,
                                2147516424,
                                2147483648,
                            ],
                            m = [224, 256, 384, 512],
                            g = [128, 256],
                            y = [
                                'hex',
                                'buffer',
                                'arrayBuffer',
                                'array',
                                'digest',
                            ],
                            v = { 128: 168, 256: 136 };
                        (!o.JS_SHA3_NO_NODE_JS && Array.isArray) ||
                            (Array.isArray = function(t) {
                                return (
                                    '[object Array]' ===
                                    Object.prototype.toString.call(t)
                                );
                            }),
                            !l ||
                                (!o.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW &&
                                    ArrayBuffer.isView) ||
                                (ArrayBuffer.isView = function(t) {
                                    return (
                                        'object' == typeof t &&
                                        t.buffer &&
                                        t.buffer.constructor === ArrayBuffer
                                    );
                                });
                        for (
                            var w = function(t, e, r) {
                                    return function(n) {
                                        return new B(t, e, t).update(n)[r]();
                                    };
                                },
                                b = function(t, e, r) {
                                    return function(n, i) {
                                        return new B(t, e, i).update(n)[r]();
                                    };
                                },
                                M = function(t, e, r) {
                                    return function(e, n, i, s) {
                                        return O['cshake' + t]
                                            .update(e, n, i, s)
                                            [r]();
                                    };
                                },
                                E = function(t, e, r) {
                                    return function(e, n, i, s) {
                                        return O['kmac' + t]
                                            .update(e, n, i, s)
                                            [r]();
                                    };
                                },
                                _ = function(t, e, r, n) {
                                    for (var i = 0; i < y.length; ++i) {
                                        var s = y[i];
                                        t[s] = e(r, n, s);
                                    }
                                    return t;
                                },
                                A = function(t, e) {
                                    var r = w(t, e, 'hex');
                                    return (
                                        (r.create = function() {
                                            return new B(t, e, t);
                                        }),
                                        (r.update = function(t) {
                                            return r.create().update(t);
                                        }),
                                        _(r, w, t, e)
                                    );
                                },
                                N = [
                                    {
                                        name: 'keccak',
                                        padding: [1, 256, 65536, 16777216],
                                        bits: m,
                                        createMethod: A,
                                    },
                                    {
                                        name: 'sha3',
                                        padding: [6, 1536, 393216, 100663296],
                                        bits: m,
                                        createMethod: A,
                                    },
                                    {
                                        name: 'shake',
                                        padding: [31, 7936, 2031616, 520093696],
                                        bits: g,
                                        createMethod: function(t, e) {
                                            var r = b(t, e, 'hex');
                                            return (
                                                (r.create = function(r) {
                                                    return new B(t, e, r);
                                                }),
                                                (r.update = function(t, e) {
                                                    return r
                                                        .create(e)
                                                        .update(t);
                                                }),
                                                _(r, b, t, e)
                                            );
                                        },
                                    },
                                    {
                                        name: 'cshake',
                                        padding: f,
                                        bits: g,
                                        createMethod: function(t, e) {
                                            var r = v[t],
                                                n = M(t, 0, 'hex');
                                            return (
                                                (n.create = function(n, i, s) {
                                                    return i || s
                                                        ? new B(
                                                              t,
                                                              e,
                                                              n
                                                          ).bytepad([i, s], r)
                                                        : O['shake' + t].create(
                                                              n
                                                          );
                                                }),
                                                (n.update = function(
                                                    t,
                                                    e,
                                                    r,
                                                    i
                                                ) {
                                                    return n
                                                        .create(e, r, i)
                                                        .update(t);
                                                }),
                                                _(n, M, t, e)
                                            );
                                        },
                                    },
                                    {
                                        name: 'kmac',
                                        padding: f,
                                        bits: g,
                                        createMethod: function(t, e) {
                                            var r = v[t],
                                                n = E(t, 0, 'hex');
                                            return (
                                                (n.create = function(n, i, s) {
                                                    return new C(t, e, i)
                                                        .bytepad(['KMAC', s], r)
                                                        .bytepad([n], r);
                                                }),
                                                (n.update = function(
                                                    t,
                                                    e,
                                                    r,
                                                    i
                                                ) {
                                                    return n
                                                        .create(t, r, i)
                                                        .update(e);
                                                }),
                                                _(n, E, t, e)
                                            );
                                        },
                                    },
                                ],
                                O = {},
                                S = [],
                                x = 0;
                            x < N.length;
                            ++x
                        )
                            for (
                                var P = N[x], T = P.bits, R = 0;
                                R < T.length;
                                ++R
                            ) {
                                var k = P.name + '_' + T[R];
                                if (
                                    (S.push(k),
                                    (O[k] = P.createMethod(T[R], P.padding)),
                                    'sha3' !== P.name)
                                ) {
                                    var I = P.name + T[R];
                                    S.push(I), (O[I] = O[k]);
                                }
                            }
                        function B(t, e, r) {
                            (this.blocks = []),
                                (this.s = []),
                                (this.padding = e),
                                (this.outputBits = r),
                                (this.reset = !0),
                                (this.finalized = !1),
                                (this.block = 0),
                                (this.start = 0),
                                (this.blockCount = (1600 - (t << 1)) >> 5),
                                (this.byteCount = this.blockCount << 2),
                                (this.outputBlocks = r >> 5),
                                (this.extraBytes = (31 & r) >> 3);
                            for (var n = 0; n < 50; ++n) this.s[n] = 0;
                        }
                        function C(t, e, r) {
                            B.call(this, t, e, r);
                        }
                        (B.prototype.update = function(t) {
                            if (this.finalized)
                                throw new Error('finalize already called');
                            var e,
                                r = typeof t;
                            if ('string' !== r) {
                                if ('object' !== r) throw new Error(i);
                                if (null === t) throw new Error(i);
                                if (l && t.constructor === ArrayBuffer)
                                    t = new Uint8Array(t);
                                else if (
                                    !(
                                        Array.isArray(t) ||
                                        (l && ArrayBuffer.isView(t))
                                    )
                                )
                                    throw new Error(i);
                                e = !0;
                            }
                            for (
                                var n,
                                    s,
                                    o = this.blocks,
                                    a = this.byteCount,
                                    u = t.length,
                                    h = this.blockCount,
                                    c = 0,
                                    f = this.s;
                                c < u;

                            ) {
                                if (this.reset)
                                    for (
                                        this.reset = !1,
                                            o[0] = this.block,
                                            n = 1;
                                        n < h + 1;
                                        ++n
                                    )
                                        o[n] = 0;
                                if (e)
                                    for (n = this.start; c < u && n < a; ++c)
                                        o[n >> 2] |= t[c] << d[3 & n++];
                                else
                                    for (n = this.start; c < u && n < a; ++c)
                                        (s = t.charCodeAt(c)) < 128
                                            ? (o[n >> 2] |= s << d[3 & n++])
                                            : s < 2048
                                            ? ((o[n >> 2] |=
                                                  (192 | (s >> 6)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | (63 & s)) <<
                                                  d[3 & n++]))
                                            : s < 55296 || s >= 57344
                                            ? ((o[n >> 2] |=
                                                  (224 | (s >> 12)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | ((s >> 6) & 63)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | (63 & s)) <<
                                                  d[3 & n++]))
                                            : ((s =
                                                  65536 +
                                                  (((1023 & s) << 10) |
                                                      (1023 &
                                                          t.charCodeAt(++c)))),
                                              (o[n >> 2] |=
                                                  (240 | (s >> 18)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | ((s >> 12) & 63)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | ((s >> 6) & 63)) <<
                                                  d[3 & n++]),
                                              (o[n >> 2] |=
                                                  (128 | (63 & s)) <<
                                                  d[3 & n++]));
                                if (((this.lastByteIndex = n), n >= a)) {
                                    for (
                                        this.start = n - a,
                                            this.block = o[h],
                                            n = 0;
                                        n < h;
                                        ++n
                                    )
                                        f[n] ^= o[n];
                                    L(f), (this.reset = !0);
                                } else this.start = n;
                            }
                            return this;
                        }),
                            (B.prototype.encode = function(t, e) {
                                var r = 255 & t,
                                    n = 1,
                                    i = [r];
                                for (r = 255 & (t >>= 8); r > 0; )
                                    i.unshift(r), (r = 255 & (t >>= 8)), ++n;
                                return (
                                    e ? i.push(n) : i.unshift(n),
                                    this.update(i),
                                    i.length
                                );
                            }),
                            (B.prototype.encodeString = function(t) {
                                var e,
                                    r = typeof t;
                                if ('string' !== r) {
                                    if ('object' !== r) throw new Error(i);
                                    if (null === t) throw new Error(i);
                                    if (l && t.constructor === ArrayBuffer)
                                        t = new Uint8Array(t);
                                    else if (
                                        !(
                                            Array.isArray(t) ||
                                            (l && ArrayBuffer.isView(t))
                                        )
                                    )
                                        throw new Error(i);
                                    e = !0;
                                }
                                var n = 0,
                                    s = t.length;
                                if (e) n = s;
                                else
                                    for (var o = 0; o < t.length; ++o) {
                                        var a = t.charCodeAt(o);
                                        a < 128
                                            ? (n += 1)
                                            : a < 2048
                                            ? (n += 2)
                                            : a < 55296 || a >= 57344
                                            ? (n += 3)
                                            : ((a =
                                                  65536 +
                                                  (((1023 & a) << 10) |
                                                      (1023 &
                                                          t.charCodeAt(++o)))),
                                              (n += 4));
                                    }
                                return (
                                    (n += this.encode(8 * n)), this.update(t), n
                                );
                            }),
                            (B.prototype.bytepad = function(t, e) {
                                for (
                                    var r = this.encode(e), n = 0;
                                    n < t.length;
                                    ++n
                                )
                                    r += this.encodeString(t[n]);
                                var i = e - (r % e),
                                    s = [];
                                return (s.length = i), this.update(s), this;
                            }),
                            (B.prototype.finalize = function() {
                                if (!this.finalized) {
                                    this.finalized = !0;
                                    var t = this.blocks,
                                        e = this.lastByteIndex,
                                        r = this.blockCount,
                                        n = this.s;
                                    if (
                                        ((t[e >> 2] |= this.padding[3 & e]),
                                        this.lastByteIndex === this.byteCount)
                                    )
                                        for (t[0] = t[r], e = 1; e < r + 1; ++e)
                                            t[e] = 0;
                                    for (
                                        t[r - 1] |= 2147483648, e = 0;
                                        e < r;
                                        ++e
                                    )
                                        n[e] ^= t[e];
                                    L(n);
                                }
                            }),
                            (B.prototype.toString = B.prototype.hex = function() {
                                this.finalize();
                                for (
                                    var t,
                                        e = this.blockCount,
                                        r = this.s,
                                        n = this.outputBlocks,
                                        i = this.extraBytes,
                                        s = 0,
                                        o = 0,
                                        a = '';
                                    o < n;

                                ) {
                                    for (s = 0; s < e && o < n; ++s, ++o)
                                        (t = r[s]),
                                            (a +=
                                                c[(t >> 4) & 15] +
                                                c[15 & t] +
                                                c[(t >> 12) & 15] +
                                                c[(t >> 8) & 15] +
                                                c[(t >> 20) & 15] +
                                                c[(t >> 16) & 15] +
                                                c[(t >> 28) & 15] +
                                                c[(t >> 24) & 15]);
                                    o % e == 0 && (L(r), (s = 0));
                                }
                                return (
                                    i &&
                                        ((t = r[s]),
                                        (a += c[(t >> 4) & 15] + c[15 & t]),
                                        i > 1 &&
                                            (a +=
                                                c[(t >> 12) & 15] +
                                                c[(t >> 8) & 15]),
                                        i > 2 &&
                                            (a +=
                                                c[(t >> 20) & 15] +
                                                c[(t >> 16) & 15])),
                                    a
                                );
                            }),
                            (B.prototype.arrayBuffer = function() {
                                this.finalize();
                                var t,
                                    e = this.blockCount,
                                    r = this.s,
                                    n = this.outputBlocks,
                                    i = this.extraBytes,
                                    s = 0,
                                    o = 0,
                                    a = this.outputBits >> 3;
                                t = i
                                    ? new ArrayBuffer((n + 1) << 2)
                                    : new ArrayBuffer(a);
                                for (var u = new Uint32Array(t); o < n; ) {
                                    for (s = 0; s < e && o < n; ++s, ++o)
                                        u[o] = r[s];
                                    o % e == 0 && L(r);
                                }
                                return (
                                    i && ((u[s] = r[s]), (t = t.slice(0, a))), t
                                );
                            }),
                            (B.prototype.buffer = B.prototype.arrayBuffer),
                            (B.prototype.digest = B.prototype.array = function() {
                                this.finalize();
                                for (
                                    var t,
                                        e,
                                        r = this.blockCount,
                                        n = this.s,
                                        i = this.outputBlocks,
                                        s = this.extraBytes,
                                        o = 0,
                                        a = 0,
                                        u = [];
                                    a < i;

                                ) {
                                    for (o = 0; o < r && a < i; ++o, ++a)
                                        (t = a << 2),
                                            (e = n[o]),
                                            (u[t] = 255 & e),
                                            (u[t + 1] = (e >> 8) & 255),
                                            (u[t + 2] = (e >> 16) & 255),
                                            (u[t + 3] = (e >> 24) & 255);
                                    a % r == 0 && L(n);
                                }
                                return (
                                    s &&
                                        ((t = a << 2),
                                        (e = n[o]),
                                        (u[t] = 255 & e),
                                        s > 1 && (u[t + 1] = (e >> 8) & 255),
                                        s > 2 && (u[t + 2] = (e >> 16) & 255)),
                                    u
                                );
                            }),
                            (C.prototype = new B()),
                            (C.prototype.finalize = function() {
                                return (
                                    this.encode(this.outputBits, !0),
                                    B.prototype.finalize.call(this)
                                );
                            });
                        var L = function(t) {
                            var e,
                                r,
                                n,
                                i,
                                s,
                                o,
                                a,
                                u,
                                h,
                                l,
                                c,
                                f,
                                d,
                                m,
                                g,
                                y,
                                v,
                                w,
                                b,
                                M,
                                E,
                                _,
                                A,
                                N,
                                O,
                                S,
                                x,
                                P,
                                T,
                                R,
                                k,
                                I,
                                B,
                                C,
                                L,
                                F,
                                U,
                                D,
                                j,
                                z,
                                G,
                                H,
                                $,
                                V,
                                q,
                                W,
                                Z,
                                J,
                                X,
                                K,
                                Y,
                                Q,
                                tt,
                                et,
                                rt,
                                nt,
                                it,
                                st,
                                ot,
                                at,
                                ut,
                                ht,
                                lt;
                            for (n = 0; n < 48; n += 2)
                                (i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40]),
                                    (s = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41]),
                                    (o = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42]),
                                    (a = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43]),
                                    (u = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44]),
                                    (h = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45]),
                                    (l = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46]),
                                    (c = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47]),
                                    (e =
                                        (f =
                                            t[8] ^
                                            t[18] ^
                                            t[28] ^
                                            t[38] ^
                                            t[48]) ^
                                        ((o << 1) | (a >>> 31))),
                                    (r =
                                        (d =
                                            t[9] ^
                                            t[19] ^
                                            t[29] ^
                                            t[39] ^
                                            t[49]) ^
                                        ((a << 1) | (o >>> 31))),
                                    (t[0] ^= e),
                                    (t[1] ^= r),
                                    (t[10] ^= e),
                                    (t[11] ^= r),
                                    (t[20] ^= e),
                                    (t[21] ^= r),
                                    (t[30] ^= e),
                                    (t[31] ^= r),
                                    (t[40] ^= e),
                                    (t[41] ^= r),
                                    (e = i ^ ((u << 1) | (h >>> 31))),
                                    (r = s ^ ((h << 1) | (u >>> 31))),
                                    (t[2] ^= e),
                                    (t[3] ^= r),
                                    (t[12] ^= e),
                                    (t[13] ^= r),
                                    (t[22] ^= e),
                                    (t[23] ^= r),
                                    (t[32] ^= e),
                                    (t[33] ^= r),
                                    (t[42] ^= e),
                                    (t[43] ^= r),
                                    (e = o ^ ((l << 1) | (c >>> 31))),
                                    (r = a ^ ((c << 1) | (l >>> 31))),
                                    (t[4] ^= e),
                                    (t[5] ^= r),
                                    (t[14] ^= e),
                                    (t[15] ^= r),
                                    (t[24] ^= e),
                                    (t[25] ^= r),
                                    (t[34] ^= e),
                                    (t[35] ^= r),
                                    (t[44] ^= e),
                                    (t[45] ^= r),
                                    (e = u ^ ((f << 1) | (d >>> 31))),
                                    (r = h ^ ((d << 1) | (f >>> 31))),
                                    (t[6] ^= e),
                                    (t[7] ^= r),
                                    (t[16] ^= e),
                                    (t[17] ^= r),
                                    (t[26] ^= e),
                                    (t[27] ^= r),
                                    (t[36] ^= e),
                                    (t[37] ^= r),
                                    (t[46] ^= e),
                                    (t[47] ^= r),
                                    (e = l ^ ((i << 1) | (s >>> 31))),
                                    (r = c ^ ((s << 1) | (i >>> 31))),
                                    (t[8] ^= e),
                                    (t[9] ^= r),
                                    (t[18] ^= e),
                                    (t[19] ^= r),
                                    (t[28] ^= e),
                                    (t[29] ^= r),
                                    (t[38] ^= e),
                                    (t[39] ^= r),
                                    (t[48] ^= e),
                                    (t[49] ^= r),
                                    (m = t[0]),
                                    (g = t[1]),
                                    (W = (t[11] << 4) | (t[10] >>> 28)),
                                    (Z = (t[10] << 4) | (t[11] >>> 28)),
                                    (P = (t[20] << 3) | (t[21] >>> 29)),
                                    (T = (t[21] << 3) | (t[20] >>> 29)),
                                    (at = (t[31] << 9) | (t[30] >>> 23)),
                                    (ut = (t[30] << 9) | (t[31] >>> 23)),
                                    (H = (t[40] << 18) | (t[41] >>> 14)),
                                    ($ = (t[41] << 18) | (t[40] >>> 14)),
                                    (C = (t[2] << 1) | (t[3] >>> 31)),
                                    (L = (t[3] << 1) | (t[2] >>> 31)),
                                    (y = (t[13] << 12) | (t[12] >>> 20)),
                                    (v = (t[12] << 12) | (t[13] >>> 20)),
                                    (J = (t[22] << 10) | (t[23] >>> 22)),
                                    (X = (t[23] << 10) | (t[22] >>> 22)),
                                    (R = (t[33] << 13) | (t[32] >>> 19)),
                                    (k = (t[32] << 13) | (t[33] >>> 19)),
                                    (ht = (t[42] << 2) | (t[43] >>> 30)),
                                    (lt = (t[43] << 2) | (t[42] >>> 30)),
                                    (et = (t[5] << 30) | (t[4] >>> 2)),
                                    (rt = (t[4] << 30) | (t[5] >>> 2)),
                                    (F = (t[14] << 6) | (t[15] >>> 26)),
                                    (U = (t[15] << 6) | (t[14] >>> 26)),
                                    (w = (t[25] << 11) | (t[24] >>> 21)),
                                    (b = (t[24] << 11) | (t[25] >>> 21)),
                                    (K = (t[34] << 15) | (t[35] >>> 17)),
                                    (Y = (t[35] << 15) | (t[34] >>> 17)),
                                    (I = (t[45] << 29) | (t[44] >>> 3)),
                                    (B = (t[44] << 29) | (t[45] >>> 3)),
                                    (N = (t[6] << 28) | (t[7] >>> 4)),
                                    (O = (t[7] << 28) | (t[6] >>> 4)),
                                    (nt = (t[17] << 23) | (t[16] >>> 9)),
                                    (it = (t[16] << 23) | (t[17] >>> 9)),
                                    (D = (t[26] << 25) | (t[27] >>> 7)),
                                    (j = (t[27] << 25) | (t[26] >>> 7)),
                                    (M = (t[36] << 21) | (t[37] >>> 11)),
                                    (E = (t[37] << 21) | (t[36] >>> 11)),
                                    (Q = (t[47] << 24) | (t[46] >>> 8)),
                                    (tt = (t[46] << 24) | (t[47] >>> 8)),
                                    (V = (t[8] << 27) | (t[9] >>> 5)),
                                    (q = (t[9] << 27) | (t[8] >>> 5)),
                                    (S = (t[18] << 20) | (t[19] >>> 12)),
                                    (x = (t[19] << 20) | (t[18] >>> 12)),
                                    (st = (t[29] << 7) | (t[28] >>> 25)),
                                    (ot = (t[28] << 7) | (t[29] >>> 25)),
                                    (z = (t[38] << 8) | (t[39] >>> 24)),
                                    (G = (t[39] << 8) | (t[38] >>> 24)),
                                    (_ = (t[48] << 14) | (t[49] >>> 18)),
                                    (A = (t[49] << 14) | (t[48] >>> 18)),
                                    (t[0] = m ^ (~y & w)),
                                    (t[1] = g ^ (~v & b)),
                                    (t[10] = N ^ (~S & P)),
                                    (t[11] = O ^ (~x & T)),
                                    (t[20] = C ^ (~F & D)),
                                    (t[21] = L ^ (~U & j)),
                                    (t[30] = V ^ (~W & J)),
                                    (t[31] = q ^ (~Z & X)),
                                    (t[40] = et ^ (~nt & st)),
                                    (t[41] = rt ^ (~it & ot)),
                                    (t[2] = y ^ (~w & M)),
                                    (t[3] = v ^ (~b & E)),
                                    (t[12] = S ^ (~P & R)),
                                    (t[13] = x ^ (~T & k)),
                                    (t[22] = F ^ (~D & z)),
                                    (t[23] = U ^ (~j & G)),
                                    (t[32] = W ^ (~J & K)),
                                    (t[33] = Z ^ (~X & Y)),
                                    (t[42] = nt ^ (~st & at)),
                                    (t[43] = it ^ (~ot & ut)),
                                    (t[4] = w ^ (~M & _)),
                                    (t[5] = b ^ (~E & A)),
                                    (t[14] = P ^ (~R & I)),
                                    (t[15] = T ^ (~k & B)),
                                    (t[24] = D ^ (~z & H)),
                                    (t[25] = j ^ (~G & $)),
                                    (t[34] = J ^ (~K & Q)),
                                    (t[35] = X ^ (~Y & tt)),
                                    (t[44] = st ^ (~at & ht)),
                                    (t[45] = ot ^ (~ut & lt)),
                                    (t[6] = M ^ (~_ & m)),
                                    (t[7] = E ^ (~A & g)),
                                    (t[16] = R ^ (~I & N)),
                                    (t[17] = k ^ (~B & O)),
                                    (t[26] = z ^ (~H & C)),
                                    (t[27] = G ^ (~$ & L)),
                                    (t[36] = K ^ (~Q & V)),
                                    (t[37] = Y ^ (~tt & q)),
                                    (t[46] = at ^ (~ht & et)),
                                    (t[47] = ut ^ (~lt & rt)),
                                    (t[8] = _ ^ (~m & y)),
                                    (t[9] = A ^ (~g & v)),
                                    (t[18] = I ^ (~N & S)),
                                    (t[19] = B ^ (~O & x)),
                                    (t[28] = H ^ (~C & F)),
                                    (t[29] = $ ^ (~L & U)),
                                    (t[38] = Q ^ (~V & W)),
                                    (t[39] = tt ^ (~q & Z)),
                                    (t[48] = ht ^ (~et & nt)),
                                    (t[49] = lt ^ (~rt & it)),
                                    (t[0] ^= p[n]),
                                    (t[1] ^= p[n + 1]);
                        };
                        if (u) t.exports = O;
                        else {
                            for (x = 0; x < S.length; ++x) o[S[x]] = O[S[x]];
                            h &&
                                (void 0 ===
                                    (n = function() {
                                        return O;
                                    }.call(e, r, e, t)) ||
                                    (t.exports = n));
                        }
                    })();
                },
                351: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            getAddress: () => v,
                            getContractAddress: () => M,
                            getCreate2Address: () => E,
                            getIcapAddress: () => b,
                            isAddress: () => w,
                        });
                    var n = r(404),
                        i = r(905),
                        s = r(181),
                        o = r(234),
                        a = r(720);
                    const u = new a.Logger('rlp/5.0.4');
                    function h(t) {
                        const e = [];
                        for (; t; ) e.unshift(255 & t), (t >>= 8);
                        return e;
                    }
                    function l(t) {
                        if (Array.isArray(t)) {
                            let e = [];
                            if (
                                (t.forEach(function(t) {
                                    e = e.concat(l(t));
                                }),
                                e.length <= 55)
                            )
                                return e.unshift(192 + e.length), e;
                            const r = h(e.length);
                            return r.unshift(247 + r.length), r.concat(e);
                        }
                        (0, i.isBytesLike)(t) ||
                            u.throwArgumentError(
                                'RLP object must be BytesLike',
                                'object',
                                t
                            );
                        const e = Array.prototype.slice.call(
                            (0, i.arrayify)(t)
                        );
                        if (1 === e.length && e[0] <= 127) return e;
                        if (e.length <= 55) return e.unshift(128 + e.length), e;
                        const r = h(e.length);
                        return r.unshift(183 + r.length), r.concat(e);
                    }
                    function c(t) {
                        return (0, i.hexlify)(l(t));
                    }
                    const f = new a.Logger('address/5.0.5');
                    function d(t) {
                        (0, i.isHexString)(t, 20) ||
                            f.throwArgumentError(
                                'invalid address',
                                'address',
                                t
                            );
                        const e = (t = t.toLowerCase()).substring(2).split(''),
                            r = new Uint8Array(40);
                        for (let t = 0; t < 40; t++) r[t] = e[t].charCodeAt(0);
                        const n = (0, i.arrayify)((0, o.S)(r));
                        for (let t = 0; t < 40; t += 2)
                            n[t >> 1] >> 4 >= 8 && (e[t] = e[t].toUpperCase()),
                                (15 & n[t >> 1]) >= 8 &&
                                    (e[t + 1] = e[t + 1].toUpperCase());
                        return '0x' + e.join('');
                    }
                    const p = {};
                    for (let t = 0; t < 10; t++) p[String(t)] = String(t);
                    for (let t = 0; t < 26; t++)
                        p[String.fromCharCode(65 + t)] = String(10 + t);
                    const m = Math.floor(
                        ((g = 9007199254740991),
                        Math.log10 ? Math.log10(g) : Math.log(g) / Math.LN10)
                    );
                    var g;
                    function y(t) {
                        let e = (t =
                            (t = t.toUpperCase()).substring(4) +
                            t.substring(0, 2) +
                            '00')
                            .split('')
                            .map(t => p[t])
                            .join('');
                        for (; e.length >= m; ) {
                            let t = e.substring(0, m);
                            e = (parseInt(t, 10) % 97) + e.substring(t.length);
                        }
                        let r = String(98 - (parseInt(e, 10) % 97));
                        for (; r.length < 2; ) r = '0' + r;
                        return r;
                    }
                    function v(t) {
                        let e = null;
                        if (
                            ('string' != typeof t &&
                                f.throwArgumentError(
                                    'invalid address',
                                    'address',
                                    t
                                ),
                            t.match(/^(0x)?[0-9a-fA-F]{40}$/))
                        )
                            '0x' !== t.substring(0, 2) && (t = '0x' + t),
                                (e = d(t)),
                                t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) &&
                                    e !== t &&
                                    f.throwArgumentError(
                                        'bad address checksum',
                                        'address',
                                        t
                                    );
                        else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                            for (
                                t.substring(2, 4) !== y(t) &&
                                    f.throwArgumentError(
                                        'bad icap checksum',
                                        'address',
                                        t
                                    ),
                                    e = new n.BN(t.substring(4), 36).toString(
                                        16
                                    );
                                e.length < 40;

                            )
                                e = '0' + e;
                            e = d('0x' + e);
                        } else
                            f.throwArgumentError(
                                'invalid address',
                                'address',
                                t
                            );
                        return e;
                    }
                    function w(t) {
                        try {
                            return v(t), !0;
                        } catch (t) {}
                        return !1;
                    }
                    function b(t) {
                        let e = new n.BN(v(t).substring(2), 16)
                            .toString(36)
                            .toUpperCase();
                        for (; e.length < 30; ) e = '0' + e;
                        return 'XE' + y('XE00' + e) + e;
                    }
                    function M(t) {
                        let e = null;
                        try {
                            e = v(t.from);
                        } catch (e) {
                            f.throwArgumentError(
                                'missing from address',
                                'transaction',
                                t
                            );
                        }
                        const r = (0, i.stripZeros)(
                            (0, i.arrayify)(s.gH.from(t.nonce).toHexString())
                        );
                        return v((0, i.hexDataSlice)((0, o.S)(c([e, r])), 12));
                    }
                    function E(t, e, r) {
                        return (
                            32 !== (0, i.hexDataLength)(e) &&
                                f.throwArgumentError(
                                    'salt must be 32 bytes',
                                    'salt',
                                    e
                                ),
                            32 !== (0, i.hexDataLength)(r) &&
                                f.throwArgumentError(
                                    'initCodeHash must be 32 bytes',
                                    'initCodeHash',
                                    r
                                ),
                            v(
                                (0, i.hexDataSlice)(
                                    (0, o.S)(
                                        (0, i.concat)(['0xff', v(t), e, r])
                                    ),
                                    12
                                )
                            )
                        );
                    }
                },
                181: (t, e, r) => {
                    'use strict';
                    r.d(e, { gH: () => l });
                    var n = r(404),
                        i = r(905),
                        s = r(720);
                    const o = 'bignumber/5.0.8',
                        a = new s.Logger(o),
                        u = {},
                        h = 9007199254740991;
                    class l {
                        constructor(t, e) {
                            a.checkNew(new.target, l),
                                t !== u &&
                                    a.throwError(
                                        'cannot call constructor directly; use BigNumber.from',
                                        s.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'new (BigNumber)' }
                                    ),
                                (this._hex = e),
                                (this._isBigNumber = !0),
                                Object.freeze(this);
                        }
                        fromTwos(t) {
                            return f(d(this).fromTwos(t));
                        }
                        toTwos(t) {
                            return f(d(this).toTwos(t));
                        }
                        abs() {
                            return '-' === this._hex[0]
                                ? l.from(this._hex.substring(1))
                                : this;
                        }
                        add(t) {
                            return f(d(this).add(d(t)));
                        }
                        sub(t) {
                            return f(d(this).sub(d(t)));
                        }
                        div(t) {
                            return (
                                l.from(t).isZero() &&
                                    p('division by zero', 'div'),
                                f(d(this).div(d(t)))
                            );
                        }
                        mul(t) {
                            return f(d(this).mul(d(t)));
                        }
                        mod(t) {
                            const e = d(t);
                            return (
                                e.isNeg() &&
                                    p('cannot modulo negative values', 'mod'),
                                f(d(this).umod(e))
                            );
                        }
                        pow(t) {
                            const e = d(t);
                            return (
                                e.isNeg() &&
                                    p('cannot raise to negative values', 'pow'),
                                f(d(this).pow(e))
                            );
                        }
                        and(t) {
                            const e = d(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    p("cannot 'and' negative values", 'and'),
                                f(d(this).and(e))
                            );
                        }
                        or(t) {
                            const e = d(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    p("cannot 'or' negative values", 'or'),
                                f(d(this).or(e))
                            );
                        }
                        xor(t) {
                            const e = d(t);
                            return (
                                (this.isNegative() || e.isNeg()) &&
                                    p("cannot 'xor' negative values", 'xor'),
                                f(d(this).xor(e))
                            );
                        }
                        mask(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    p('cannot mask negative values', 'mask'),
                                f(d(this).maskn(t))
                            );
                        }
                        shl(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    p('cannot shift negative values', 'shl'),
                                f(d(this).shln(t))
                            );
                        }
                        shr(t) {
                            return (
                                (this.isNegative() || t < 0) &&
                                    p('cannot shift negative values', 'shr'),
                                f(d(this).shrn(t))
                            );
                        }
                        eq(t) {
                            return d(this).eq(d(t));
                        }
                        lt(t) {
                            return d(this).lt(d(t));
                        }
                        lte(t) {
                            return d(this).lte(d(t));
                        }
                        gt(t) {
                            return d(this).gt(d(t));
                        }
                        gte(t) {
                            return d(this).gte(d(t));
                        }
                        isNegative() {
                            return '-' === this._hex[0];
                        }
                        isZero() {
                            return d(this).isZero();
                        }
                        toNumber() {
                            try {
                                return d(this).toNumber();
                            } catch (t) {
                                p('overflow', 'toNumber', this.toString());
                            }
                            return null;
                        }
                        toString() {
                            return (
                                0 !== arguments.length &&
                                    a.throwError(
                                        'bigNumber.toString does not accept parameters',
                                        s.Logger.errors.UNEXPECTED_ARGUMENT,
                                        {}
                                    ),
                                d(this).toString(10)
                            );
                        }
                        toHexString() {
                            return this._hex;
                        }
                        toJSON(t) {
                            return {
                                type: 'BigNumber',
                                hex: this.toHexString(),
                            };
                        }
                        static from(t) {
                            if (t instanceof l) return t;
                            if ('string' == typeof t)
                                return t.match(/^-?0x[0-9a-f]+$/i)
                                    ? new l(u, c(t))
                                    : t.match(/^-?[0-9]+$/)
                                    ? new l(u, c(new n.BN(t)))
                                    : a.throwArgumentError(
                                          'invalid BigNumber string',
                                          'value',
                                          t
                                      );
                            if ('number' == typeof t)
                                return (
                                    t % 1 &&
                                        p('underflow', 'BigNumber.from', t),
                                    (t >= h || t <= -h) &&
                                        p('overflow', 'BigNumber.from', t),
                                    l.from(String(t))
                                );
                            const e = t;
                            if ('bigint' == typeof e)
                                return l.from(e.toString());
                            if ((0, i.isBytes)(e))
                                return l.from((0, i.hexlify)(e));
                            if (e)
                                if (e.toHexString) {
                                    const t = e.toHexString();
                                    if ('string' == typeof t) return l.from(t);
                                } else {
                                    let t = e._hex;
                                    if (
                                        (null == t &&
                                            'BigNumber' === e.type &&
                                            (t = e.hex),
                                        'string' == typeof t &&
                                            ((0, i.isHexString)(t) ||
                                                ('-' === t[0] &&
                                                    (0, i.isHexString)(
                                                        t.substring(1)
                                                    ))))
                                    )
                                        return l.from(t);
                                }
                            return a.throwArgumentError(
                                'invalid BigNumber value',
                                'value',
                                t
                            );
                        }
                        static isBigNumber(t) {
                            return !(!t || !t._isBigNumber);
                        }
                    }
                    function c(t) {
                        if ('string' != typeof t) return c(t.toString(16));
                        if ('-' === t[0])
                            return (
                                '-' === (t = t.substring(1))[0] &&
                                    a.throwArgumentError(
                                        'invalid hex',
                                        'value',
                                        t
                                    ),
                                '0x00' === (t = c(t)) ? t : '-' + t
                            );
                        if (
                            ('0x' !== t.substring(0, 2) && (t = '0x' + t),
                            '0x' === t)
                        )
                            return '0x00';
                        for (
                            t.length % 2 && (t = '0x0' + t.substring(2));
                            t.length > 4 && '0x00' === t.substring(0, 4);

                        )
                            t = '0x' + t.substring(4);
                        return t;
                    }
                    function f(t) {
                        return l.from(c(t));
                    }
                    function d(t) {
                        const e = l.from(t).toHexString();
                        return '-' === e[0]
                            ? new n.BN('-' + e.substring(3), 16)
                            : new n.BN(e.substring(2), 16);
                    }
                    function p(t, e, r) {
                        const n = { fault: t, operation: e };
                        return (
                            null != r && (n.value = r),
                            a.throwError(t, s.Logger.errors.NUMERIC_FAULT, n)
                        );
                    }
                    const m = new s.Logger(o),
                        g = {},
                        y = l.from(0),
                        v = l.from(-1);
                    function w(t, e, r, n) {
                        const i = { fault: e, operation: r };
                        return (
                            void 0 !== n && (i.value = n),
                            m.throwError(t, s.Logger.errors.NUMERIC_FAULT, i)
                        );
                    }
                    let b = '0';
                    for (; b.length < 256; ) b += b;
                    function M(t) {
                        if ('number' != typeof t)
                            try {
                                t = l.from(t).toNumber();
                            } catch (t) {}
                        return 'number' == typeof t &&
                            t >= 0 &&
                            t <= 256 &&
                            !(t % 1)
                            ? '1' + b.substring(0, t)
                            : m.throwArgumentError(
                                  'invalid decimal size',
                                  'decimals',
                                  t
                              );
                    }
                    function E(t, e) {
                        null == e && (e = 0);
                        const r = M(e),
                            n = (t = l.from(t)).lt(y);
                        n && (t = t.mul(v));
                        let i = t.mod(r).toString();
                        for (; i.length < r.length - 1; ) i = '0' + i;
                        i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                        const s = t.div(r).toString();
                        return (t = s + '.' + i), n && (t = '-' + t), t;
                    }
                    function _(t, e) {
                        null == e && (e = 0);
                        const r = M(e);
                        if (
                            (('string' == typeof t &&
                                t.match(/^-?[0-9.,]+$/)) ||
                                m.throwArgumentError(
                                    'invalid decimal value',
                                    'value',
                                    t
                                ),
                            r.length - 1 == 0)
                        )
                            return l.from(t);
                        const n = '-' === t.substring(0, 1);
                        n && (t = t.substring(1)),
                            '.' === t &&
                                m.throwArgumentError(
                                    'missing value',
                                    'value',
                                    t
                                );
                        const i = t.split('.');
                        i.length > 2 &&
                            m.throwArgumentError(
                                'too many decimal points',
                                'value',
                                t
                            );
                        let s = i[0],
                            o = i[1];
                        for (
                            s || (s = '0'),
                                o || (o = '0'),
                                o.length > r.length - 1 &&
                                    w(
                                        'fractional component exceeds decimals',
                                        'underflow',
                                        'parseFixed'
                                    );
                            o.length < r.length - 1;

                        )
                            o += '0';
                        const a = l.from(s),
                            u = l.from(o);
                        let h = a.mul(r).add(u);
                        return n && (h = h.mul(v)), h;
                    }
                    class A {
                        constructor(t, e, r, n) {
                            t !== g &&
                                m.throwError(
                                    'cannot use FixedFormat constructor; use FixedFormat.from',
                                    s.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new FixedFormat' }
                                ),
                                (this.signed = e),
                                (this.width = r),
                                (this.decimals = n),
                                (this.name =
                                    (e ? '' : 'u') +
                                    'fixed' +
                                    String(r) +
                                    'x' +
                                    String(n)),
                                (this._multiplier = M(n)),
                                Object.freeze(this);
                        }
                        static from(t) {
                            if (t instanceof A) return t;
                            let e = !0,
                                r = 128,
                                n = 18;
                            if ('string' == typeof t) {
                                if ('fixed' === t);
                                else if ('ufixed' === t) e = !1;
                                else if (null != t) {
                                    const i = t.match(
                                        /^(u?)fixed([0-9]+)x([0-9]+)$/
                                    );
                                    i ||
                                        m.throwArgumentError(
                                            'invalid fixed format',
                                            'format',
                                            t
                                        ),
                                        (e = 'u' !== i[1]),
                                        (r = parseInt(i[2])),
                                        (n = parseInt(i[3]));
                                }
                            } else if (t) {
                                const i = (e, r, n) =>
                                    null == t[e]
                                        ? n
                                        : (typeof t[e] !== r &&
                                              m.throwArgumentError(
                                                  'invalid fixed format (' +
                                                      e +
                                                      ' not ' +
                                                      r +
                                                      ')',
                                                  'format.' + e,
                                                  t[e]
                                              ),
                                          t[e]);
                                (e = i('signed', 'boolean', e)),
                                    (r = i('width', 'number', r)),
                                    (n = i('decimals', 'number', n));
                            }
                            return (
                                r % 8 &&
                                    m.throwArgumentError(
                                        'invalid fixed format width (not byte aligned)',
                                        'format.width',
                                        r
                                    ),
                                n > 80 &&
                                    m.throwArgumentError(
                                        'invalid fixed format (decimals too large)',
                                        'format.decimals',
                                        n
                                    ),
                                new A(g, e, r, n)
                            );
                        }
                    }
                    class N {
                        constructor(t, e, r, n) {
                            m.checkNew(new.target, N),
                                t !== g &&
                                    m.throwError(
                                        'cannot use FixedNumber constructor; use FixedNumber.from',
                                        s.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'new FixedFormat' }
                                    ),
                                (this.format = n),
                                (this._hex = e),
                                (this._value = r),
                                (this._isFixedNumber = !0),
                                Object.freeze(this);
                        }
                        _checkFormat(t) {
                            this.format.name !== t.format.name &&
                                m.throwArgumentError(
                                    'incompatible format; use fixedNumber.toFormat',
                                    'other',
                                    t
                                );
                        }
                        addUnsafe(t) {
                            this._checkFormat(t);
                            const e = _(this._value, this.format.decimals),
                                r = _(t._value, t.format.decimals);
                            return N.fromValue(
                                e.add(r),
                                this.format.decimals,
                                this.format
                            );
                        }
                        subUnsafe(t) {
                            this._checkFormat(t);
                            const e = _(this._value, this.format.decimals),
                                r = _(t._value, t.format.decimals);
                            return N.fromValue(
                                e.sub(r),
                                this.format.decimals,
                                this.format
                            );
                        }
                        mulUnsafe(t) {
                            this._checkFormat(t);
                            const e = _(this._value, this.format.decimals),
                                r = _(t._value, t.format.decimals);
                            return N.fromValue(
                                e.mul(r).div(this.format._multiplier),
                                this.format.decimals,
                                this.format
                            );
                        }
                        divUnsafe(t) {
                            this._checkFormat(t);
                            const e = _(this._value, this.format.decimals),
                                r = _(t._value, t.format.decimals);
                            return N.fromValue(
                                e.mul(this.format._multiplier).div(r),
                                this.format.decimals,
                                this.format
                            );
                        }
                        floor() {
                            let t = this.toString().split('.'),
                                e = N.from(t[0], this.format);
                            const r = !t[1].match(/^(0*)$/);
                            return (
                                this.isNegative() && r && (e = e.subUnsafe(O)),
                                e
                            );
                        }
                        ceiling() {
                            let t = this.toString().split('.'),
                                e = N.from(t[0], this.format);
                            const r = !t[1].match(/^(0*)$/);
                            return (
                                !this.isNegative() && r && (e = e.addUnsafe(O)),
                                e
                            );
                        }
                        round(t) {
                            null == t && (t = 0);
                            let e = this.toString().split('.');
                            if (
                                ((t < 0 || t > 80 || t % 1) &&
                                    m.throwArgumentError(
                                        'invalid decimal count',
                                        'decimals',
                                        t
                                    ),
                                e[1].length <= t)
                            )
                                return this;
                            const r = N.from('1' + b.substring(0, t));
                            return this.mulUnsafe(r)
                                .addUnsafe(S)
                                .floor()
                                .divUnsafe(r);
                        }
                        isZero() {
                            return '0.0' === this._value;
                        }
                        isNegative() {
                            return '-' === this._value[0];
                        }
                        toString() {
                            return this._value;
                        }
                        toHexString(t) {
                            if (null == t) return this._hex;
                            t % 8 &&
                                m.throwArgumentError(
                                    'invalid byte width',
                                    'width',
                                    t
                                );
                            const e = l
                                .from(this._hex)
                                .fromTwos(this.format.width)
                                .toTwos(t)
                                .toHexString();
                            return (0, i.hexZeroPad)(e, t / 8);
                        }
                        toUnsafeFloat() {
                            return parseFloat(this.toString());
                        }
                        toFormat(t) {
                            return N.fromString(this._value, t);
                        }
                        static fromValue(t, e, r) {
                            return (
                                null != r ||
                                    null == e ||
                                    (function(t) {
                                        return (
                                            null != t &&
                                            (l.isBigNumber(t) ||
                                                ('number' == typeof t &&
                                                    t % 1 == 0) ||
                                                ('string' == typeof t &&
                                                    !!t.match(/^-?[0-9]+$/)) ||
                                                (0, i.isHexString)(t) ||
                                                'bigint' == typeof t ||
                                                (0, i.isBytes)(t))
                                        );
                                    })(e) ||
                                    ((r = e), (e = null)),
                                null == e && (e = 0),
                                null == r && (r = 'fixed'),
                                N.fromString(E(t, e), A.from(r))
                            );
                        }
                        static fromString(t, e) {
                            null == e && (e = 'fixed');
                            const r = A.from(e),
                                n = _(t, r.decimals);
                            !r.signed &&
                                n.lt(y) &&
                                w(
                                    'unsigned value cannot be negative',
                                    'overflow',
                                    'value',
                                    t
                                );
                            let s = null;
                            r.signed
                                ? (s = n.toTwos(r.width).toHexString())
                                : ((s = n.toHexString()),
                                  (s = (0, i.hexZeroPad)(s, r.width / 8)));
                            const o = E(n, r.decimals);
                            return new N(g, s, o, r);
                        }
                        static fromBytes(t, e) {
                            null == e && (e = 'fixed');
                            const r = A.from(e);
                            if ((0, i.arrayify)(t).length > r.width / 8)
                                throw new Error('overflow');
                            let n = l.from(t);
                            r.signed && (n = n.fromTwos(r.width));
                            const s = n
                                    .toTwos((r.signed ? 0 : 1) + r.width)
                                    .toHexString(),
                                o = E(n, r.decimals);
                            return new N(g, s, o, r);
                        }
                        static from(t, e) {
                            if ('string' == typeof t) return N.fromString(t, e);
                            if ((0, i.isBytes)(t)) return N.fromBytes(t, e);
                            try {
                                return N.fromValue(t, 0, e);
                            } catch (t) {
                                if (t.code !== s.Logger.errors.INVALID_ARGUMENT)
                                    throw t;
                            }
                            return m.throwArgumentError(
                                'invalid FixedNumber value',
                                'value',
                                t
                            );
                        }
                        static isFixedNumber(t) {
                            return !(!t || !t._isFixedNumber);
                        }
                    }
                    const O = N.from(1),
                        S = N.from('0.5');
                },
                905: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            arrayify: () => u,
                            concat: () => h,
                            hexConcat: () => y,
                            hexDataLength: () => m,
                            hexDataSlice: () => g,
                            hexStripZeros: () => w,
                            hexValue: () => v,
                            hexZeroPad: () => b,
                            hexlify: () => p,
                            isBytes: () => a,
                            isBytesLike: () => o,
                            isHexString: () => f,
                            joinSignature: () => E,
                            splitSignature: () => M,
                            stripZeros: () => l,
                            zeroPad: () => c,
                        });
                    const n = new (r(720).Logger)('bytes/5.0.5');
                    function i(t) {
                        return !!t.toHexString;
                    }
                    function s(t) {
                        return (
                            t.slice ||
                                (t.slice = function() {
                                    const e = Array.prototype.slice.call(
                                        arguments
                                    );
                                    return s(
                                        new Uint8Array(
                                            Array.prototype.slice.apply(t, e)
                                        )
                                    );
                                }),
                            t
                        );
                    }
                    function o(t) {
                        return (f(t) && !(t.length % 2)) || a(t);
                    }
                    function a(t) {
                        if (null == t) return !1;
                        if (t.constructor === Uint8Array) return !0;
                        if ('string' == typeof t) return !1;
                        if (null == t.length) return !1;
                        for (let e = 0; e < t.length; e++) {
                            const r = t[e];
                            if (r < 0 || r >= 256 || r % 1) return !1;
                        }
                        return !0;
                    }
                    function u(t, e) {
                        if ((e || (e = {}), 'number' == typeof t)) {
                            n.checkSafeUint53(t, 'invalid arrayify value');
                            const e = [];
                            for (; t; )
                                e.unshift(255 & t),
                                    (t = parseInt(String(t / 256)));
                            return (
                                0 === e.length && e.push(0),
                                s(new Uint8Array(e))
                            );
                        }
                        if (
                            (e.allowMissingPrefix &&
                                'string' == typeof t &&
                                '0x' !== t.substring(0, 2) &&
                                (t = '0x' + t),
                            i(t) && (t = t.toHexString()),
                            f(t))
                        ) {
                            let r = t.substring(2);
                            r.length % 2 &&
                                ('left' === e.hexPad
                                    ? (r = '0x0' + r.substring(2))
                                    : 'right' === e.hexPad
                                    ? (r += '0')
                                    : n.throwArgumentError(
                                          'hex data is odd-length',
                                          'value',
                                          t
                                      ));
                            const i = [];
                            for (let t = 0; t < r.length; t += 2)
                                i.push(parseInt(r.substring(t, t + 2), 16));
                            return s(new Uint8Array(i));
                        }
                        return a(t)
                            ? s(new Uint8Array(t))
                            : n.throwArgumentError(
                                  'invalid arrayify value',
                                  'value',
                                  t
                              );
                    }
                    function h(t) {
                        const e = t.map(t => u(t)),
                            r = e.reduce((t, e) => t + e.length, 0),
                            n = new Uint8Array(r);
                        return (
                            e.reduce((t, e) => (n.set(e, t), t + e.length), 0),
                            s(n)
                        );
                    }
                    function l(t) {
                        let e = u(t);
                        if (0 === e.length) return e;
                        let r = 0;
                        for (; r < e.length && 0 === e[r]; ) r++;
                        return r && (e = e.slice(r)), e;
                    }
                    function c(t, e) {
                        (t = u(t)).length > e &&
                            n.throwArgumentError(
                                'value out of range',
                                'value',
                                arguments[0]
                            );
                        const r = new Uint8Array(e);
                        return r.set(t, e - t.length), s(r);
                    }
                    function f(t, e) {
                        return !(
                            'string' != typeof t ||
                            !t.match(/^0x[0-9A-Fa-f]*$/) ||
                            (e && t.length !== 2 + 2 * e)
                        );
                    }
                    const d = '0123456789abcdef';
                    function p(t, e) {
                        if ((e || (e = {}), 'number' == typeof t)) {
                            n.checkSafeUint53(t, 'invalid hexlify value');
                            let e = '';
                            for (; t; )
                                (e = d[15 & t] + e), (t = Math.floor(t / 16));
                            return e.length
                                ? (e.length % 2 && (e = '0' + e), '0x' + e)
                                : '0x00';
                        }
                        if (
                            (e.allowMissingPrefix &&
                                'string' == typeof t &&
                                '0x' !== t.substring(0, 2) &&
                                (t = '0x' + t),
                            i(t))
                        )
                            return t.toHexString();
                        if (f(t))
                            return (
                                t.length % 2 &&
                                    ('left' === e.hexPad
                                        ? (t = '0x0' + t.substring(2))
                                        : 'right' === e.hexPad
                                        ? (t += '0')
                                        : n.throwArgumentError(
                                              'hex data is odd-length',
                                              'value',
                                              t
                                          )),
                                t.toLowerCase()
                            );
                        if (a(t)) {
                            let e = '0x';
                            for (let r = 0; r < t.length; r++) {
                                let n = t[r];
                                e += d[(240 & n) >> 4] + d[15 & n];
                            }
                            return e;
                        }
                        return n.throwArgumentError(
                            'invalid hexlify value',
                            'value',
                            t
                        );
                    }
                    function m(t) {
                        if ('string' != typeof t) t = p(t);
                        else if (!f(t) || t.length % 2) return null;
                        return (t.length - 2) / 2;
                    }
                    function g(t, e, r) {
                        return (
                            'string' != typeof t
                                ? (t = p(t))
                                : (!f(t) || t.length % 2) &&
                                  n.throwArgumentError(
                                      'invalid hexData',
                                      'value',
                                      t
                                  ),
                            (e = 2 + 2 * e),
                            null != r
                                ? '0x' + t.substring(e, 2 + 2 * r)
                                : '0x' + t.substring(e)
                        );
                    }
                    function y(t) {
                        let e = '0x';
                        return (
                            t.forEach(t => {
                                e += p(t).substring(2);
                            }),
                            e
                        );
                    }
                    function v(t) {
                        const e = w(p(t, { hexPad: 'left' }));
                        return '0x' === e ? '0x0' : e;
                    }
                    function w(t) {
                        'string' != typeof t && (t = p(t)),
                            f(t) ||
                                n.throwArgumentError(
                                    'invalid hex string',
                                    'value',
                                    t
                                ),
                            (t = t.substring(2));
                        let e = 0;
                        for (; e < t.length && '0' === t[e]; ) e++;
                        return '0x' + t.substring(e);
                    }
                    function b(t, e) {
                        for (
                            'string' != typeof t
                                ? (t = p(t))
                                : f(t) ||
                                  n.throwArgumentError(
                                      'invalid hex string',
                                      'value',
                                      t
                                  ),
                                t.length > 2 * e + 2 &&
                                    n.throwArgumentError(
                                        'value out of range',
                                        'value',
                                        arguments[1]
                                    );
                            t.length < 2 * e + 2;

                        )
                            t = '0x0' + t.substring(2);
                        return t;
                    }
                    function M(t) {
                        const e = {
                            r: '0x',
                            s: '0x',
                            _vs: '0x',
                            recoveryParam: 0,
                            v: 0,
                        };
                        if (o(t)) {
                            const r = u(t);
                            65 !== r.length &&
                                n.throwArgumentError(
                                    'invalid signature string; must be 65 bytes',
                                    'signature',
                                    t
                                ),
                                (e.r = p(r.slice(0, 32))),
                                (e.s = p(r.slice(32, 64))),
                                (e.v = r[64]),
                                e.v < 27 &&
                                    (0 === e.v || 1 === e.v
                                        ? (e.v += 27)
                                        : n.throwArgumentError(
                                              'signature invalid v byte',
                                              'signature',
                                              t
                                          )),
                                (e.recoveryParam = 1 - (e.v % 2)),
                                e.recoveryParam && (r[32] |= 128),
                                (e._vs = p(r.slice(32, 64)));
                        } else {
                            if (
                                ((e.r = t.r),
                                (e.s = t.s),
                                (e.v = t.v),
                                (e.recoveryParam = t.recoveryParam),
                                (e._vs = t._vs),
                                null != e._vs)
                            ) {
                                const r = c(u(e._vs), 32);
                                e._vs = p(r);
                                const i = r[0] >= 128 ? 1 : 0;
                                null == e.recoveryParam
                                    ? (e.recoveryParam = i)
                                    : e.recoveryParam !== i &&
                                      n.throwArgumentError(
                                          'signature recoveryParam mismatch _vs',
                                          'signature',
                                          t
                                      ),
                                    (r[0] &= 127);
                                const s = p(r);
                                null == e.s
                                    ? (e.s = s)
                                    : e.s !== s &&
                                      n.throwArgumentError(
                                          'signature v mismatch _vs',
                                          'signature',
                                          t
                                      );
                            }
                            null == e.recoveryParam
                                ? null == e.v
                                    ? n.throwArgumentError(
                                          'signature missing v and recoveryParam',
                                          'signature',
                                          t
                                      )
                                    : (e.recoveryParam = 1 - (e.v % 2))
                                : null == e.v
                                ? (e.v = 27 + e.recoveryParam)
                                : e.recoveryParam !== 1 - (e.v % 2) &&
                                  n.throwArgumentError(
                                      'signature recoveryParam mismatch v',
                                      'signature',
                                      t
                                  ),
                                null != e.r && f(e.r)
                                    ? (e.r = b(e.r, 32))
                                    : n.throwArgumentError(
                                          'signature missing or invalid r',
                                          'signature',
                                          t
                                      ),
                                null != e.s && f(e.s)
                                    ? (e.s = b(e.s, 32))
                                    : n.throwArgumentError(
                                          'signature missing or invalid s',
                                          'signature',
                                          t
                                      );
                            const r = u(e.s);
                            r[0] >= 128 &&
                                n.throwArgumentError(
                                    'signature s out of range',
                                    'signature',
                                    t
                                ),
                                e.recoveryParam && (r[0] |= 128);
                            const i = p(r);
                            e._vs &&
                                (f(e._vs) ||
                                    n.throwArgumentError(
                                        'signature invalid _vs',
                                        'signature',
                                        t
                                    ),
                                (e._vs = b(e._vs, 32))),
                                null == e._vs
                                    ? (e._vs = i)
                                    : e._vs !== i &&
                                      n.throwArgumentError(
                                          'signature _vs mismatch v and s',
                                          'signature',
                                          t
                                      );
                        }
                        return e;
                    }
                    function E(t) {
                        return p(
                            h([
                                (t = M(t)).r,
                                t.s,
                                t.recoveryParam ? '0x1c' : '0x1b',
                            ])
                        );
                    }
                },
                60: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            AddressZero: () => i,
                            EtherSymbol: () => o,
                            HashZero: () => s,
                            MaxUint256: () => f,
                            NegativeOne: () => a,
                            One: () => h,
                            Two: () => l,
                            WeiPerEther: () => c,
                            Zero: () => u,
                        });
                    var n = r(181);
                    const i = '0x0000000000000000000000000000000000000000',
                        s =
                            '0x0000000000000000000000000000000000000000000000000000000000000000',
                        o = 'Ξ',
                        a = n.gH.from(-1),
                        u = n.gH.from(0),
                        h = n.gH.from(1),
                        l = n.gH.from(2),
                        c = n.gH.from('1000000000000000000'),
                        f = n.gH.from(
                            '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
                        );
                },
                616: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            Contract: () => jt,
                            ContractFactory: () => zt,
                        });
                    var n = r(181),
                        i = r(720),
                        s = function(t, e, r, n) {
                            return new (r || (r = Promise))(function(i, s) {
                                function o(t) {
                                    try {
                                        u(n.next(t));
                                    } catch (t) {
                                        s(t);
                                    }
                                }
                                function a(t) {
                                    try {
                                        u(n.throw(t));
                                    } catch (t) {
                                        s(t);
                                    }
                                }
                                function u(t) {
                                    var e;
                                    t.done
                                        ? i(t.value)
                                        : ((e = t.value),
                                          e instanceof r
                                              ? e
                                              : new r(function(t) {
                                                    t(e);
                                                })).then(o, a);
                                }
                                u((n = n.apply(t, e || [])).next());
                            });
                        };
                    const o = new i.Logger('properties/5.0.4');
                    function a(t, e, r) {
                        Object.defineProperty(t, e, {
                            enumerable: !0,
                            value: r,
                            writable: !1,
                        });
                    }
                    function u(t, e) {
                        for (let r = 0; r < 32; r++) {
                            if (t[e]) return t[e];
                            if (!t.prototype || 'object' != typeof t.prototype)
                                break;
                            t = Object.getPrototypeOf(t.prototype).constructor;
                        }
                        return null;
                    }
                    function h(t) {
                        return s(this, void 0, void 0, function*() {
                            const e = Object.keys(t).map(e => {
                                const r = t[e];
                                return Promise.resolve(r).then(t => ({
                                    key: e,
                                    value: t,
                                }));
                            });
                            return (yield Promise.all(e)).reduce(
                                (t, e) => ((t[e.key] = e.value), t),
                                {}
                            );
                        });
                    }
                    function l(t) {
                        const e = {};
                        for (const r in t) e[r] = t[r];
                        return e;
                    }
                    const c = {
                        bigint: !0,
                        boolean: !0,
                        function: !0,
                        number: !0,
                        string: !0,
                    };
                    function f(t) {
                        if (null == t || c[typeof t]) return !0;
                        if (Array.isArray(t) || 'object' == typeof t) {
                            if (!Object.isFrozen(t)) return !1;
                            const e = Object.keys(t);
                            for (let r = 0; r < e.length; r++)
                                if (!f(t[e[r]])) return !1;
                            return !0;
                        }
                        return o.throwArgumentError(
                            'Cannot deepCopy ' + typeof t,
                            'object',
                            t
                        );
                    }
                    function d(t) {
                        if (f(t)) return t;
                        if (Array.isArray(t))
                            return Object.freeze(t.map(t => p(t)));
                        if ('object' == typeof t) {
                            const e = {};
                            for (const r in t) {
                                const n = t[r];
                                void 0 !== n && a(e, r, p(n));
                            }
                            return e;
                        }
                        return o.throwArgumentError(
                            'Cannot deepCopy ' + typeof t,
                            'object',
                            t
                        );
                    }
                    function p(t) {
                        return d(t);
                    }
                    class m {
                        constructor(t) {
                            for (const e in t) this[e] = p(t[e]);
                        }
                    }
                    const g = 'abi/5.0.7',
                        y = new i.Logger(g),
                        v = {};
                    let w = { calldata: !0, memory: !0, storage: !0 },
                        b = { calldata: !0, memory: !0 };
                    function M(t, e) {
                        if ('bytes' === t || 'string' === t) {
                            if (w[e]) return !0;
                        } else if ('address' === t) {
                            if ('payable' === e) return !0;
                        } else if (
                            (t.indexOf('[') >= 0 || 'tuple' === t) &&
                            b[e]
                        )
                            return !0;
                        return (
                            (w[e] || 'payable' === e) &&
                                y.throwArgumentError(
                                    'invalid modifier',
                                    'name',
                                    e
                                ),
                            !1
                        );
                    }
                    function E(t, e) {
                        for (let r in e) a(t, r, e[r]);
                    }
                    const _ = Object.freeze({
                            sighash: 'sighash',
                            minimal: 'minimal',
                            full: 'full',
                            json: 'json',
                        }),
                        A = new RegExp(/^(.*)\[([0-9]*)\]$/);
                    class N {
                        constructor(t, e) {
                            t !== v &&
                                y.throwError(
                                    'use fromString',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new ParamType()' }
                                ),
                                E(this, e);
                            let r = this.type.match(A);
                            E(
                                this,
                                r
                                    ? {
                                          arrayLength: parseInt(r[2] || '-1'),
                                          arrayChildren: N.fromObject({
                                              type: r[1],
                                              components: this.components,
                                          }),
                                          baseType: 'array',
                                      }
                                    : {
                                          arrayLength: null,
                                          arrayChildren: null,
                                          baseType:
                                              null != this.components
                                                  ? 'tuple'
                                                  : this.type,
                                      }
                            ),
                                (this._isParamType = !0),
                                Object.freeze(this);
                        }
                        format(t) {
                            if (
                                (t || (t = _.sighash),
                                _[t] ||
                                    y.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === _.json)
                            ) {
                                let e = {
                                    type:
                                        'tuple' === this.baseType
                                            ? 'tuple'
                                            : this.type,
                                    name: this.name || void 0,
                                };
                                return (
                                    'boolean' == typeof this.indexed &&
                                        (e.indexed = this.indexed),
                                    this.components &&
                                        (e.components = this.components.map(e =>
                                            JSON.parse(e.format(t))
                                        )),
                                    JSON.stringify(e)
                                );
                            }
                            let e = '';
                            return (
                                'array' === this.baseType
                                    ? ((e += this.arrayChildren.format(t)),
                                      (e +=
                                          '[' +
                                          (this.arrayLength < 0
                                              ? ''
                                              : String(this.arrayLength)) +
                                          ']'))
                                    : 'tuple' === this.baseType
                                    ? (t !== _.sighash && (e += this.type),
                                      (e +=
                                          '(' +
                                          this.components
                                              .map(e => e.format(t))
                                              .join(t === _.full ? ', ' : ',') +
                                          ')'))
                                    : (e += this.type),
                                t !== _.sighash &&
                                    (!0 === this.indexed && (e += ' indexed'),
                                    t === _.full &&
                                        this.name &&
                                        (e += ' ' + this.name)),
                                e
                            );
                        }
                        static from(t, e) {
                            return 'string' == typeof t
                                ? N.fromString(t, e)
                                : N.fromObject(t);
                        }
                        static fromObject(t) {
                            return N.isParamType(t)
                                ? t
                                : new N(v, {
                                      name: t.name || null,
                                      type: B(t.type),
                                      indexed:
                                          null == t.indexed
                                              ? null
                                              : !!t.indexed,
                                      components: t.components
                                          ? t.components.map(N.fromObject)
                                          : null,
                                  });
                        }
                        static fromString(t, e) {
                            return (
                                (r = (function(t, e) {
                                    let r = t;
                                    function n(e) {
                                        y.throwArgumentError(
                                            `unexpected character at position ${e}`,
                                            'param',
                                            t
                                        );
                                    }
                                    function i(t) {
                                        let r = {
                                            type: '',
                                            name: '',
                                            parent: t,
                                            state: { allowType: !0 },
                                        };
                                        return e && (r.indexed = !1), r;
                                    }
                                    t = t.replace(/\s/g, ' ');
                                    let s = {
                                            type: '',
                                            name: '',
                                            state: { allowType: !0 },
                                        },
                                        o = s;
                                    for (let r = 0; r < t.length; r++) {
                                        let s = t[r];
                                        switch (s) {
                                            case '(':
                                                o.state.allowType &&
                                                '' === o.type
                                                    ? (o.type = 'tuple')
                                                    : o.state.allowParams ||
                                                      n(r),
                                                    (o.state.allowType = !1),
                                                    (o.type = B(o.type)),
                                                    (o.components = [i(o)]),
                                                    (o = o.components[0]);
                                                break;
                                            case ')':
                                                delete o.state,
                                                    'indexed' === o.name &&
                                                        (e || n(r),
                                                        (o.indexed = !0),
                                                        (o.name = '')),
                                                    M(o.type, o.name) &&
                                                        (o.name = ''),
                                                    (o.type = B(o.type));
                                                let t = o;
                                                (o = o.parent),
                                                    o || n(r),
                                                    delete t.parent,
                                                    (o.state.allowParams = !1),
                                                    (o.state.allowName = !0),
                                                    (o.state.allowArray = !0);
                                                break;
                                            case ',':
                                                delete o.state,
                                                    'indexed' === o.name &&
                                                        (e || n(r),
                                                        (o.indexed = !0),
                                                        (o.name = '')),
                                                    M(o.type, o.name) &&
                                                        (o.name = ''),
                                                    (o.type = B(o.type));
                                                let a = i(o.parent);
                                                o.parent.components.push(a),
                                                    delete o.parent,
                                                    (o = a);
                                                break;
                                            case ' ':
                                                o.state.allowType &&
                                                    '' !== o.type &&
                                                    ((o.type = B(o.type)),
                                                    delete o.state.allowType,
                                                    (o.state.allowName = !0),
                                                    (o.state.allowParams = !0)),
                                                    o.state.allowName &&
                                                        '' !== o.name &&
                                                        ('indexed' === o.name
                                                            ? (e || n(r),
                                                              o.indexed && n(r),
                                                              (o.indexed = !0),
                                                              (o.name = ''))
                                                            : M(o.type, o.name)
                                                            ? (o.name = '')
                                                            : (o.state.allowName = !1));
                                                break;
                                            case '[':
                                                o.state.allowArray || n(r),
                                                    (o.type += s),
                                                    (o.state.allowArray = !1),
                                                    (o.state.allowName = !1),
                                                    (o.state.readArray = !0);
                                                break;
                                            case ']':
                                                o.state.readArray || n(r),
                                                    (o.type += s),
                                                    (o.state.readArray = !1),
                                                    (o.state.allowArray = !0),
                                                    (o.state.allowName = !0);
                                                break;
                                            default:
                                                o.state.allowType
                                                    ? ((o.type += s),
                                                      (o.state.allowParams = !0),
                                                      (o.state.allowArray = !0))
                                                    : o.state.allowName
                                                    ? ((o.name += s),
                                                      delete o.state.allowArray)
                                                    : o.state.readArray
                                                    ? (o.type += s)
                                                    : n(r);
                                        }
                                    }
                                    return (
                                        o.parent &&
                                            y.throwArgumentError(
                                                'unexpected eof',
                                                'param',
                                                t
                                            ),
                                        delete s.state,
                                        'indexed' === o.name
                                            ? (e || n(r.length - 7),
                                              o.indexed && n(r.length - 7),
                                              (o.indexed = !0),
                                              (o.name = ''))
                                            : M(o.type, o.name) &&
                                              (o.name = ''),
                                        (s.type = B(s.type)),
                                        s
                                    );
                                })(t, !!e)),
                                N.fromObject({
                                    name: r.name,
                                    type: r.type,
                                    indexed: r.indexed,
                                    components: r.components,
                                })
                            );
                            var r;
                        }
                        static isParamType(t) {
                            return !(null == t || !t._isParamType);
                        }
                    }
                    function O(t, e) {
                        return (function(t) {
                            t = t.trim();
                            let e = [],
                                r = '',
                                n = 0;
                            for (let i = 0; i < t.length; i++) {
                                let s = t[i];
                                ',' === s && 0 === n
                                    ? (e.push(r), (r = ''))
                                    : ((r += s),
                                      '(' === s
                                          ? n++
                                          : ')' === s &&
                                            (n--,
                                            -1 === n &&
                                                y.throwArgumentError(
                                                    'unbalanced parenthesis',
                                                    'value',
                                                    t
                                                )));
                            }
                            return r && e.push(r), e;
                        })(t).map(t => N.fromString(t, e));
                    }
                    class S {
                        constructor(t, e) {
                            t !== v &&
                                y.throwError(
                                    'use a static from method',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'new Fragment()' }
                                ),
                                E(this, e),
                                (this._isFragment = !0),
                                Object.freeze(this);
                        }
                        static from(t) {
                            return S.isFragment(t)
                                ? t
                                : 'string' == typeof t
                                ? S.fromString(t)
                                : S.fromObject(t);
                        }
                        static fromObject(t) {
                            if (S.isFragment(t)) return t;
                            switch (t.type) {
                                case 'function':
                                    return I.fromObject(t);
                                case 'event':
                                    return x.fromObject(t);
                                case 'constructor':
                                    return k.fromObject(t);
                                case 'fallback':
                                case 'receive':
                                    return null;
                            }
                            return y.throwArgumentError(
                                'invalid fragment object',
                                'value',
                                t
                            );
                        }
                        static fromString(t) {
                            return 'event' ===
                                (t = (t = (t = t.replace(/\s/g, ' '))
                                    .replace(/\(/g, ' (')
                                    .replace(/\)/g, ') ')
                                    .replace(/\s+/g, ' ')).trim()).split(' ')[0]
                                ? x.fromString(t.substring(5).trim())
                                : 'function' === t.split(' ')[0]
                                ? I.fromString(t.substring(8).trim())
                                : 'constructor' === t.split('(')[0].trim()
                                ? k.fromString(t.trim())
                                : y.throwArgumentError(
                                      'unsupported fragment',
                                      'value',
                                      t
                                  );
                        }
                        static isFragment(t) {
                            return !(!t || !t._isFragment);
                        }
                    }
                    class x extends S {
                        format(t) {
                            if (
                                (t || (t = _.sighash),
                                _[t] ||
                                    y.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === _.json)
                            )
                                return JSON.stringify({
                                    type: 'event',
                                    anonymous: this.anonymous,
                                    name: this.name,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            let e = '';
                            return (
                                t !== _.sighash && (e += 'event '),
                                (e +=
                                    this.name +
                                    '(' +
                                    this.inputs
                                        .map(e => e.format(t))
                                        .join(t === _.full ? ', ' : ',') +
                                    ') '),
                                t !== _.sighash &&
                                    this.anonymous &&
                                    (e += 'anonymous '),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? x.fromString(t)
                                : x.fromObject(t);
                        }
                        static fromObject(t) {
                            if (x.isEventFragment(t)) return t;
                            'event' !== t.type &&
                                y.throwArgumentError(
                                    'invalid event object',
                                    'value',
                                    t
                                );
                            const e = {
                                name: L(t.name),
                                anonymous: t.anonymous,
                                inputs: t.inputs
                                    ? t.inputs.map(N.fromObject)
                                    : [],
                                type: 'event',
                            };
                            return new x(v, e);
                        }
                        static fromString(t) {
                            let e = t.match(F);
                            e ||
                                y.throwArgumentError(
                                    'invalid event string',
                                    'value',
                                    t
                                );
                            let r = !1;
                            return (
                                e[3].split(' ').forEach(t => {
                                    switch (t.trim()) {
                                        case 'anonymous':
                                            r = !0;
                                            break;
                                        case '':
                                            break;
                                        default:
                                            y.warn('unknown modifier: ' + t);
                                    }
                                }),
                                x.fromObject({
                                    name: e[1].trim(),
                                    anonymous: r,
                                    inputs: O(e[2], !0),
                                    type: 'event',
                                })
                            );
                        }
                        static isEventFragment(t) {
                            return t && t._isFragment && 'event' === t.type;
                        }
                    }
                    function P(t, e) {
                        e.gas = null;
                        let r = t.split('@');
                        return 1 !== r.length
                            ? (r.length > 2 &&
                                  y.throwArgumentError(
                                      'invalid human-readable ABI signature',
                                      'value',
                                      t
                                  ),
                              r[1].match(/^[0-9]+$/) ||
                                  y.throwArgumentError(
                                      'invalid human-readable ABI signature gas',
                                      'value',
                                      t
                                  ),
                              (e.gas = n.gH.from(r[1])),
                              r[0])
                            : t;
                    }
                    function T(t, e) {
                        (e.constant = !1),
                            (e.payable = !1),
                            (e.stateMutability = 'nonpayable'),
                            t.split(' ').forEach(t => {
                                switch (t.trim()) {
                                    case 'constant':
                                        e.constant = !0;
                                        break;
                                    case 'payable':
                                        (e.payable = !0),
                                            (e.stateMutability = 'payable');
                                        break;
                                    case 'nonpayable':
                                        (e.payable = !1),
                                            (e.stateMutability = 'nonpayable');
                                        break;
                                    case 'pure':
                                        (e.constant = !0),
                                            (e.stateMutability = 'pure');
                                        break;
                                    case 'view':
                                        (e.constant = !0),
                                            (e.stateMutability = 'view');
                                        break;
                                    case 'external':
                                    case 'public':
                                    case '':
                                        break;
                                    default:
                                        console.log('unknown modifier: ' + t);
                                }
                            });
                    }
                    function R(t) {
                        let e = {
                            constant: !1,
                            payable: !0,
                            stateMutability: 'payable',
                        };
                        return (
                            null != t.stateMutability
                                ? ((e.stateMutability = t.stateMutability),
                                  (e.constant =
                                      'view' === e.stateMutability ||
                                      'pure' === e.stateMutability),
                                  null != t.constant &&
                                      !!t.constant !== e.constant &&
                                      y.throwArgumentError(
                                          'cannot have constant function with mutability ' +
                                              e.stateMutability,
                                          'value',
                                          t
                                      ),
                                  (e.payable = 'payable' === e.stateMutability),
                                  null != t.payable &&
                                      !!t.payable !== e.payable &&
                                      y.throwArgumentError(
                                          'cannot have payable function with mutability ' +
                                              e.stateMutability,
                                          'value',
                                          t
                                      ))
                                : null != t.payable
                                ? ((e.payable = !!t.payable),
                                  null != t.constant ||
                                      e.payable ||
                                      'constructor' === t.type ||
                                      y.throwArgumentError(
                                          'unable to determine stateMutability',
                                          'value',
                                          t
                                      ),
                                  (e.constant = !!t.constant),
                                  e.constant
                                      ? (e.stateMutability = 'view')
                                      : (e.stateMutability = e.payable
                                            ? 'payable'
                                            : 'nonpayable'),
                                  e.payable &&
                                      e.constant &&
                                      y.throwArgumentError(
                                          'cannot have constant payable function',
                                          'value',
                                          t
                                      ))
                                : null != t.constant
                                ? ((e.constant = !!t.constant),
                                  (e.payable = !e.constant),
                                  (e.stateMutability = e.constant
                                      ? 'view'
                                      : 'payable'))
                                : 'constructor' !== t.type &&
                                  y.throwArgumentError(
                                      'unable to determine stateMutability',
                                      'value',
                                      t
                                  ),
                            e
                        );
                    }
                    class k extends S {
                        format(t) {
                            if (
                                (t || (t = _.sighash),
                                _[t] ||
                                    y.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === _.json)
                            )
                                return JSON.stringify({
                                    type: 'constructor',
                                    stateMutability:
                                        'nonpayable' !== this.stateMutability
                                            ? this.stateMutability
                                            : void 0,
                                    payble: this.payable,
                                    gas: this.gas
                                        ? this.gas.toNumber()
                                        : void 0,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            t === _.sighash &&
                                y.throwError(
                                    'cannot format a constructor for sighash',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'format(sighash)' }
                                );
                            let e =
                                'constructor(' +
                                this.inputs
                                    .map(e => e.format(t))
                                    .join(t === _.full ? ', ' : ',') +
                                ') ';
                            return (
                                this.stateMutability &&
                                    'nonpayable' !== this.stateMutability &&
                                    (e += this.stateMutability + ' '),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? k.fromString(t)
                                : k.fromObject(t);
                        }
                        static fromObject(t) {
                            if (k.isConstructorFragment(t)) return t;
                            'constructor' !== t.type &&
                                y.throwArgumentError(
                                    'invalid constructor object',
                                    'value',
                                    t
                                );
                            let e = R(t);
                            e.constant &&
                                y.throwArgumentError(
                                    'constructor cannot be constant',
                                    'value',
                                    t
                                );
                            const r = {
                                name: null,
                                type: t.type,
                                inputs: t.inputs
                                    ? t.inputs.map(N.fromObject)
                                    : [],
                                payable: e.payable,
                                stateMutability: e.stateMutability,
                                gas: t.gas ? n.gH.from(t.gas) : null,
                            };
                            return new k(v, r);
                        }
                        static fromString(t) {
                            let e = { type: 'constructor' },
                                r = (t = P(t, e)).match(F);
                            return (
                                (r && 'constructor' === r[1].trim()) ||
                                    y.throwArgumentError(
                                        'invalid constructor string',
                                        'value',
                                        t
                                    ),
                                (e.inputs = O(r[2].trim(), !1)),
                                T(r[3].trim(), e),
                                k.fromObject(e)
                            );
                        }
                        static isConstructorFragment(t) {
                            return (
                                t && t._isFragment && 'constructor' === t.type
                            );
                        }
                    }
                    class I extends k {
                        format(t) {
                            if (
                                (t || (t = _.sighash),
                                _[t] ||
                                    y.throwArgumentError(
                                        'invalid format type',
                                        'format',
                                        t
                                    ),
                                t === _.json)
                            )
                                return JSON.stringify({
                                    type: 'function',
                                    name: this.name,
                                    constant: this.constant,
                                    stateMutability:
                                        'nonpayable' !== this.stateMutability
                                            ? this.stateMutability
                                            : void 0,
                                    payble: this.payable,
                                    gas: this.gas
                                        ? this.gas.toNumber()
                                        : void 0,
                                    inputs: this.inputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                    ouputs: this.outputs.map(e =>
                                        JSON.parse(e.format(t))
                                    ),
                                });
                            let e = '';
                            return (
                                t !== _.sighash && (e += 'function '),
                                (e +=
                                    this.name +
                                    '(' +
                                    this.inputs
                                        .map(e => e.format(t))
                                        .join(t === _.full ? ', ' : ',') +
                                    ') '),
                                t !== _.sighash &&
                                    (this.stateMutability
                                        ? 'nonpayable' !==
                                              this.stateMutability &&
                                          (e += this.stateMutability + ' ')
                                        : this.constant && (e += 'view '),
                                    this.outputs &&
                                        this.outputs.length &&
                                        (e +=
                                            'returns (' +
                                            this.outputs
                                                .map(e => e.format(t))
                                                .join(', ') +
                                            ') '),
                                    null != this.gas &&
                                        (e += '@' + this.gas.toString() + ' ')),
                                e.trim()
                            );
                        }
                        static from(t) {
                            return 'string' == typeof t
                                ? I.fromString(t)
                                : I.fromObject(t);
                        }
                        static fromObject(t) {
                            if (I.isFunctionFragment(t)) return t;
                            'function' !== t.type &&
                                y.throwArgumentError(
                                    'invalid function object',
                                    'value',
                                    t
                                );
                            let e = R(t);
                            const r = {
                                type: t.type,
                                name: L(t.name),
                                constant: e.constant,
                                inputs: t.inputs
                                    ? t.inputs.map(N.fromObject)
                                    : [],
                                outputs: t.outputs
                                    ? t.outputs.map(N.fromObject)
                                    : [],
                                payable: e.payable,
                                stateMutability: e.stateMutability,
                                gas: t.gas ? n.gH.from(t.gas) : null,
                            };
                            return new I(v, r);
                        }
                        static fromString(t) {
                            let e = { type: 'function' },
                                r = (t = P(t, e)).split(' returns ');
                            r.length > 2 &&
                                y.throwArgumentError(
                                    'invalid function string',
                                    'value',
                                    t
                                );
                            let n = r[0].match(F);
                            if (
                                (n ||
                                    y.throwArgumentError(
                                        'invalid function signature',
                                        'value',
                                        t
                                    ),
                                (e.name = n[1].trim()),
                                e.name && L(e.name),
                                (e.inputs = O(n[2], !1)),
                                T(n[3].trim(), e),
                                r.length > 1)
                            ) {
                                let n = r[1].match(F);
                                ('' == n[1].trim() && '' == n[3].trim()) ||
                                    y.throwArgumentError(
                                        'unexpected tokens',
                                        'value',
                                        t
                                    ),
                                    (e.outputs = O(n[2], !1));
                            } else e.outputs = [];
                            return I.fromObject(e);
                        }
                        static isFunctionFragment(t) {
                            return t && t._isFragment && 'function' === t.type;
                        }
                    }
                    function B(t) {
                        return (
                            t.match(/^uint($|[^1-9])/)
                                ? (t = 'uint256' + t.substring(4))
                                : t.match(/^int($|[^1-9])/) &&
                                  (t = 'int256' + t.substring(3)),
                            t
                        );
                    }
                    const C = new RegExp('^[A-Za-z_][A-Za-z0-9_]*$');
                    function L(t) {
                        return (
                            (t && t.match(C)) ||
                                y.throwArgumentError(
                                    `invalid identifier "${t}"`,
                                    'value',
                                    t
                                ),
                            t
                        );
                    }
                    const F = new RegExp('^([^)(]*)\\((.*)\\)([^)(]*)$');
                    var U = r(905);
                    const D = new i.Logger(g);
                    class j {
                        constructor(t, e, r, n) {
                            (this.name = t),
                                (this.type = e),
                                (this.localName = r),
                                (this.dynamic = n);
                        }
                        _throwError(t, e) {
                            D.throwArgumentError(t, this.localName, e);
                        }
                    }
                    class z {
                        constructor(t) {
                            a(this, 'wordSize', t || 32),
                                (this._data = []),
                                (this._dataLength = 0),
                                (this._padding = new Uint8Array(t));
                        }
                        get data() {
                            return (0, U.hexConcat)(this._data);
                        }
                        get length() {
                            return this._dataLength;
                        }
                        _writeData(t) {
                            return (
                                this._data.push(t),
                                (this._dataLength += t.length),
                                t.length
                            );
                        }
                        appendWriter(t) {
                            return this._writeData((0, U.concat)(t._data));
                        }
                        writeBytes(t) {
                            let e = (0, U.arrayify)(t);
                            const r = e.length % this.wordSize;
                            return (
                                r &&
                                    (e = (0, U.concat)([
                                        e,
                                        this._padding.slice(r),
                                    ])),
                                this._writeData(e)
                            );
                        }
                        _getValue(t) {
                            let e = (0, U.arrayify)(n.gH.from(t));
                            return (
                                e.length > this.wordSize &&
                                    D.throwError(
                                        'value out-of-bounds',
                                        i.Logger.errors.BUFFER_OVERRUN,
                                        {
                                            length: this.wordSize,
                                            offset: e.length,
                                        }
                                    ),
                                e.length % this.wordSize &&
                                    (e = (0, U.concat)([
                                        this._padding.slice(
                                            e.length % this.wordSize
                                        ),
                                        e,
                                    ])),
                                e
                            );
                        }
                        writeValue(t) {
                            return this._writeData(this._getValue(t));
                        }
                        writeUpdatableValue() {
                            const t = this._data.length;
                            return (
                                this._data.push(this._padding),
                                (this._dataLength += this.wordSize),
                                e => {
                                    this._data[t] = this._getValue(e);
                                }
                            );
                        }
                    }
                    class G {
                        constructor(t, e, r, n) {
                            a(this, '_data', (0, U.arrayify)(t)),
                                a(this, 'wordSize', e || 32),
                                a(this, '_coerceFunc', r),
                                a(this, 'allowLoose', n),
                                (this._offset = 0);
                        }
                        get data() {
                            return (0, U.hexlify)(this._data);
                        }
                        get consumed() {
                            return this._offset;
                        }
                        static coerce(t, e) {
                            let r = t.match('^u?int([0-9]+)$');
                            return (
                                r && parseInt(r[1]) <= 48 && (e = e.toNumber()),
                                e
                            );
                        }
                        coerce(t, e) {
                            return this._coerceFunc
                                ? this._coerceFunc(t, e)
                                : G.coerce(t, e);
                        }
                        _peekBytes(t, e, r) {
                            let n =
                                Math.ceil(e / this.wordSize) * this.wordSize;
                            return (
                                this._offset + n > this._data.length &&
                                    (this.allowLoose &&
                                    r &&
                                    this._offset + e <= this._data.length
                                        ? (n = e)
                                        : D.throwError(
                                              'data out-of-bounds',
                                              i.Logger.errors.BUFFER_OVERRUN,
                                              {
                                                  length: this._data.length,
                                                  offset: this._offset + n,
                                              }
                                          )),
                                this._data.slice(this._offset, this._offset + n)
                            );
                        }
                        subReader(t) {
                            return new G(
                                this._data.slice(this._offset + t),
                                this.wordSize,
                                this._coerceFunc,
                                this.allowLoose
                            );
                        }
                        readBytes(t, e) {
                            let r = this._peekBytes(0, t, !!e);
                            return (this._offset += r.length), r.slice(0, t);
                        }
                        readValue() {
                            return n.gH.from(this.readBytes(this.wordSize));
                        }
                    }
                    var H = r(351);
                    class $ extends j {
                        constructor(t) {
                            super('address', 'address', t, !1);
                        }
                        encode(t, e) {
                            try {
                                (0, H.getAddress)(e);
                            } catch (t) {
                                this._throwError(t.message, e);
                            }
                            return t.writeValue(e);
                        }
                        decode(t) {
                            return (0, H.getAddress)(
                                (0, U.hexZeroPad)(
                                    t.readValue().toHexString(),
                                    20
                                )
                            );
                        }
                    }
                    class V extends j {
                        constructor(t) {
                            super(t.name, t.type, void 0, t.dynamic),
                                (this.coder = t);
                        }
                        encode(t, e) {
                            return this.coder.encode(t, e);
                        }
                        decode(t) {
                            return this.coder.decode(t);
                        }
                    }
                    const q = new i.Logger(g);
                    function W(t, e, r) {
                        let n = null;
                        if (Array.isArray(r)) n = r;
                        else if (r && 'object' == typeof r) {
                            let t = {};
                            n = e.map(e => {
                                const n = e.localName;
                                return (
                                    n ||
                                        q.throwError(
                                            'cannot encode object for signature with missing names',
                                            i.Logger.errors.INVALID_ARGUMENT,
                                            {
                                                argument: 'values',
                                                coder: e,
                                                value: r,
                                            }
                                        ),
                                    t[n] &&
                                        q.throwError(
                                            'cannot encode object for signature with duplicate names',
                                            i.Logger.errors.INVALID_ARGUMENT,
                                            {
                                                argument: 'values',
                                                coder: e,
                                                value: r,
                                            }
                                        ),
                                    (t[n] = !0),
                                    r[n]
                                );
                            });
                        } else
                            q.throwArgumentError(
                                'invalid tuple value',
                                'tuple',
                                r
                            );
                        e.length !== n.length &&
                            q.throwArgumentError(
                                'types/value length mismatch',
                                'tuple',
                                r
                            );
                        let s = new z(t.wordSize),
                            o = new z(t.wordSize),
                            a = [];
                        e.forEach((t, e) => {
                            let r = n[e];
                            if (t.dynamic) {
                                let e = o.length;
                                t.encode(o, r);
                                let n = s.writeUpdatableValue();
                                a.push(t => {
                                    n(t + e);
                                });
                            } else t.encode(s, r);
                        }),
                            a.forEach(t => {
                                t(s.length);
                            });
                        let u = t.appendWriter(s);
                        return (u += t.appendWriter(o)), u;
                    }
                    function Z(t, e) {
                        let r = [],
                            n = t.subReader(0);
                        e.forEach(e => {
                            let s = null;
                            if (e.dynamic) {
                                let r = t.readValue(),
                                    o = n.subReader(r.toNumber());
                                try {
                                    s = e.decode(o);
                                } catch (t) {
                                    if (
                                        t.code ===
                                        i.Logger.errors.BUFFER_OVERRUN
                                    )
                                        throw t;
                                    (s = t),
                                        (s.baseType = e.name),
                                        (s.name = e.localName),
                                        (s.type = e.type);
                                }
                            } else
                                try {
                                    s = e.decode(t);
                                } catch (t) {
                                    if (
                                        t.code ===
                                        i.Logger.errors.BUFFER_OVERRUN
                                    )
                                        throw t;
                                    (s = t),
                                        (s.baseType = e.name),
                                        (s.name = e.localName),
                                        (s.type = e.type);
                                }
                            null != s && r.push(s);
                        });
                        const s = e.reduce((t, e) => {
                            const r = e.localName;
                            return r && (t[r] || (t[r] = 0), t[r]++), t;
                        }, {});
                        e.forEach((t, e) => {
                            let n = t.localName;
                            if (!n || 1 !== s[n]) return;
                            if (
                                ('length' === n && (n = '_length'),
                                null != r[n])
                            )
                                return;
                            const i = r[e];
                            i instanceof Error
                                ? Object.defineProperty(r, n, {
                                      get: () => {
                                          throw i;
                                      },
                                  })
                                : (r[n] = i);
                        });
                        for (let t = 0; t < r.length; t++) {
                            const e = r[t];
                            e instanceof Error &&
                                Object.defineProperty(r, t, {
                                    get: () => {
                                        throw e;
                                    },
                                });
                        }
                        return Object.freeze(r);
                    }
                    class J extends j {
                        constructor(t, e, r) {
                            super(
                                'array',
                                t.type + '[' + (e >= 0 ? e : '') + ']',
                                r,
                                -1 === e || t.dynamic
                            ),
                                (this.coder = t),
                                (this.length = e);
                        }
                        encode(t, e) {
                            Array.isArray(e) ||
                                this._throwError('expected array value', e);
                            let r = this.length;
                            -1 === r &&
                                ((r = e.length), t.writeValue(e.length)),
                                q.checkArgumentCount(
                                    e.length,
                                    r,
                                    'coder array' +
                                        (this.localName
                                            ? ' ' + this.localName
                                            : '')
                                );
                            let n = [];
                            for (let t = 0; t < e.length; t++)
                                n.push(this.coder);
                            return W(t, n, e);
                        }
                        decode(t) {
                            let e = this.length;
                            -1 === e && (e = t.readValue().toNumber());
                            let r = [];
                            for (let t = 0; t < e; t++)
                                r.push(new V(this.coder));
                            return t.coerce(this.name, Z(t, r));
                        }
                    }
                    class X extends j {
                        constructor(t) {
                            super('bool', 'bool', t, !1);
                        }
                        encode(t, e) {
                            return t.writeValue(e ? 1 : 0);
                        }
                        decode(t) {
                            return t.coerce(this.type, !t.readValue().isZero());
                        }
                    }
                    class K extends j {
                        constructor(t, e) {
                            super(t, t, e, !0);
                        }
                        encode(t, e) {
                            e = (0, U.arrayify)(e);
                            let r = t.writeValue(e.length);
                            return (r += t.writeBytes(e)), r;
                        }
                        decode(t) {
                            return t.readBytes(t.readValue().toNumber(), !0);
                        }
                    }
                    class Y extends K {
                        constructor(t) {
                            super('bytes', t);
                        }
                        decode(t) {
                            return t.coerce(
                                this.name,
                                (0, U.hexlify)(super.decode(t))
                            );
                        }
                    }
                    class Q extends j {
                        constructor(t, e) {
                            let r = 'bytes' + String(t);
                            super(r, r, e, !1), (this.size = t);
                        }
                        encode(t, e) {
                            let r = (0, U.arrayify)(e);
                            return (
                                r.length !== this.size &&
                                    this._throwError(
                                        'incorrect data length',
                                        e
                                    ),
                                t.writeBytes(r)
                            );
                        }
                        decode(t) {
                            return t.coerce(
                                this.name,
                                (0, U.hexlify)(t.readBytes(this.size))
                            );
                        }
                    }
                    class tt extends j {
                        constructor(t) {
                            super('null', '', t, !1);
                        }
                        encode(t, e) {
                            return (
                                null != e && this._throwError('not null', e),
                                t.writeBytes([])
                            );
                        }
                        decode(t) {
                            return t.readBytes(0), t.coerce(this.name, null);
                        }
                    }
                    var et = r(60);
                    class rt extends j {
                        constructor(t, e, r) {
                            const n = (e ? 'int' : 'uint') + 8 * t;
                            super(n, n, r, !1),
                                (this.size = t),
                                (this.signed = e);
                        }
                        encode(t, e) {
                            let r = n.gH.from(e),
                                i = et.MaxUint256.mask(8 * t.wordSize);
                            if (this.signed) {
                                let t = i.mask(8 * this.size - 1);
                                (r.gt(t) ||
                                    r.lt(t.add(et.One).mul(et.NegativeOne))) &&
                                    this._throwError('value out-of-bounds', e);
                            } else
                                (r.lt(et.Zero) ||
                                    r.gt(i.mask(8 * this.size))) &&
                                    this._throwError('value out-of-bounds', e);
                            return (
                                (r = r
                                    .toTwos(8 * this.size)
                                    .mask(8 * this.size)),
                                this.signed &&
                                    (r = r
                                        .fromTwos(8 * this.size)
                                        .toTwos(8 * t.wordSize)),
                                t.writeValue(r)
                            );
                        }
                        decode(t) {
                            let e = t.readValue().mask(8 * this.size);
                            return (
                                this.signed && (e = e.fromTwos(8 * this.size)),
                                t.coerce(this.name, e)
                            );
                        }
                    }
                    var nt = r(143);
                    class it extends K {
                        constructor(t) {
                            super('string', t);
                        }
                        encode(t, e) {
                            return super.encode(t, (0, nt.YW)(e));
                        }
                        decode(t) {
                            return (0, nt._v)(super.decode(t));
                        }
                    }
                    class st extends j {
                        constructor(t, e) {
                            let r = !1;
                            const n = [];
                            t.forEach(t => {
                                t.dynamic && (r = !0), n.push(t.type);
                            }),
                                super(
                                    'tuple',
                                    'tuple(' + n.join(',') + ')',
                                    e,
                                    r
                                ),
                                (this.coders = t);
                        }
                        encode(t, e) {
                            return W(t, this.coders, e);
                        }
                        decode(t) {
                            return t.coerce(this.name, Z(t, this.coders));
                        }
                    }
                    const ot = new i.Logger(g),
                        at = new RegExp(/^bytes([0-9]*)$/),
                        ut = new RegExp(/^(u?int)([0-9]*)$/);
                    class ht {
                        constructor(t) {
                            ot.checkNew(new.target, ht),
                                a(this, 'coerceFunc', t || null);
                        }
                        _getCoder(t) {
                            switch (t.baseType) {
                                case 'address':
                                    return new $(t.name);
                                case 'bool':
                                    return new X(t.name);
                                case 'string':
                                    return new it(t.name);
                                case 'bytes':
                                    return new Y(t.name);
                                case 'array':
                                    return new J(
                                        this._getCoder(t.arrayChildren),
                                        t.arrayLength,
                                        t.name
                                    );
                                case 'tuple':
                                    return new st(
                                        (t.components || []).map(t =>
                                            this._getCoder(t)
                                        ),
                                        t.name
                                    );
                                case '':
                                    return new tt(t.name);
                            }
                            let e = t.type.match(ut);
                            if (e) {
                                let r = parseInt(e[2] || '256');
                                return (
                                    (0 === r || r > 256 || r % 8 != 0) &&
                                        ot.throwArgumentError(
                                            'invalid ' + e[1] + ' bit length',
                                            'param',
                                            t
                                        ),
                                    new rt(r / 8, 'int' === e[1], t.name)
                                );
                            }
                            if (((e = t.type.match(at)), e)) {
                                let r = parseInt(e[1]);
                                return (
                                    (0 === r || r > 32) &&
                                        ot.throwArgumentError(
                                            'invalid bytes length',
                                            'param',
                                            t
                                        ),
                                    new Q(r, t.name)
                                );
                            }
                            return ot.throwArgumentError(
                                'invalid type',
                                'type',
                                t.type
                            );
                        }
                        _getWordSize() {
                            return 32;
                        }
                        _getReader(t, e) {
                            return new G(
                                t,
                                this._getWordSize(),
                                this.coerceFunc,
                                e
                            );
                        }
                        _getWriter() {
                            return new z(this._getWordSize());
                        }
                        encode(t, e) {
                            t.length !== e.length &&
                                ot.throwError(
                                    'types/values length mismatch',
                                    i.Logger.errors.INVALID_ARGUMENT,
                                    {
                                        count: {
                                            types: t.length,
                                            values: e.length,
                                        },
                                        value: { types: t, values: e },
                                    }
                                );
                            const r = t.map(t => this._getCoder(N.from(t))),
                                n = new st(r, '_'),
                                s = this._getWriter();
                            return n.encode(s, e), s.data;
                        }
                        decode(t, e, r) {
                            const n = t.map(t => this._getCoder(N.from(t)));
                            return new st(n, '_').decode(
                                this._getReader((0, U.arrayify)(e), r)
                            );
                        }
                    }
                    const lt = new ht();
                    var ct = r(234);
                    function ft(t) {
                        return (0, ct.S)((0, nt.YW)(t));
                    }
                    new i.Logger('hash/5.0.5'),
                        new Uint8Array([
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                        ]);
                    const dt = new i.Logger(g);
                    class pt extends m {}
                    class mt extends m {}
                    class gt extends m {
                        static isIndexed(t) {
                            return !(!t || !t._isIndexed);
                        }
                    }
                    function yt(t, e) {
                        const r = new Error(
                            `deferred error during ABI decoding triggered accessing ${t}`
                        );
                        return (r.error = e), r;
                    }
                    class vt {
                        constructor(t) {
                            dt.checkNew(new.target, vt);
                            let e = [];
                            (e = 'string' == typeof t ? JSON.parse(t) : t),
                                a(
                                    this,
                                    'fragments',
                                    e.map(t => S.from(t)).filter(t => null != t)
                                ),
                                a(
                                    this,
                                    '_abiCoder',
                                    u(new.target, 'getAbiCoder')()
                                ),
                                a(this, 'functions', {}),
                                a(this, 'errors', {}),
                                a(this, 'events', {}),
                                a(this, 'structs', {}),
                                this.fragments.forEach(t => {
                                    let e = null;
                                    switch (t.type) {
                                        case 'constructor':
                                            return this.deploy
                                                ? void dt.warn(
                                                      'duplicate definition - constructor'
                                                  )
                                                : void a(this, 'deploy', t);
                                        case 'function':
                                            e = this.functions;
                                            break;
                                        case 'event':
                                            e = this.events;
                                            break;
                                        default:
                                            return;
                                    }
                                    let r = t.format();
                                    e[r]
                                        ? dt.warn('duplicate definition - ' + r)
                                        : (e[r] = t);
                                }),
                                this.deploy ||
                                    a(
                                        this,
                                        'deploy',
                                        k.from({
                                            payable: !1,
                                            type: 'constructor',
                                        })
                                    ),
                                a(this, '_isInterface', !0);
                        }
                        format(t) {
                            t || (t = _.full),
                                t === _.sighash &&
                                    dt.throwArgumentError(
                                        'interface does not support formatting sighash',
                                        'format',
                                        t
                                    );
                            const e = this.fragments.map(e => e.format(t));
                            return t === _.json
                                ? JSON.stringify(e.map(t => JSON.parse(t)))
                                : e;
                        }
                        static getAbiCoder() {
                            return lt;
                        }
                        static getAddress(t) {
                            return (0, H.getAddress)(t);
                        }
                        static getSighash(t) {
                            return (0, U.hexDataSlice)(ft(t.format()), 0, 4);
                        }
                        static getEventTopic(t) {
                            return ft(t.format());
                        }
                        getFunction(t) {
                            if ((0, U.isHexString)(t)) {
                                for (const e in this.functions)
                                    if (t === this.getSighash(e))
                                        return this.functions[e];
                                dt.throwArgumentError(
                                    'no matching function',
                                    'sighash',
                                    t
                                );
                            }
                            if (-1 === t.indexOf('(')) {
                                const e = t.trim(),
                                    r = Object.keys(this.functions).filter(
                                        t => t.split('(')[0] === e
                                    );
                                return (
                                    0 === r.length
                                        ? dt.throwArgumentError(
                                              'no matching function',
                                              'name',
                                              e
                                          )
                                        : r.length > 1 &&
                                          dt.throwArgumentError(
                                              'multiple matching functions',
                                              'name',
                                              e
                                          ),
                                    this.functions[r[0]]
                                );
                            }
                            const e = this.functions[I.fromString(t).format()];
                            return (
                                e ||
                                    dt.throwArgumentError(
                                        'no matching function',
                                        'signature',
                                        t
                                    ),
                                e
                            );
                        }
                        getEvent(t) {
                            if ((0, U.isHexString)(t)) {
                                const e = t.toLowerCase();
                                for (const t in this.events)
                                    if (e === this.getEventTopic(t))
                                        return this.events[t];
                                dt.throwArgumentError(
                                    'no matching event',
                                    'topichash',
                                    e
                                );
                            }
                            if (-1 === t.indexOf('(')) {
                                const e = t.trim(),
                                    r = Object.keys(this.events).filter(
                                        t => t.split('(')[0] === e
                                    );
                                return (
                                    0 === r.length
                                        ? dt.throwArgumentError(
                                              'no matching event',
                                              'name',
                                              e
                                          )
                                        : r.length > 1 &&
                                          dt.throwArgumentError(
                                              'multiple matching events',
                                              'name',
                                              e
                                          ),
                                    this.events[r[0]]
                                );
                            }
                            const e = this.events[x.fromString(t).format()];
                            return (
                                e ||
                                    dt.throwArgumentError(
                                        'no matching event',
                                        'signature',
                                        t
                                    ),
                                e
                            );
                        }
                        getSighash(t) {
                            return (
                                'string' == typeof t &&
                                    (t = this.getFunction(t)),
                                u(this.constructor, 'getSighash')(t)
                            );
                        }
                        getEventTopic(t) {
                            return (
                                'string' == typeof t && (t = this.getEvent(t)),
                                u(this.constructor, 'getEventTopic')(t)
                            );
                        }
                        _decodeParams(t, e) {
                            return this._abiCoder.decode(t, e);
                        }
                        _encodeParams(t, e) {
                            return this._abiCoder.encode(t, e);
                        }
                        encodeDeploy(t) {
                            return this._encodeParams(
                                this.deploy.inputs,
                                t || []
                            );
                        }
                        decodeFunctionData(t, e) {
                            'string' == typeof t && (t = this.getFunction(t));
                            const r = (0, U.arrayify)(e);
                            return (
                                (0, U.hexlify)(r.slice(0, 4)) !==
                                    this.getSighash(t) &&
                                    dt.throwArgumentError(
                                        `data signature does not match function ${t.name}.`,
                                        'data',
                                        (0, U.hexlify)(r)
                                    ),
                                this._decodeParams(t.inputs, r.slice(4))
                            );
                        }
                        encodeFunctionData(t, e) {
                            return (
                                'string' == typeof t &&
                                    (t = this.getFunction(t)),
                                (0, U.hexlify)(
                                    (0, U.concat)([
                                        this.getSighash(t),
                                        this._encodeParams(t.inputs, e || []),
                                    ])
                                )
                            );
                        }
                        decodeFunctionResult(t, e) {
                            'string' == typeof t && (t = this.getFunction(t));
                            let r = (0, U.arrayify)(e),
                                n = null,
                                s = null;
                            switch (r.length % this._abiCoder._getWordSize()) {
                                case 0:
                                    try {
                                        return this._abiCoder.decode(
                                            t.outputs,
                                            r
                                        );
                                    } catch (t) {}
                                    break;
                                case 4:
                                    '0x08c379a0' ===
                                        (0, U.hexlify)(r.slice(0, 4)) &&
                                        ((s = 'Error(string)'),
                                        (n = this._abiCoder.decode(
                                            ['string'],
                                            r.slice(4)
                                        )[0]));
                            }
                            return dt.throwError(
                                'call revert exception',
                                i.Logger.errors.CALL_EXCEPTION,
                                {
                                    method: t.format(),
                                    errorSignature: s,
                                    errorArgs: [n],
                                    reason: n,
                                }
                            );
                        }
                        encodeFunctionResult(t, e) {
                            return (
                                'string' == typeof t &&
                                    (t = this.getFunction(t)),
                                (0, U.hexlify)(
                                    this._abiCoder.encode(t.outputs, e || [])
                                )
                            );
                        }
                        encodeFilterTopics(t, e) {
                            'string' == typeof t && (t = this.getEvent(t)),
                                e.length > t.inputs.length &&
                                    dt.throwError(
                                        'too many arguments for ' + t.format(),
                                        i.Logger.errors.UNEXPECTED_ARGUMENT,
                                        { argument: 'values', value: e }
                                    );
                            let r = [];
                            t.anonymous || r.push(this.getEventTopic(t));
                            const n = (t, e) =>
                                'string' === t.type
                                    ? ft(e)
                                    : 'bytes' === t.type
                                    ? (0, ct.S)((0, U.hexlify)(e))
                                    : ('address' === t.type &&
                                          this._abiCoder.encode(
                                              ['address'],
                                              [e]
                                          ),
                                      (0, U.hexZeroPad)((0, U.hexlify)(e), 32));
                            for (
                                e.forEach((e, i) => {
                                    let s = t.inputs[i];
                                    s.indexed
                                        ? null == e
                                            ? r.push(null)
                                            : 'array' === s.baseType ||
                                              'tuple' === s.baseType
                                            ? dt.throwArgumentError(
                                                  'filtering with tuples or arrays not supported',
                                                  'contract.' + s.name,
                                                  e
                                              )
                                            : Array.isArray(e)
                                            ? r.push(e.map(t => n(s, t)))
                                            : r.push(n(s, e))
                                        : null != e &&
                                          dt.throwArgumentError(
                                              'cannot filter non-indexed parameters; must be null',
                                              'contract.' + s.name,
                                              e
                                          );
                                });
                                r.length && null === r[r.length - 1];

                            )
                                r.pop();
                            return r;
                        }
                        encodeEventLog(t, e) {
                            'string' == typeof t && (t = this.getEvent(t));
                            const r = [],
                                n = [],
                                i = [];
                            return (
                                t.anonymous || r.push(this.getEventTopic(t)),
                                e.length !== t.inputs.length &&
                                    dt.throwArgumentError(
                                        'event arguments/values mismatch',
                                        'values',
                                        e
                                    ),
                                t.inputs.forEach((t, s) => {
                                    const o = e[s];
                                    if (t.indexed)
                                        if ('string' === t.type) r.push(ft(o));
                                        else if ('bytes' === t.type)
                                            r.push((0, ct.S)(o));
                                        else {
                                            if (
                                                'tuple' === t.baseType ||
                                                'array' === t.baseType
                                            )
                                                throw new Error(
                                                    'not implemented'
                                                );
                                            r.push(
                                                this._abiCoder.encode(
                                                    [t.type],
                                                    [o]
                                                )
                                            );
                                        }
                                    else n.push(t), i.push(o);
                                }),
                                { data: this._abiCoder.encode(n, i), topics: r }
                            );
                        }
                        decodeEventLog(t, e, r) {
                            if (
                                ('string' == typeof t && (t = this.getEvent(t)),
                                null != r && !t.anonymous)
                            ) {
                                let e = this.getEventTopic(t);
                                ((0, U.isHexString)(r[0], 32) &&
                                    r[0].toLowerCase() === e) ||
                                    dt.throwError(
                                        'fragment/topic mismatch',
                                        i.Logger.errors.INVALID_ARGUMENT,
                                        {
                                            argument: 'topics[0]',
                                            expected: e,
                                            value: r[0],
                                        }
                                    ),
                                    (r = r.slice(1));
                            }
                            let n = [],
                                s = [],
                                o = [];
                            t.inputs.forEach((t, e) => {
                                t.indexed
                                    ? 'string' === t.type ||
                                      'bytes' === t.type ||
                                      'tuple' === t.baseType ||
                                      'array' === t.baseType
                                        ? (n.push(
                                              N.fromObject({
                                                  type: 'bytes32',
                                                  name: t.name,
                                              })
                                          ),
                                          o.push(!0))
                                        : (n.push(t), o.push(!1))
                                    : (s.push(t), o.push(!1));
                            });
                            let a =
                                    null != r
                                        ? this._abiCoder.decode(
                                              n,
                                              (0, U.concat)(r)
                                          )
                                        : null,
                                u = this._abiCoder.decode(s, e, !0),
                                h = [],
                                l = 0,
                                c = 0;
                            t.inputs.forEach((t, e) => {
                                if (t.indexed)
                                    if (null == a)
                                        h[e] = new gt({
                                            _isIndexed: !0,
                                            hash: null,
                                        });
                                    else if (o[e])
                                        h[e] = new gt({
                                            _isIndexed: !0,
                                            hash: a[c++],
                                        });
                                    else
                                        try {
                                            h[e] = a[c++];
                                        } catch (t) {
                                            h[e] = t;
                                        }
                                else
                                    try {
                                        h[e] = u[l++];
                                    } catch (t) {
                                        h[e] = t;
                                    }
                                if (t.name && null == h[t.name]) {
                                    const r = h[e];
                                    r instanceof Error
                                        ? Object.defineProperty(h, t.name, {
                                              get: () => {
                                                  throw yt(
                                                      `property ${JSON.stringify(
                                                          t.name
                                                      )}`,
                                                      r
                                                  );
                                              },
                                          })
                                        : (h[t.name] = r);
                                }
                            });
                            for (let t = 0; t < h.length; t++) {
                                const e = h[t];
                                e instanceof Error &&
                                    Object.defineProperty(h, t, {
                                        get: () => {
                                            throw yt(`index ${t}`, e);
                                        },
                                    });
                            }
                            return Object.freeze(h);
                        }
                        parseTransaction(t) {
                            let e = this.getFunction(
                                t.data.substring(0, 10).toLowerCase()
                            );
                            return e
                                ? new mt({
                                      args: this._abiCoder.decode(
                                          e.inputs,
                                          '0x' + t.data.substring(10)
                                      ),
                                      functionFragment: e,
                                      name: e.name,
                                      signature: e.format(),
                                      sighash: this.getSighash(e),
                                      value: n.gH.from(t.value || '0'),
                                  })
                                : null;
                        }
                        parseLog(t) {
                            let e = this.getEvent(t.topics[0]);
                            return !e || e.anonymous
                                ? null
                                : new pt({
                                      eventFragment: e,
                                      name: e.name,
                                      signature: e.format(),
                                      topic: this.getEventTopic(e),
                                      args: this.decodeEventLog(
                                          e,
                                          t.data,
                                          t.topics
                                      ),
                                  });
                        }
                        static isInterface(t) {
                            return !(!t || !t._isInterface);
                        }
                    }
                    const wt = new i.Logger('abstract-provider/5.0.5');
                    class bt {
                        constructor() {
                            wt.checkAbstract(new.target, bt),
                                a(this, '_isProvider', !0);
                        }
                        addListener(t, e) {
                            return this.on(t, e);
                        }
                        removeListener(t, e) {
                            return this.off(t, e);
                        }
                        static isProvider(t) {
                            return !(!t || !t._isProvider);
                        }
                    }
                    var Mt = function(t, e, r, n) {
                        return new (r || (r = Promise))(function(i, s) {
                            function o(t) {
                                try {
                                    u(n.next(t));
                                } catch (t) {
                                    s(t);
                                }
                            }
                            function a(t) {
                                try {
                                    u(n.throw(t));
                                } catch (t) {
                                    s(t);
                                }
                            }
                            function u(t) {
                                var e;
                                t.done
                                    ? i(t.value)
                                    : ((e = t.value),
                                      e instanceof r
                                          ? e
                                          : new r(function(t) {
                                                t(e);
                                            })).then(o, a);
                            }
                            u((n = n.apply(t, e || [])).next());
                        });
                    };
                    const Et = new i.Logger('abstract-signer/5.0.6'),
                        _t = [
                            'chainId',
                            'data',
                            'from',
                            'gasLimit',
                            'gasPrice',
                            'nonce',
                            'to',
                            'value',
                        ],
                        At = [
                            i.Logger.errors.INSUFFICIENT_FUNDS,
                            i.Logger.errors.NONCE_EXPIRED,
                            i.Logger.errors.REPLACEMENT_UNDERPRICED,
                        ];
                    class Nt {
                        constructor() {
                            Et.checkAbstract(new.target, Nt),
                                a(this, '_isSigner', !0);
                        }
                        getBalance(t) {
                            return Mt(this, void 0, void 0, function*() {
                                return (
                                    this._checkProvider('getBalance'),
                                    yield this.provider.getBalance(
                                        this.getAddress(),
                                        t
                                    )
                                );
                            });
                        }
                        getTransactionCount(t) {
                            return Mt(this, void 0, void 0, function*() {
                                return (
                                    this._checkProvider('getTransactionCount'),
                                    yield this.provider.getTransactionCount(
                                        this.getAddress(),
                                        t
                                    )
                                );
                            });
                        }
                        estimateGas(t) {
                            return Mt(this, void 0, void 0, function*() {
                                this._checkProvider('estimateGas');
                                const e = yield h(this.checkTransaction(t));
                                return yield this.provider.estimateGas(e);
                            });
                        }
                        call(t, e) {
                            return Mt(this, void 0, void 0, function*() {
                                this._checkProvider('call');
                                const r = yield h(this.checkTransaction(t));
                                return yield this.provider.call(r, e);
                            });
                        }
                        sendTransaction(t) {
                            return (
                                this._checkProvider('sendTransaction'),
                                this.populateTransaction(t).then(t =>
                                    this.signTransaction(t).then(t =>
                                        this.provider.sendTransaction(t)
                                    )
                                )
                            );
                        }
                        getChainId() {
                            return Mt(this, void 0, void 0, function*() {
                                return (
                                    this._checkProvider('getChainId'),
                                    (yield this.provider.getNetwork()).chainId
                                );
                            });
                        }
                        getGasPrice() {
                            return Mt(this, void 0, void 0, function*() {
                                return (
                                    this._checkProvider('getGasPrice'),
                                    yield this.provider.getGasPrice()
                                );
                            });
                        }
                        resolveName(t) {
                            return Mt(this, void 0, void 0, function*() {
                                return (
                                    this._checkProvider('resolveName'),
                                    yield this.provider.resolveName(t)
                                );
                            });
                        }
                        checkTransaction(t) {
                            for (const e in t)
                                -1 === _t.indexOf(e) &&
                                    Et.throwArgumentError(
                                        'invalid transaction key: ' + e,
                                        'transaction',
                                        t
                                    );
                            const e = l(t);
                            return (
                                null == e.from
                                    ? (e.from = this.getAddress())
                                    : (e.from = Promise.all([
                                          Promise.resolve(e.from),
                                          this.getAddress(),
                                      ]).then(
                                          e => (
                                              e[0] !== e[1] &&
                                                  Et.throwArgumentError(
                                                      'from address mismatch',
                                                      'transaction',
                                                      t
                                                  ),
                                              e[0]
                                          )
                                      )),
                                e
                            );
                        }
                        populateTransaction(t) {
                            return Mt(this, void 0, void 0, function*() {
                                const e = yield h(this.checkTransaction(t));
                                return (
                                    null != e.to &&
                                        (e.to = Promise.resolve(e.to).then(t =>
                                            this.resolveName(t)
                                        )),
                                    null == e.gasPrice &&
                                        (e.gasPrice = this.getGasPrice()),
                                    null == e.nonce &&
                                        (e.nonce = this.getTransactionCount(
                                            'pending'
                                        )),
                                    null == e.gasLimit &&
                                        (e.gasLimit = this.estimateGas(e).catch(
                                            t => {
                                                if (At.indexOf(t.code) >= 0)
                                                    throw t;
                                                return Et.throwError(
                                                    'cannot estimate gas; transaction may fail or may require manual gas limit',
                                                    i.Logger.errors
                                                        .UNPREDICTABLE_GAS_LIMIT,
                                                    { error: t, tx: e }
                                                );
                                            }
                                        )),
                                    null == e.chainId
                                        ? (e.chainId = this.getChainId())
                                        : (e.chainId = Promise.all([
                                              Promise.resolve(e.chainId),
                                              this.getChainId(),
                                          ]).then(
                                              e => (
                                                  0 !== e[1] &&
                                                      e[0] !== e[1] &&
                                                      Et.throwArgumentError(
                                                          'chainId address mismatch',
                                                          'transaction',
                                                          t
                                                      ),
                                                  e[0]
                                              )
                                          )),
                                    yield h(e)
                                );
                            });
                        }
                        _checkProvider(t) {
                            this.provider ||
                                Et.throwError(
                                    'missing provider',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: t || '_checkProvider' }
                                );
                        }
                        static isSigner(t) {
                            return !(!t || !t._isSigner);
                        }
                    }
                    class Ot extends Nt {
                        constructor(t, e) {
                            Et.checkNew(new.target, Ot),
                                super(),
                                a(this, 'address', t),
                                a(this, 'provider', e || null);
                        }
                        getAddress() {
                            return Promise.resolve(this.address);
                        }
                        _fail(t, e) {
                            return Promise.resolve().then(() => {
                                Et.throwError(
                                    t,
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: e }
                                );
                            });
                        }
                        signMessage(t) {
                            return this._fail(
                                'VoidSigner cannot sign messages',
                                'signMessage'
                            );
                        }
                        signTransaction(t) {
                            return this._fail(
                                'VoidSigner cannot sign transactions',
                                'signTransaction'
                            );
                        }
                        connect(t) {
                            return new Ot(this.address, t);
                        }
                    }
                    var St = function(t, e, r, n) {
                        return new (r || (r = Promise))(function(i, s) {
                            function o(t) {
                                try {
                                    u(n.next(t));
                                } catch (t) {
                                    s(t);
                                }
                            }
                            function a(t) {
                                try {
                                    u(n.throw(t));
                                } catch (t) {
                                    s(t);
                                }
                            }
                            function u(t) {
                                var e;
                                t.done
                                    ? i(t.value)
                                    : ((e = t.value),
                                      e instanceof r
                                          ? e
                                          : new r(function(t) {
                                                t(e);
                                            })).then(o, a);
                            }
                            u((n = n.apply(t, e || [])).next());
                        });
                    };
                    const xt = new i.Logger('contracts/5.0.5'),
                        Pt = {
                            chainId: !0,
                            data: !0,
                            from: !0,
                            gasLimit: !0,
                            gasPrice: !0,
                            nonce: !0,
                            to: !0,
                            value: !0,
                        };
                    function Tt(t, e) {
                        return St(this, void 0, void 0, function*() {
                            const r = yield e;
                            try {
                                return (0, H.getAddress)(r);
                            } catch (t) {}
                            t ||
                                xt.throwError(
                                    'a provider or signer is needed to resolve ENS names',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'resolveName' }
                                );
                            const n = yield t.resolveName(r);
                            return (
                                null == n &&
                                    xt.throwArgumentError(
                                        'resolver or addr is not configured for ENS name',
                                        'name',
                                        r
                                    ),
                                n
                            );
                        });
                    }
                    function Rt(t, e, r) {
                        return St(this, void 0, void 0, function*() {
                            return Array.isArray(r)
                                ? yield Promise.all(
                                      r.map((r, n) =>
                                          Rt(
                                              t,
                                              Array.isArray(e)
                                                  ? e[n]
                                                  : e[r.name],
                                              r
                                          )
                                      )
                                  )
                                : 'address' === r.type
                                ? yield Tt(t, e)
                                : 'tuple' === r.type
                                ? yield Rt(t, e, r.components)
                                : 'array' === r.baseType
                                ? Array.isArray(e)
                                    ? yield Promise.all(
                                          e.map(e => Rt(t, e, r.arrayChildren))
                                      )
                                    : Promise.reject(
                                          new Error('invalid value for array')
                                      )
                                : e;
                        });
                    }
                    function kt(t, e, r) {
                        return St(this, void 0, void 0, function*() {
                            let s = {};
                            r.length === e.inputs.length + 1 &&
                                'object' == typeof r[r.length - 1] &&
                                (s = l(r.pop())),
                                xt.checkArgumentCount(
                                    r.length,
                                    e.inputs.length,
                                    'passed to contract'
                                ),
                                t.signer
                                    ? s.from
                                        ? (s.from = h({
                                              override: Tt(t.signer, s.from),
                                              signer: t.signer.getAddress(),
                                          }).then(t =>
                                              St(
                                                  this,
                                                  void 0,
                                                  void 0,
                                                  function*() {
                                                      return (
                                                          (0, H.getAddress)(
                                                              t.signer
                                                          ) !== t.override &&
                                                              xt.throwError(
                                                                  'Contract with a Signer cannot override from',
                                                                  i.Logger
                                                                      .errors
                                                                      .UNSUPPORTED_OPERATION,
                                                                  {
                                                                      operation:
                                                                          'overrides.from',
                                                                  }
                                                              ),
                                                          t.override
                                                      );
                                                  }
                                              )
                                          ))
                                        : (s.from = t.signer.getAddress())
                                    : s.from &&
                                      (s.from = Tt(t.provider, s.from));
                            const o = yield h({
                                    args: Rt(
                                        t.signer || t.provider,
                                        r,
                                        e.inputs
                                    ),
                                    address: t.resolvedAddress,
                                    overrides: h(s) || {},
                                }),
                                a = t.interface.encodeFunctionData(e, o.args),
                                u = { data: a, to: o.address },
                                c = o.overrides;
                            if (
                                (null != c.nonce &&
                                    (u.nonce = n.gH.from(c.nonce).toNumber()),
                                null != c.gasLimit &&
                                    (u.gasLimit = n.gH.from(c.gasLimit)),
                                null != c.gasPrice &&
                                    (u.gasPrice = n.gH.from(c.gasPrice)),
                                null != c.from && (u.from = c.from),
                                null == u.gasLimit && null != e.gas)
                            ) {
                                let t = 21e3;
                                const r = (0, U.arrayify)(a);
                                for (let e = 0; e < r.length; e++)
                                    (t += 4), r[e] && (t += 64);
                                u.gasLimit = n.gH.from(e.gas).add(t);
                            }
                            if (c.value) {
                                const t = n.gH.from(c.value);
                                t.isZero() ||
                                    e.payable ||
                                    xt.throwError(
                                        'non-payable method cannot override value',
                                        i.Logger.errors.UNSUPPORTED_OPERATION,
                                        {
                                            operation: 'overrides.value',
                                            value: s.value,
                                        }
                                    ),
                                    (u.value = t);
                            }
                            delete s.nonce,
                                delete s.gasLimit,
                                delete s.gasPrice,
                                delete s.from,
                                delete s.value;
                            const f = Object.keys(s).filter(t => null != s[t]);
                            return (
                                f.length &&
                                    xt.throwError(
                                        `cannot override ${f
                                            .map(t => JSON.stringify(t))
                                            .join(',')}`,
                                        i.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'overrides', overrides: f }
                                    ),
                                u
                            );
                        });
                    }
                    function It(t, e, r) {
                        const n = t.signer || t.provider;
                        return function(...s) {
                            return St(this, void 0, void 0, function*() {
                                let o;
                                if (
                                    s.length === e.inputs.length + 1 &&
                                    'object' == typeof s[s.length - 1]
                                ) {
                                    const t = l(s.pop());
                                    null != t.blockTag &&
                                        (o = yield t.blockTag),
                                        delete t.blockTag,
                                        s.push(t);
                                }
                                null != t.deployTransaction &&
                                    (yield t._deployed(o));
                                const a = yield kt(t, e, s),
                                    u = yield n.call(a, o);
                                try {
                                    let n = t.interface.decodeFunctionResult(
                                        e,
                                        u
                                    );
                                    return (
                                        r &&
                                            1 === e.outputs.length &&
                                            (n = n[0]),
                                        n
                                    );
                                } catch (e) {
                                    throw (e.code ===
                                        i.Logger.errors.CALL_EXCEPTION &&
                                        ((e.address = t.address),
                                        (e.args = s),
                                        (e.transaction = a)),
                                    e);
                                }
                            });
                        };
                    }
                    function Bt(t, e, r) {
                        return e.constant
                            ? It(t, e, r)
                            : (function(t, e) {
                                  return function(...r) {
                                      return St(
                                          this,
                                          void 0,
                                          void 0,
                                          function*() {
                                              t.signer ||
                                                  xt.throwError(
                                                      'sending a transaction requires a signer',
                                                      i.Logger.errors
                                                          .UNSUPPORTED_OPERATION,
                                                      {
                                                          operation:
                                                              'sendTransaction',
                                                      }
                                                  ),
                                                  null != t.deployTransaction &&
                                                      (yield t._deployed());
                                              const n = yield kt(t, e, r),
                                                  s = yield t.signer.sendTransaction(
                                                      n
                                                  ),
                                                  o = s.wait.bind(s);
                                              return (
                                                  (s.wait = e =>
                                                      o(e).then(
                                                          e => (
                                                              (e.events = e.logs.map(
                                                                  r => {
                                                                      let n = p(
                                                                              r
                                                                          ),
                                                                          i = null;
                                                                      try {
                                                                          i = t.interface.parseLog(
                                                                              r
                                                                          );
                                                                      } catch (t) {}
                                                                      return (
                                                                          i &&
                                                                              ((n.args =
                                                                                  i.args),
                                                                              (n.decode = (
                                                                                  e,
                                                                                  r
                                                                              ) =>
                                                                                  t.interface.decodeEventLog(
                                                                                      i.eventFragment,
                                                                                      e,
                                                                                      r
                                                                                  )),
                                                                              (n.event =
                                                                                  i.name),
                                                                              (n.eventSignature =
                                                                                  i.signature)),
                                                                          (n.removeListener = () =>
                                                                              t.provider),
                                                                          (n.getBlock = () =>
                                                                              t.provider.getBlock(
                                                                                  e.blockHash
                                                                              )),
                                                                          (n.getTransaction = () =>
                                                                              t.provider.getTransaction(
                                                                                  e.transactionHash
                                                                              )),
                                                                          (n.getTransactionReceipt = () =>
                                                                              Promise.resolve(
                                                                                  e
                                                                              )),
                                                                          n
                                                                      );
                                                                  }
                                                              )),
                                                              e
                                                          )
                                                      )),
                                                  s
                                              );
                                          }
                                      );
                                  };
                              })(t, e);
                    }
                    function Ct(t) {
                        return !t.address ||
                            (null != t.topics && 0 !== t.topics.length)
                            ? (t.address || '*') +
                                  '@' +
                                  (t.topics
                                      ? t.topics
                                            .map(t =>
                                                Array.isArray(t)
                                                    ? t.join('|')
                                                    : t
                                            )
                                            .join(':')
                                      : '')
                            : '*';
                    }
                    class Lt {
                        constructor(t, e) {
                            a(this, 'tag', t),
                                a(this, 'filter', e),
                                (this._listeners = []);
                        }
                        addListener(t, e) {
                            this._listeners.push({ listener: t, once: e });
                        }
                        removeListener(t) {
                            let e = !1;
                            this._listeners = this._listeners.filter(
                                r => !(!e && r.listener === t && ((e = !0), 1))
                            );
                        }
                        removeAllListeners() {
                            this._listeners = [];
                        }
                        listeners() {
                            return this._listeners.map(t => t.listener);
                        }
                        listenerCount() {
                            return this._listeners.length;
                        }
                        run(t) {
                            const e = this.listenerCount();
                            return (
                                (this._listeners = this._listeners.filter(e => {
                                    const r = t.slice();
                                    return (
                                        setTimeout(() => {
                                            e.listener.apply(this, r);
                                        }, 0),
                                        !e.once
                                    );
                                })),
                                e
                            );
                        }
                        prepareEvent(t) {}
                        getEmit(t) {
                            return [t];
                        }
                    }
                    class Ft extends Lt {
                        constructor() {
                            super('error', null);
                        }
                    }
                    class Ut extends Lt {
                        constructor(t, e, r, n) {
                            const i = { address: t };
                            let s = e.getEventTopic(r);
                            n
                                ? (s !== n[0] &&
                                      xt.throwArgumentError(
                                          'topic mismatch',
                                          'topics',
                                          n
                                      ),
                                  (i.topics = n.slice()))
                                : (i.topics = [s]),
                                super(Ct(i), i),
                                a(this, 'address', t),
                                a(this, 'interface', e),
                                a(this, 'fragment', r);
                        }
                        prepareEvent(t) {
                            super.prepareEvent(t),
                                (t.event = this.fragment.name),
                                (t.eventSignature = this.fragment.format()),
                                (t.decode = (t, e) =>
                                    this.interface.decodeEventLog(
                                        this.fragment,
                                        t,
                                        e
                                    ));
                            try {
                                t.args = this.interface.decodeEventLog(
                                    this.fragment,
                                    t.data,
                                    t.topics
                                );
                            } catch (e) {
                                (t.args = null), (t.decodeError = e);
                            }
                        }
                        getEmit(t) {
                            const e = (function(t) {
                                const e = [],
                                    r = function(t, n) {
                                        if (Array.isArray(n))
                                            for (let i in n) {
                                                const s = t.slice();
                                                s.push(i);
                                                try {
                                                    r(s, n[i]);
                                                } catch (t) {
                                                    e.push({
                                                        path: s,
                                                        error: t,
                                                    });
                                                }
                                            }
                                    };
                                return r([], t), e;
                            })(t.args);
                            if (e.length) throw e[0].error;
                            const r = (t.args || []).slice();
                            return r.push(t), r;
                        }
                    }
                    class Dt extends Lt {
                        constructor(t, e) {
                            super('*', { address: t }),
                                a(this, 'address', t),
                                a(this, 'interface', e);
                        }
                        prepareEvent(t) {
                            super.prepareEvent(t);
                            try {
                                const e = this.interface.parseLog(t);
                                (t.event = e.name),
                                    (t.eventSignature = e.signature),
                                    (t.decode = (t, r) =>
                                        this.interface.decodeEventLog(
                                            e.eventFragment,
                                            t,
                                            r
                                        )),
                                    (t.args = e.args);
                            } catch (t) {}
                        }
                    }
                    class jt {
                        constructor(t, e, r) {
                            xt.checkNew(new.target, jt),
                                a(
                                    this,
                                    'interface',
                                    u(new.target, 'getInterface')(e)
                                ),
                                null == r
                                    ? (a(this, 'provider', null),
                                      a(this, 'signer', null))
                                    : Nt.isSigner(r)
                                    ? (a(this, 'provider', r.provider || null),
                                      a(this, 'signer', r))
                                    : bt.isProvider(r)
                                    ? (a(this, 'provider', r),
                                      a(this, 'signer', null))
                                    : xt.throwArgumentError(
                                          'invalid signer or provider',
                                          'signerOrProvider',
                                          r
                                      ),
                                a(this, 'callStatic', {}),
                                a(this, 'estimateGas', {}),
                                a(this, 'functions', {}),
                                a(this, 'populateTransaction', {}),
                                a(this, 'filters', {});
                            {
                                const t = {};
                                Object.keys(this.interface.events).forEach(
                                    e => {
                                        const r = this.interface.events[e];
                                        a(this.filters, e, (...t) => ({
                                            address: this.address,
                                            topics: this.interface.encodeFilterTopics(
                                                r,
                                                t
                                            ),
                                        })),
                                            t[r.name] || (t[r.name] = []),
                                            t[r.name].push(e);
                                    }
                                ),
                                    Object.keys(t).forEach(e => {
                                        const r = t[e];
                                        1 === r.length
                                            ? a(
                                                  this.filters,
                                                  e,
                                                  this.filters[r[0]]
                                              )
                                            : xt.warn(
                                                  `Duplicate definition of ${e} (${r.join(
                                                      ', '
                                                  )})`
                                              );
                                    });
                            }
                            if (
                                (a(this, '_runningEvents', {}),
                                a(this, '_wrappedEmits', {}),
                                a(this, 'address', t),
                                this.provider)
                            )
                                a(
                                    this,
                                    'resolvedAddress',
                                    Tt(this.provider, t)
                                );
                            else
                                try {
                                    a(
                                        this,
                                        'resolvedAddress',
                                        Promise.resolve((0, H.getAddress)(t))
                                    );
                                } catch (t) {
                                    xt.throwError(
                                        'provider is required to use ENS name as contract address',
                                        i.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'new Contract' }
                                    );
                                }
                            const n = {},
                                s = {};
                            Object.keys(this.interface.functions).forEach(t => {
                                const e = this.interface.functions[t];
                                if (s[t])
                                    xt.warn(
                                        `Duplicate ABI entry for ${JSON.stringify(
                                            name
                                        )}`
                                    );
                                else {
                                    s[t] = !0;
                                    {
                                        const r = e.name;
                                        n[r] || (n[r] = []), n[r].push(t);
                                    }
                                    null == this[t] &&
                                        a(this, t, Bt(this, e, !0)),
                                        null == this.functions[t] &&
                                            a(
                                                this.functions,
                                                t,
                                                Bt(this, e, !1)
                                            ),
                                        null == this.callStatic[t] &&
                                            a(
                                                this.callStatic,
                                                t,
                                                It(this, e, !0)
                                            ),
                                        null == this.populateTransaction[t] &&
                                            a(
                                                this.populateTransaction,
                                                t,
                                                (function(t, e) {
                                                    return function(...r) {
                                                        return kt(t, e, r);
                                                    };
                                                })(this, e)
                                            ),
                                        null == this.estimateGas[t] &&
                                            a(
                                                this.estimateGas,
                                                t,
                                                (function(t, e) {
                                                    const r =
                                                        t.signer || t.provider;
                                                    return function(...n) {
                                                        return St(
                                                            this,
                                                            void 0,
                                                            void 0,
                                                            function*() {
                                                                r ||
                                                                    xt.throwError(
                                                                        'estimate require a provider or signer',
                                                                        i.Logger
                                                                            .errors
                                                                            .UNSUPPORTED_OPERATION,
                                                                        {
                                                                            operation:
                                                                                'estimateGas',
                                                                        }
                                                                    );
                                                                const s = yield kt(
                                                                    t,
                                                                    e,
                                                                    n
                                                                );
                                                                return yield r.estimateGas(
                                                                    s
                                                                );
                                                            }
                                                        );
                                                    };
                                                })(this, e)
                                            );
                                }
                            }),
                                Object.keys(n).forEach(t => {
                                    const e = n[t];
                                    if (e.length > 1) return;
                                    const r = e[0];
                                    null == this[t] && a(this, t, this[r]),
                                        null == this.functions[t] &&
                                            a(
                                                this.functions,
                                                t,
                                                this.functions[r]
                                            ),
                                        null == this.callStatic[t] &&
                                            a(
                                                this.callStatic,
                                                t,
                                                this.callStatic[r]
                                            ),
                                        null == this.populateTransaction[t] &&
                                            a(
                                                this.populateTransaction,
                                                t,
                                                this.populateTransaction[r]
                                            ),
                                        null == this.estimateGas[t] &&
                                            a(
                                                this.estimateGas,
                                                t,
                                                this.estimateGas[r]
                                            );
                                });
                        }
                        static getContractAddress(t) {
                            return (0, H.getContractAddress)(t);
                        }
                        static getInterface(t) {
                            return vt.isInterface(t) ? t : new vt(t);
                        }
                        deployed() {
                            return this._deployed();
                        }
                        _deployed(t) {
                            return (
                                this._deployedPromise ||
                                    (this.deployTransaction
                                        ? (this._deployedPromise = this.deployTransaction
                                              .wait()
                                              .then(() => this))
                                        : (this._deployedPromise = this.provider
                                              .getCode(this.address, t)
                                              .then(
                                                  t => (
                                                      '0x' === t &&
                                                          xt.throwError(
                                                              'contract not deployed',
                                                              i.Logger.errors
                                                                  .UNSUPPORTED_OPERATION,
                                                              {
                                                                  contractAddress: this
                                                                      .address,
                                                                  operation:
                                                                      'getDeployed',
                                                              }
                                                          ),
                                                      this
                                                  )
                                              ))),
                                this._deployedPromise
                            );
                        }
                        fallback(t) {
                            this.signer ||
                                xt.throwError(
                                    'sending a transactions require a signer',
                                    i.Logger.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'sendTransaction(fallback)' }
                                );
                            const e = l(t || {});
                            return (
                                ['from', 'to'].forEach(function(t) {
                                    null != e[t] &&
                                        xt.throwError(
                                            'cannot override ' + t,
                                            i.Logger.errors
                                                .UNSUPPORTED_OPERATION,
                                            { operation: t }
                                        );
                                }),
                                (e.to = this.resolvedAddress),
                                this.deployed().then(() =>
                                    this.signer.sendTransaction(e)
                                )
                            );
                        }
                        connect(t) {
                            'string' == typeof t &&
                                (t = new Ot(t, this.provider));
                            const e = new this.constructor(
                                this.address,
                                this.interface,
                                t
                            );
                            return (
                                this.deployTransaction &&
                                    a(
                                        e,
                                        'deployTransaction',
                                        this.deployTransaction
                                    ),
                                e
                            );
                        }
                        attach(t) {
                            return new this.constructor(
                                t,
                                this.interface,
                                this.signer || this.provider
                            );
                        }
                        static isIndexed(t) {
                            return gt.isIndexed(t);
                        }
                        _normalizeRunningEvent(t) {
                            return this._runningEvents[t.tag]
                                ? this._runningEvents[t.tag]
                                : t;
                        }
                        _getRunningEvent(t) {
                            if ('string' == typeof t) {
                                if ('error' === t)
                                    return this._normalizeRunningEvent(
                                        new Ft()
                                    );
                                if ('event' === t)
                                    return this._normalizeRunningEvent(
                                        new Lt('event', null)
                                    );
                                if ('*' === t)
                                    return this._normalizeRunningEvent(
                                        new Dt(this.address, this.interface)
                                    );
                                const e = this.interface.getEvent(t);
                                return this._normalizeRunningEvent(
                                    new Ut(this.address, this.interface, e)
                                );
                            }
                            if (t.topics && t.topics.length > 0) {
                                try {
                                    const e = t.topics[0];
                                    if ('string' != typeof e)
                                        throw new Error('invalid topic');
                                    const r = this.interface.getEvent(e);
                                    return this._normalizeRunningEvent(
                                        new Ut(
                                            this.address,
                                            this.interface,
                                            r,
                                            t.topics
                                        )
                                    );
                                } catch (t) {}
                                const e = {
                                    address: this.address,
                                    topics: t.topics,
                                };
                                return this._normalizeRunningEvent(
                                    new Lt(Ct(e), e)
                                );
                            }
                            return this._normalizeRunningEvent(
                                new Dt(this.address, this.interface)
                            );
                        }
                        _checkRunningEvents(t) {
                            if (0 === t.listenerCount()) {
                                delete this._runningEvents[t.tag];
                                const e = this._wrappedEmits[t.tag];
                                e &&
                                    (this.provider.off(t.filter, e),
                                    delete this._wrappedEmits[t.tag]);
                            }
                        }
                        _wrapEvent(t, e, r) {
                            const n = p(e);
                            return (
                                (n.removeListener = () => {
                                    r &&
                                        (t.removeListener(r),
                                        this._checkRunningEvents(t));
                                }),
                                (n.getBlock = () =>
                                    this.provider.getBlock(e.blockHash)),
                                (n.getTransaction = () =>
                                    this.provider.getTransaction(
                                        e.transactionHash
                                    )),
                                (n.getTransactionReceipt = () =>
                                    this.provider.getTransactionReceipt(
                                        e.transactionHash
                                    )),
                                t.prepareEvent(n),
                                n
                            );
                        }
                        _addEventListener(t, e, r) {
                            if (
                                (this.provider ||
                                    xt.throwError(
                                        'events require a provider or a signer with a provider',
                                        i.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'once' }
                                    ),
                                t.addListener(e, r),
                                (this._runningEvents[t.tag] = t),
                                !this._wrappedEmits[t.tag])
                            ) {
                                const r = r => {
                                    let n = this._wrapEvent(t, r, e);
                                    if (null == n.decodeError)
                                        try {
                                            const e = t.getEmit(n);
                                            this.emit(t.filter, ...e);
                                        } catch (t) {
                                            n.decodeError = t.error;
                                        }
                                    null != t.filter && this.emit('event', n),
                                        null != n.decodeError &&
                                            this.emit(
                                                'error',
                                                n.decodeError,
                                                n
                                            );
                                };
                                (this._wrappedEmits[t.tag] = r),
                                    null != t.filter &&
                                        this.provider.on(t.filter, r);
                            }
                        }
                        queryFilter(t, e, r) {
                            const n = this._getRunningEvent(t),
                                i = l(n.filter);
                            return (
                                'string' == typeof e &&
                                (0, U.isHexString)(e, 32)
                                    ? (null != r &&
                                          xt.throwArgumentError(
                                              'cannot specify toBlock with blockhash',
                                              'toBlock',
                                              r
                                          ),
                                      (i.blockHash = e))
                                    : ((i.fromBlock = null != e ? e : 0),
                                      (i.toBlock = null != r ? r : 'latest')),
                                this.provider
                                    .getLogs(i)
                                    .then(t =>
                                        t.map(t => this._wrapEvent(n, t, null))
                                    )
                            );
                        }
                        on(t, e) {
                            return (
                                this._addEventListener(
                                    this._getRunningEvent(t),
                                    e,
                                    !1
                                ),
                                this
                            );
                        }
                        once(t, e) {
                            return (
                                this._addEventListener(
                                    this._getRunningEvent(t),
                                    e,
                                    !0
                                ),
                                this
                            );
                        }
                        emit(t, ...e) {
                            if (!this.provider) return !1;
                            const r = this._getRunningEvent(t),
                                n = r.run(e) > 0;
                            return this._checkRunningEvents(r), n;
                        }
                        listenerCount(t) {
                            return this.provider
                                ? this._getRunningEvent(t).listenerCount()
                                : 0;
                        }
                        listeners(t) {
                            if (!this.provider) return [];
                            if (null == t) {
                                const t = [];
                                for (let e in this._runningEvents)
                                    this._runningEvents[e]
                                        .listeners()
                                        .forEach(e => {
                                            t.push(e);
                                        });
                                return t;
                            }
                            return this._getRunningEvent(t).listeners();
                        }
                        removeAllListeners(t) {
                            if (!this.provider) return this;
                            if (null == t) {
                                for (const t in this._runningEvents) {
                                    const e = this._runningEvents[t];
                                    e.removeAllListeners(),
                                        this._checkRunningEvents(e);
                                }
                                return this;
                            }
                            const e = this._getRunningEvent(t);
                            return (
                                e.removeAllListeners(),
                                this._checkRunningEvents(e),
                                this
                            );
                        }
                        off(t, e) {
                            if (!this.provider) return this;
                            const r = this._getRunningEvent(t);
                            return (
                                r.removeListener(e),
                                this._checkRunningEvents(r),
                                this
                            );
                        }
                        removeListener(t, e) {
                            return this.off(t, e);
                        }
                    }
                    class zt {
                        constructor(t, e, r) {
                            let n = null;
                            (n =
                                'string' == typeof e
                                    ? e
                                    : (0, U.isBytes)(e)
                                    ? (0, U.hexlify)(e)
                                    : e && 'string' == typeof e.object
                                    ? e.object
                                    : '!'),
                                '0x' !== n.substring(0, 2) && (n = '0x' + n),
                                (!(0, U.isHexString)(n) || n.length % 2) &&
                                    xt.throwArgumentError(
                                        'invalid bytecode',
                                        'bytecode',
                                        e
                                    ),
                                r &&
                                    !Nt.isSigner(r) &&
                                    xt.throwArgumentError(
                                        'invalid signer',
                                        'signer',
                                        r
                                    ),
                                a(this, 'bytecode', n),
                                a(
                                    this,
                                    'interface',
                                    u(new.target, 'getInterface')(t)
                                ),
                                a(this, 'signer', r || null);
                        }
                        getDeployTransaction(...t) {
                            let e = {};
                            if (
                                t.length ===
                                    this.interface.deploy.inputs.length + 1 &&
                                'object' == typeof t[t.length - 1]
                            ) {
                                e = l(t.pop());
                                for (const t in e)
                                    if (!Pt[t])
                                        throw new Error(
                                            'unknown transaction override ' + t
                                        );
                            }
                            return (
                                ['data', 'from', 'to'].forEach(t => {
                                    null != e[t] &&
                                        xt.throwError(
                                            'cannot override ' + t,
                                            i.Logger.errors
                                                .UNSUPPORTED_OPERATION,
                                            { operation: t }
                                        );
                                }),
                                xt.checkArgumentCount(
                                    t.length,
                                    this.interface.deploy.inputs.length,
                                    ' in Contract constructor'
                                ),
                                (e.data = (0, U.hexlify)(
                                    (0, U.concat)([
                                        this.bytecode,
                                        this.interface.encodeDeploy(t),
                                    ])
                                )),
                                e
                            );
                        }
                        deploy(...t) {
                            return St(this, void 0, void 0, function*() {
                                let e = {};
                                t.length ===
                                    this.interface.deploy.inputs.length + 1 &&
                                    (e = t.pop()),
                                    xt.checkArgumentCount(
                                        t.length,
                                        this.interface.deploy.inputs.length,
                                        ' in Contract constructor'
                                    );
                                const r = yield Rt(
                                    this.signer,
                                    t,
                                    this.interface.deploy.inputs
                                );
                                r.push(e);
                                const n = this.getDeployTransaction(...r),
                                    i = yield this.signer.sendTransaction(n),
                                    s = u(
                                        this.constructor,
                                        'getContractAddress'
                                    )(i),
                                    o = u(this.constructor, 'getContract')(
                                        s,
                                        this.interface,
                                        this.signer
                                    );
                                return a(o, 'deployTransaction', i), o;
                            });
                        }
                        attach(t) {
                            return this.constructor.getContract(
                                t,
                                this.interface,
                                this.signer
                            );
                        }
                        connect(t) {
                            return new this.constructor(
                                this.interface,
                                this.bytecode,
                                t
                            );
                        }
                        static fromSolidity(t, e) {
                            null == t &&
                                xt.throwError(
                                    'missing compiler output',
                                    i.Logger.errors.MISSING_ARGUMENT,
                                    { argument: 'compilerOutput' }
                                ),
                                'string' == typeof t && (t = JSON.parse(t));
                            const r = t.abi;
                            let n = null;
                            return (
                                t.bytecode
                                    ? (n = t.bytecode)
                                    : t.evm &&
                                      t.evm.bytecode &&
                                      (n = t.evm.bytecode),
                                new this(r, n, e)
                            );
                        }
                        static getInterface(t) {
                            return jt.getInterface(t);
                        }
                        static getContractAddress(t) {
                            return (0, H.getContractAddress)(t);
                        }
                        static getContract(t, e, r) {
                            return new jt(t, e, r);
                        }
                    }
                },
                234: (t, e, r) => {
                    'use strict';
                    r.d(e, { S: () => o });
                    var n = r(176),
                        i = r.n(n),
                        s = r(905);
                    function o(t) {
                        return '0x' + i().keccak_256((0, s.arrayify)(t));
                    }
                },
                720: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            ErrorCode: () => l,
                            LogLevel: () => h,
                            Logger: () => c,
                        });
                    let n = !1,
                        i = !1;
                    const s = {
                        debug: 1,
                        default: 2,
                        info: 2,
                        warning: 3,
                        error: 4,
                        off: 5,
                    };
                    let o = s.default,
                        a = null;
                    const u = (function() {
                        try {
                            const t = [];
                            if (
                                (['NFD', 'NFC', 'NFKD', 'NFKC'].forEach(e => {
                                    try {
                                        if ('test' !== 'test'.normalize(e))
                                            throw new Error('bad normalize');
                                    } catch (r) {
                                        t.push(e);
                                    }
                                }),
                                t.length)
                            )
                                throw new Error('missing ' + t.join(', '));
                            if (
                                String.fromCharCode(233).normalize('NFD') !==
                                String.fromCharCode(101, 769)
                            )
                                throw new Error('broken implementation');
                        } catch (t) {
                            return t.message;
                        }
                        return null;
                    })();
                    var h, l;
                    !(function(t) {
                        (t.DEBUG = 'DEBUG'),
                            (t.INFO = 'INFO'),
                            (t.WARNING = 'WARNING'),
                            (t.ERROR = 'ERROR'),
                            (t.OFF = 'OFF');
                    })(h || (h = {})),
                        (function(t) {
                            (t.UNKNOWN_ERROR = 'UNKNOWN_ERROR'),
                                (t.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED'),
                                (t.UNSUPPORTED_OPERATION =
                                    'UNSUPPORTED_OPERATION'),
                                (t.NETWORK_ERROR = 'NETWORK_ERROR'),
                                (t.SERVER_ERROR = 'SERVER_ERROR'),
                                (t.TIMEOUT = 'TIMEOUT'),
                                (t.BUFFER_OVERRUN = 'BUFFER_OVERRUN'),
                                (t.NUMERIC_FAULT = 'NUMERIC_FAULT'),
                                (t.MISSING_NEW = 'MISSING_NEW'),
                                (t.INVALID_ARGUMENT = 'INVALID_ARGUMENT'),
                                (t.MISSING_ARGUMENT = 'MISSING_ARGUMENT'),
                                (t.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT'),
                                (t.CALL_EXCEPTION = 'CALL_EXCEPTION'),
                                (t.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS'),
                                (t.NONCE_EXPIRED = 'NONCE_EXPIRED'),
                                (t.REPLACEMENT_UNDERPRICED =
                                    'REPLACEMENT_UNDERPRICED'),
                                (t.UNPREDICTABLE_GAS_LIMIT =
                                    'UNPREDICTABLE_GAS_LIMIT');
                        })(l || (l = {}));
                    class c {
                        constructor(t) {
                            Object.defineProperty(this, 'version', {
                                enumerable: !0,
                                value: t,
                                writable: !1,
                            });
                        }
                        _log(t, e) {
                            const r = t.toLowerCase();
                            null == s[r] &&
                                this.throwArgumentError(
                                    'invalid log level name',
                                    'logLevel',
                                    t
                                ),
                                o > s[r] || console.log.apply(console, e);
                        }
                        debug(...t) {
                            this._log(c.levels.DEBUG, t);
                        }
                        info(...t) {
                            this._log(c.levels.INFO, t);
                        }
                        warn(...t) {
                            this._log(c.levels.WARNING, t);
                        }
                        makeError(t, e, r) {
                            if (i)
                                return this.makeError('censored error', e, {});
                            e || (e = c.errors.UNKNOWN_ERROR), r || (r = {});
                            const n = [];
                            Object.keys(r).forEach(t => {
                                try {
                                    n.push(t + '=' + JSON.stringify(r[t]));
                                } catch (e) {
                                    n.push(
                                        t +
                                            '=' +
                                            JSON.stringify(r[t].toString())
                                    );
                                }
                            }),
                                n.push(`code=${e}`),
                                n.push(`version=${this.version}`);
                            const s = t;
                            n.length && (t += ' (' + n.join(', ') + ')');
                            const o = new Error(t);
                            return (
                                (o.reason = s),
                                (o.code = e),
                                Object.keys(r).forEach(function(t) {
                                    o[t] = r[t];
                                }),
                                o
                            );
                        }
                        throwError(t, e, r) {
                            throw this.makeError(t, e, r);
                        }
                        throwArgumentError(t, e, r) {
                            return this.throwError(
                                t,
                                c.errors.INVALID_ARGUMENT,
                                { argument: e, value: r }
                            );
                        }
                        assert(t, e, r, n) {
                            t || this.throwError(e, r, n);
                        }
                        assertArgument(t, e, r, n) {
                            t || this.throwArgumentError(e, r, n);
                        }
                        checkNormalize(t) {
                            null == t &&
                                (t =
                                    'platform missing String.prototype.normalize'),
                                u &&
                                    this.throwError(
                                        'platform missing String.prototype.normalize',
                                        c.errors.UNSUPPORTED_OPERATION,
                                        {
                                            operation:
                                                'String.prototype.normalize',
                                            form: u,
                                        }
                                    );
                        }
                        checkSafeUint53(t, e) {
                            'number' == typeof t &&
                                (null == e && (e = 'value not safe'),
                                (t < 0 || t >= 9007199254740991) &&
                                    this.throwError(e, c.errors.NUMERIC_FAULT, {
                                        operation: 'checkSafeInteger',
                                        fault: 'out-of-safe-range',
                                        value: t,
                                    }),
                                t % 1 &&
                                    this.throwError(e, c.errors.NUMERIC_FAULT, {
                                        operation: 'checkSafeInteger',
                                        fault: 'non-integer',
                                        value: t,
                                    }));
                        }
                        checkArgumentCount(t, e, r) {
                            (r = r ? ': ' + r : ''),
                                t < e &&
                                    this.throwError(
                                        'missing argument' + r,
                                        c.errors.MISSING_ARGUMENT,
                                        { count: t, expectedCount: e }
                                    ),
                                t > e &&
                                    this.throwError(
                                        'too many arguments' + r,
                                        c.errors.UNEXPECTED_ARGUMENT,
                                        { count: t, expectedCount: e }
                                    );
                        }
                        checkNew(t, e) {
                            (t !== Object && null != t) ||
                                this.throwError(
                                    'missing new',
                                    c.errors.MISSING_NEW,
                                    { name: e.name }
                                );
                        }
                        checkAbstract(t, e) {
                            t === e
                                ? this.throwError(
                                      'cannot instantiate abstract class ' +
                                          JSON.stringify(e.name) +
                                          ' directly; use a sub-class',
                                      c.errors.UNSUPPORTED_OPERATION,
                                      { name: t.name, operation: 'new' }
                                  )
                                : (t !== Object && null != t) ||
                                  this.throwError(
                                      'missing new',
                                      c.errors.MISSING_NEW,
                                      { name: e.name }
                                  );
                        }
                        static globalLogger() {
                            return a || (a = new c('logger/5.0.6')), a;
                        }
                        static setCensorship(t, e) {
                            if (
                                (!t &&
                                    e &&
                                    this.globalLogger().throwError(
                                        'cannot permanently disable censorship',
                                        c.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'setCensorship' }
                                    ),
                                n)
                            ) {
                                if (!t) return;
                                this.globalLogger().throwError(
                                    'error censorship permanent',
                                    c.errors.UNSUPPORTED_OPERATION,
                                    { operation: 'setCensorship' }
                                );
                            }
                            (i = !!t), (n = !!e);
                        }
                        static setLogLevel(t) {
                            const e = s[t.toLowerCase()];
                            null != e
                                ? (o = e)
                                : c
                                      .globalLogger()
                                      .warn('invalid log level - ' + t);
                        }
                    }
                    (c.errors = l), (c.levels = h);
                },
                913: (t, e) => {
                    'use strict';
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.version = 'sha2/5.0.4');
                },
                600: function(t, e, r) {
                    'use strict';
                    var n =
                        (this && this.__importStar) ||
                        function(t) {
                            if (t && t.__esModule) return t;
                            var e = {};
                            if (null != t)
                                for (var r in t)
                                    Object.hasOwnProperty.call(t, r) &&
                                        (e[r] = t[r]);
                            return (e.default = t), e;
                        };
                    Object.defineProperty(e, '__esModule', { value: !0 });
                    var i,
                        s = n(r(973)),
                        o = r(905),
                        a = r(720),
                        u = r(913),
                        h = new a.Logger(u.version);
                    !(function(t) {
                        (t.sha256 = 'sha256'), (t.sha512 = 'sha512');
                    })(
                        (i =
                            e.SupportedAlgorithm || (e.SupportedAlgorithm = {}))
                    ),
                        (e.ripemd160 = function(t) {
                            return (
                                '0x' +
                                s
                                    .ripemd160()
                                    .update(o.arrayify(t))
                                    .digest('hex')
                            );
                        }),
                        (e.sha256 = function(t) {
                            return (
                                '0x' +
                                s
                                    .sha256()
                                    .update(o.arrayify(t))
                                    .digest('hex')
                            );
                        }),
                        (e.sha512 = function(t) {
                            return (
                                '0x' +
                                s
                                    .sha512()
                                    .update(o.arrayify(t))
                                    .digest('hex')
                            );
                        }),
                        (e.computeHmac = function(t, e, r) {
                            return (
                                i[t] ||
                                    h.throwError(
                                        'unsupported algorithm ' + t,
                                        a.Logger.errors.UNSUPPORTED_OPERATION,
                                        { operation: 'hmac', algorithm: t }
                                    ),
                                '0x' +
                                    s
                                        .hmac(s[t], o.arrayify(e))
                                        .update(o.arrayify(r))
                                        .digest('hex')
                            );
                        });
                },
                973: (t, e, r) => {
                    var n = e;
                    (n.utils = r(679)),
                        (n.common = r(929)),
                        (n.sha = r(12)),
                        (n.ripemd = r(951)),
                        (n.hmac = r(71)),
                        (n.sha1 = n.sha.sha1),
                        (n.sha256 = n.sha.sha256),
                        (n.sha224 = n.sha.sha224),
                        (n.sha384 = n.sha.sha384),
                        (n.sha512 = n.sha.sha512),
                        (n.ripemd160 = n.ripemd.ripemd160);
                },
                929: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(349);
                    function s() {
                        (this.pending = null),
                            (this.pendingTotal = 0),
                            (this.blockSize = this.constructor.blockSize),
                            (this.outSize = this.constructor.outSize),
                            (this.hmacStrength = this.constructor.hmacStrength),
                            (this.padLength = this.constructor.padLength / 8),
                            (this.endian = 'big'),
                            (this._delta8 = this.blockSize / 8),
                            (this._delta32 = this.blockSize / 32);
                    }
                    (e.BlockHash = s),
                        (s.prototype.update = function(t, e) {
                            if (
                                ((t = n.toArray(t, e)),
                                this.pending
                                    ? (this.pending = this.pending.concat(t))
                                    : (this.pending = t),
                                (this.pendingTotal += t.length),
                                this.pending.length >= this._delta8)
                            ) {
                                var r =
                                    (t = this.pending).length % this._delta8;
                                (this.pending = t.slice(
                                    t.length - r,
                                    t.length
                                )),
                                    0 === this.pending.length &&
                                        (this.pending = null),
                                    (t = n.join32(
                                        t,
                                        0,
                                        t.length - r,
                                        this.endian
                                    ));
                                for (
                                    var i = 0;
                                    i < t.length;
                                    i += this._delta32
                                )
                                    this._update(t, i, i + this._delta32);
                            }
                            return this;
                        }),
                        (s.prototype.digest = function(t) {
                            return (
                                this.update(this._pad()),
                                i(null === this.pending),
                                this._digest(t)
                            );
                        }),
                        (s.prototype._pad = function() {
                            var t = this.pendingTotal,
                                e = this._delta8,
                                r = e - ((t + this.padLength) % e),
                                n = new Array(r + this.padLength);
                            n[0] = 128;
                            for (var i = 1; i < r; i++) n[i] = 0;
                            if (((t <<= 3), 'big' === this.endian)) {
                                for (var s = 8; s < this.padLength; s++)
                                    n[i++] = 0;
                                (n[i++] = 0),
                                    (n[i++] = 0),
                                    (n[i++] = 0),
                                    (n[i++] = 0),
                                    (n[i++] = (t >>> 24) & 255),
                                    (n[i++] = (t >>> 16) & 255),
                                    (n[i++] = (t >>> 8) & 255),
                                    (n[i++] = 255 & t);
                            } else
                                for (
                                    n[i++] = 255 & t,
                                        n[i++] = (t >>> 8) & 255,
                                        n[i++] = (t >>> 16) & 255,
                                        n[i++] = (t >>> 24) & 255,
                                        n[i++] = 0,
                                        n[i++] = 0,
                                        n[i++] = 0,
                                        n[i++] = 0,
                                        s = 8;
                                    s < this.padLength;
                                    s++
                                )
                                    n[i++] = 0;
                            return n;
                        });
                },
                71: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(349);
                    function s(t, e, r) {
                        if (!(this instanceof s)) return new s(t, e, r);
                        (this.Hash = t),
                            (this.blockSize = t.blockSize / 8),
                            (this.outSize = t.outSize / 8),
                            (this.inner = null),
                            (this.outer = null),
                            this._init(n.toArray(e, r));
                    }
                    (t.exports = s),
                        (s.prototype._init = function(t) {
                            t.length > this.blockSize &&
                                (t = new this.Hash().update(t).digest()),
                                i(t.length <= this.blockSize);
                            for (var e = t.length; e < this.blockSize; e++)
                                t.push(0);
                            for (e = 0; e < t.length; e++) t[e] ^= 54;
                            for (
                                this.inner = new this.Hash().update(t), e = 0;
                                e < t.length;
                                e++
                            )
                                t[e] ^= 106;
                            this.outer = new this.Hash().update(t);
                        }),
                        (s.prototype.update = function(t, e) {
                            return this.inner.update(t, e), this;
                        }),
                        (s.prototype.digest = function(t) {
                            return (
                                this.outer.update(this.inner.digest()),
                                this.outer.digest(t)
                            );
                        });
                },
                951: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(929),
                        s = n.rotl32,
                        o = n.sum32,
                        a = n.sum32_3,
                        u = n.sum32_4,
                        h = i.BlockHash;
                    function l() {
                        if (!(this instanceof l)) return new l();
                        h.call(this),
                            (this.h = [
                                1732584193,
                                4023233417,
                                2562383102,
                                271733878,
                                3285377520,
                            ]),
                            (this.endian = 'little');
                    }
                    function c(t, e, r, n) {
                        return t <= 15
                            ? e ^ r ^ n
                            : t <= 31
                            ? (e & r) | (~e & n)
                            : t <= 47
                            ? (e | ~r) ^ n
                            : t <= 63
                            ? (e & n) | (r & ~n)
                            : e ^ (r | ~n);
                    }
                    function f(t) {
                        return t <= 15
                            ? 0
                            : t <= 31
                            ? 1518500249
                            : t <= 47
                            ? 1859775393
                            : t <= 63
                            ? 2400959708
                            : 2840853838;
                    }
                    function d(t) {
                        return t <= 15
                            ? 1352829926
                            : t <= 31
                            ? 1548603684
                            : t <= 47
                            ? 1836072691
                            : t <= 63
                            ? 2053994217
                            : 0;
                    }
                    n.inherits(l, h),
                        (e.ripemd160 = l),
                        (l.blockSize = 512),
                        (l.outSize = 160),
                        (l.hmacStrength = 192),
                        (l.padLength = 64),
                        (l.prototype._update = function(t, e) {
                            for (
                                var r = this.h[0],
                                    n = this.h[1],
                                    i = this.h[2],
                                    h = this.h[3],
                                    l = this.h[4],
                                    v = r,
                                    w = n,
                                    b = i,
                                    M = h,
                                    E = l,
                                    _ = 0;
                                _ < 80;
                                _++
                            ) {
                                var A = o(
                                    s(
                                        u(r, c(_, n, i, h), t[p[_] + e], f(_)),
                                        g[_]
                                    ),
                                    l
                                );
                                (r = l),
                                    (l = h),
                                    (h = s(i, 10)),
                                    (i = n),
                                    (n = A),
                                    (A = o(
                                        s(
                                            u(
                                                v,
                                                c(79 - _, w, b, M),
                                                t[m[_] + e],
                                                d(_)
                                            ),
                                            y[_]
                                        ),
                                        E
                                    )),
                                    (v = E),
                                    (E = M),
                                    (M = s(b, 10)),
                                    (b = w),
                                    (w = A);
                            }
                            (A = a(this.h[1], i, M)),
                                (this.h[1] = a(this.h[2], h, E)),
                                (this.h[2] = a(this.h[3], l, v)),
                                (this.h[3] = a(this.h[4], r, w)),
                                (this.h[4] = a(this.h[0], n, b)),
                                (this.h[0] = A);
                        }),
                        (l.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h, 'little')
                                : n.split32(this.h, 'little');
                        });
                    var p = [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            7,
                            4,
                            13,
                            1,
                            10,
                            6,
                            15,
                            3,
                            12,
                            0,
                            9,
                            5,
                            2,
                            14,
                            11,
                            8,
                            3,
                            10,
                            14,
                            4,
                            9,
                            15,
                            8,
                            1,
                            2,
                            7,
                            0,
                            6,
                            13,
                            11,
                            5,
                            12,
                            1,
                            9,
                            11,
                            10,
                            0,
                            8,
                            12,
                            4,
                            13,
                            3,
                            7,
                            15,
                            14,
                            5,
                            6,
                            2,
                            4,
                            0,
                            5,
                            9,
                            7,
                            12,
                            2,
                            10,
                            14,
                            1,
                            3,
                            8,
                            11,
                            6,
                            15,
                            13,
                        ],
                        m = [
                            5,
                            14,
                            7,
                            0,
                            9,
                            2,
                            11,
                            4,
                            13,
                            6,
                            15,
                            8,
                            1,
                            10,
                            3,
                            12,
                            6,
                            11,
                            3,
                            7,
                            0,
                            13,
                            5,
                            10,
                            14,
                            15,
                            8,
                            12,
                            4,
                            9,
                            1,
                            2,
                            15,
                            5,
                            1,
                            3,
                            7,
                            14,
                            6,
                            9,
                            11,
                            8,
                            12,
                            2,
                            10,
                            0,
                            4,
                            13,
                            8,
                            6,
                            4,
                            1,
                            3,
                            11,
                            15,
                            0,
                            5,
                            12,
                            2,
                            13,
                            9,
                            7,
                            10,
                            14,
                            12,
                            15,
                            10,
                            4,
                            1,
                            5,
                            8,
                            7,
                            6,
                            2,
                            13,
                            14,
                            0,
                            3,
                            9,
                            11,
                        ],
                        g = [
                            11,
                            14,
                            15,
                            12,
                            5,
                            8,
                            7,
                            9,
                            11,
                            13,
                            14,
                            15,
                            6,
                            7,
                            9,
                            8,
                            7,
                            6,
                            8,
                            13,
                            11,
                            9,
                            7,
                            15,
                            7,
                            12,
                            15,
                            9,
                            11,
                            7,
                            13,
                            12,
                            11,
                            13,
                            6,
                            7,
                            14,
                            9,
                            13,
                            15,
                            14,
                            8,
                            13,
                            6,
                            5,
                            12,
                            7,
                            5,
                            11,
                            12,
                            14,
                            15,
                            14,
                            15,
                            9,
                            8,
                            9,
                            14,
                            5,
                            6,
                            8,
                            6,
                            5,
                            12,
                            9,
                            15,
                            5,
                            11,
                            6,
                            8,
                            13,
                            12,
                            5,
                            12,
                            13,
                            14,
                            11,
                            8,
                            5,
                            6,
                        ],
                        y = [
                            8,
                            9,
                            9,
                            11,
                            13,
                            15,
                            15,
                            5,
                            7,
                            7,
                            8,
                            11,
                            14,
                            14,
                            12,
                            6,
                            9,
                            13,
                            15,
                            7,
                            12,
                            8,
                            9,
                            11,
                            7,
                            7,
                            12,
                            7,
                            6,
                            15,
                            13,
                            11,
                            9,
                            7,
                            15,
                            11,
                            8,
                            6,
                            6,
                            14,
                            12,
                            13,
                            5,
                            14,
                            13,
                            13,
                            7,
                            5,
                            15,
                            5,
                            8,
                            11,
                            14,
                            14,
                            6,
                            14,
                            6,
                            9,
                            12,
                            9,
                            12,
                            5,
                            15,
                            8,
                            8,
                            5,
                            12,
                            9,
                            12,
                            5,
                            14,
                            6,
                            8,
                            13,
                            6,
                            5,
                            15,
                            13,
                            11,
                            11,
                        ];
                },
                12: (t, e, r) => {
                    'use strict';
                    (e.sha1 = r(312)),
                        (e.sha224 = r(855)),
                        (e.sha256 = r(870)),
                        (e.sha384 = r(710)),
                        (e.sha512 = r(271));
                },
                312: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(929),
                        s = r(2),
                        o = n.rotl32,
                        a = n.sum32,
                        u = n.sum32_5,
                        h = s.ft_1,
                        l = i.BlockHash,
                        c = [1518500249, 1859775393, 2400959708, 3395469782];
                    function f() {
                        if (!(this instanceof f)) return new f();
                        l.call(this),
                            (this.h = [
                                1732584193,
                                4023233417,
                                2562383102,
                                271733878,
                                3285377520,
                            ]),
                            (this.W = new Array(80));
                    }
                    n.inherits(f, l),
                        (t.exports = f),
                        (f.blockSize = 512),
                        (f.outSize = 160),
                        (f.hmacStrength = 80),
                        (f.padLength = 64),
                        (f.prototype._update = function(t, e) {
                            for (var r = this.W, n = 0; n < 16; n++)
                                r[n] = t[e + n];
                            for (; n < r.length; n++)
                                r[n] = o(
                                    r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16],
                                    1
                                );
                            var i = this.h[0],
                                s = this.h[1],
                                l = this.h[2],
                                f = this.h[3],
                                d = this.h[4];
                            for (n = 0; n < r.length; n++) {
                                var p = ~~(n / 20),
                                    m = u(
                                        o(i, 5),
                                        h(p, s, l, f),
                                        d,
                                        r[n],
                                        c[p]
                                    );
                                (d = f),
                                    (f = l),
                                    (l = o(s, 30)),
                                    (s = i),
                                    (i = m);
                            }
                            (this.h[0] = a(this.h[0], i)),
                                (this.h[1] = a(this.h[1], s)),
                                (this.h[2] = a(this.h[2], l)),
                                (this.h[3] = a(this.h[3], f)),
                                (this.h[4] = a(this.h[4], d));
                        }),
                        (f.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h, 'big')
                                : n.split32(this.h, 'big');
                        });
                },
                855: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(870);
                    function s() {
                        if (!(this instanceof s)) return new s();
                        i.call(this),
                            (this.h = [
                                3238371032,
                                914150663,
                                812702999,
                                4144912697,
                                4290775857,
                                1750603025,
                                1694076839,
                                3204075428,
                            ]);
                    }
                    n.inherits(s, i),
                        (t.exports = s),
                        (s.blockSize = 512),
                        (s.outSize = 224),
                        (s.hmacStrength = 192),
                        (s.padLength = 64),
                        (s.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h.slice(0, 7), 'big')
                                : n.split32(this.h.slice(0, 7), 'big');
                        });
                },
                870: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(929),
                        s = r(2),
                        o = r(349),
                        a = n.sum32,
                        u = n.sum32_4,
                        h = n.sum32_5,
                        l = s.ch32,
                        c = s.maj32,
                        f = s.s0_256,
                        d = s.s1_256,
                        p = s.g0_256,
                        m = s.g1_256,
                        g = i.BlockHash,
                        y = [
                            1116352408,
                            1899447441,
                            3049323471,
                            3921009573,
                            961987163,
                            1508970993,
                            2453635748,
                            2870763221,
                            3624381080,
                            310598401,
                            607225278,
                            1426881987,
                            1925078388,
                            2162078206,
                            2614888103,
                            3248222580,
                            3835390401,
                            4022224774,
                            264347078,
                            604807628,
                            770255983,
                            1249150122,
                            1555081692,
                            1996064986,
                            2554220882,
                            2821834349,
                            2952996808,
                            3210313671,
                            3336571891,
                            3584528711,
                            113926993,
                            338241895,
                            666307205,
                            773529912,
                            1294757372,
                            1396182291,
                            1695183700,
                            1986661051,
                            2177026350,
                            2456956037,
                            2730485921,
                            2820302411,
                            3259730800,
                            3345764771,
                            3516065817,
                            3600352804,
                            4094571909,
                            275423344,
                            430227734,
                            506948616,
                            659060556,
                            883997877,
                            958139571,
                            1322822218,
                            1537002063,
                            1747873779,
                            1955562222,
                            2024104815,
                            2227730452,
                            2361852424,
                            2428436474,
                            2756734187,
                            3204031479,
                            3329325298,
                        ];
                    function v() {
                        if (!(this instanceof v)) return new v();
                        g.call(this),
                            (this.h = [
                                1779033703,
                                3144134277,
                                1013904242,
                                2773480762,
                                1359893119,
                                2600822924,
                                528734635,
                                1541459225,
                            ]),
                            (this.k = y),
                            (this.W = new Array(64));
                    }
                    n.inherits(v, g),
                        (t.exports = v),
                        (v.blockSize = 512),
                        (v.outSize = 256),
                        (v.hmacStrength = 192),
                        (v.padLength = 64),
                        (v.prototype._update = function(t, e) {
                            for (var r = this.W, n = 0; n < 16; n++)
                                r[n] = t[e + n];
                            for (; n < r.length; n++)
                                r[n] = u(
                                    m(r[n - 2]),
                                    r[n - 7],
                                    p(r[n - 15]),
                                    r[n - 16]
                                );
                            var i = this.h[0],
                                s = this.h[1],
                                g = this.h[2],
                                y = this.h[3],
                                v = this.h[4],
                                w = this.h[5],
                                b = this.h[6],
                                M = this.h[7];
                            for (
                                o(this.k.length === r.length), n = 0;
                                n < r.length;
                                n++
                            ) {
                                var E = h(M, d(v), l(v, w, b), this.k[n], r[n]),
                                    _ = a(f(i), c(i, s, g));
                                (M = b),
                                    (b = w),
                                    (w = v),
                                    (v = a(y, E)),
                                    (y = g),
                                    (g = s),
                                    (s = i),
                                    (i = a(E, _));
                            }
                            (this.h[0] = a(this.h[0], i)),
                                (this.h[1] = a(this.h[1], s)),
                                (this.h[2] = a(this.h[2], g)),
                                (this.h[3] = a(this.h[3], y)),
                                (this.h[4] = a(this.h[4], v)),
                                (this.h[5] = a(this.h[5], w)),
                                (this.h[6] = a(this.h[6], b)),
                                (this.h[7] = a(this.h[7], M));
                        }),
                        (v.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h, 'big')
                                : n.split32(this.h, 'big');
                        });
                },
                710: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(271);
                    function s() {
                        if (!(this instanceof s)) return new s();
                        i.call(this),
                            (this.h = [
                                3418070365,
                                3238371032,
                                1654270250,
                                914150663,
                                2438529370,
                                812702999,
                                355462360,
                                4144912697,
                                1731405415,
                                4290775857,
                                2394180231,
                                1750603025,
                                3675008525,
                                1694076839,
                                1203062813,
                                3204075428,
                            ]);
                    }
                    n.inherits(s, i),
                        (t.exports = s),
                        (s.blockSize = 1024),
                        (s.outSize = 384),
                        (s.hmacStrength = 192),
                        (s.padLength = 128),
                        (s.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h.slice(0, 12), 'big')
                                : n.split32(this.h.slice(0, 12), 'big');
                        });
                },
                271: (t, e, r) => {
                    'use strict';
                    var n = r(679),
                        i = r(929),
                        s = r(349),
                        o = n.rotr64_hi,
                        a = n.rotr64_lo,
                        u = n.shr64_hi,
                        h = n.shr64_lo,
                        l = n.sum64,
                        c = n.sum64_hi,
                        f = n.sum64_lo,
                        d = n.sum64_4_hi,
                        p = n.sum64_4_lo,
                        m = n.sum64_5_hi,
                        g = n.sum64_5_lo,
                        y = i.BlockHash,
                        v = [
                            1116352408,
                            3609767458,
                            1899447441,
                            602891725,
                            3049323471,
                            3964484399,
                            3921009573,
                            2173295548,
                            961987163,
                            4081628472,
                            1508970993,
                            3053834265,
                            2453635748,
                            2937671579,
                            2870763221,
                            3664609560,
                            3624381080,
                            2734883394,
                            310598401,
                            1164996542,
                            607225278,
                            1323610764,
                            1426881987,
                            3590304994,
                            1925078388,
                            4068182383,
                            2162078206,
                            991336113,
                            2614888103,
                            633803317,
                            3248222580,
                            3479774868,
                            3835390401,
                            2666613458,
                            4022224774,
                            944711139,
                            264347078,
                            2341262773,
                            604807628,
                            2007800933,
                            770255983,
                            1495990901,
                            1249150122,
                            1856431235,
                            1555081692,
                            3175218132,
                            1996064986,
                            2198950837,
                            2554220882,
                            3999719339,
                            2821834349,
                            766784016,
                            2952996808,
                            2566594879,
                            3210313671,
                            3203337956,
                            3336571891,
                            1034457026,
                            3584528711,
                            2466948901,
                            113926993,
                            3758326383,
                            338241895,
                            168717936,
                            666307205,
                            1188179964,
                            773529912,
                            1546045734,
                            1294757372,
                            1522805485,
                            1396182291,
                            2643833823,
                            1695183700,
                            2343527390,
                            1986661051,
                            1014477480,
                            2177026350,
                            1206759142,
                            2456956037,
                            344077627,
                            2730485921,
                            1290863460,
                            2820302411,
                            3158454273,
                            3259730800,
                            3505952657,
                            3345764771,
                            106217008,
                            3516065817,
                            3606008344,
                            3600352804,
                            1432725776,
                            4094571909,
                            1467031594,
                            275423344,
                            851169720,
                            430227734,
                            3100823752,
                            506948616,
                            1363258195,
                            659060556,
                            3750685593,
                            883997877,
                            3785050280,
                            958139571,
                            3318307427,
                            1322822218,
                            3812723403,
                            1537002063,
                            2003034995,
                            1747873779,
                            3602036899,
                            1955562222,
                            1575990012,
                            2024104815,
                            1125592928,
                            2227730452,
                            2716904306,
                            2361852424,
                            442776044,
                            2428436474,
                            593698344,
                            2756734187,
                            3733110249,
                            3204031479,
                            2999351573,
                            3329325298,
                            3815920427,
                            3391569614,
                            3928383900,
                            3515267271,
                            566280711,
                            3940187606,
                            3454069534,
                            4118630271,
                            4000239992,
                            116418474,
                            1914138554,
                            174292421,
                            2731055270,
                            289380356,
                            3203993006,
                            460393269,
                            320620315,
                            685471733,
                            587496836,
                            852142971,
                            1086792851,
                            1017036298,
                            365543100,
                            1126000580,
                            2618297676,
                            1288033470,
                            3409855158,
                            1501505948,
                            4234509866,
                            1607167915,
                            987167468,
                            1816402316,
                            1246189591,
                        ];
                    function w() {
                        if (!(this instanceof w)) return new w();
                        y.call(this),
                            (this.h = [
                                1779033703,
                                4089235720,
                                3144134277,
                                2227873595,
                                1013904242,
                                4271175723,
                                2773480762,
                                1595750129,
                                1359893119,
                                2917565137,
                                2600822924,
                                725511199,
                                528734635,
                                4215389547,
                                1541459225,
                                327033209,
                            ]),
                            (this.k = v),
                            (this.W = new Array(160));
                    }
                    function b(t, e, r, n, i) {
                        var s = (t & r) ^ (~t & i);
                        return s < 0 && (s += 4294967296), s;
                    }
                    function M(t, e, r, n, i, s) {
                        var o = (e & n) ^ (~e & s);
                        return o < 0 && (o += 4294967296), o;
                    }
                    function E(t, e, r, n, i) {
                        var s = (t & r) ^ (t & i) ^ (r & i);
                        return s < 0 && (s += 4294967296), s;
                    }
                    function _(t, e, r, n, i, s) {
                        var o = (e & n) ^ (e & s) ^ (n & s);
                        return o < 0 && (o += 4294967296), o;
                    }
                    function A(t, e) {
                        var r = o(t, e, 28) ^ o(e, t, 2) ^ o(e, t, 7);
                        return r < 0 && (r += 4294967296), r;
                    }
                    function N(t, e) {
                        var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
                        return r < 0 && (r += 4294967296), r;
                    }
                    function O(t, e) {
                        var r = a(t, e, 14) ^ a(t, e, 18) ^ a(e, t, 9);
                        return r < 0 && (r += 4294967296), r;
                    }
                    function S(t, e) {
                        var r = o(t, e, 1) ^ o(t, e, 8) ^ u(t, e, 7);
                        return r < 0 && (r += 4294967296), r;
                    }
                    function x(t, e) {
                        var r = a(t, e, 1) ^ a(t, e, 8) ^ h(t, e, 7);
                        return r < 0 && (r += 4294967296), r;
                    }
                    function P(t, e) {
                        var r = a(t, e, 19) ^ a(e, t, 29) ^ h(t, e, 6);
                        return r < 0 && (r += 4294967296), r;
                    }
                    n.inherits(w, y),
                        (t.exports = w),
                        (w.blockSize = 1024),
                        (w.outSize = 512),
                        (w.hmacStrength = 192),
                        (w.padLength = 128),
                        (w.prototype._prepareBlock = function(t, e) {
                            for (var r = this.W, n = 0; n < 32; n++)
                                r[n] = t[e + n];
                            for (; n < r.length; n += 2) {
                                var i =
                                        ((g = r[n - 4]),
                                        (y = r[n - 3]),
                                        (v = void 0),
                                        (v =
                                            o(g, y, 19) ^
                                            o(y, g, 29) ^
                                            u(g, y, 6)) < 0 &&
                                            (v += 4294967296),
                                        v),
                                    s = P(r[n - 4], r[n - 3]),
                                    a = r[n - 14],
                                    h = r[n - 13],
                                    l = S(r[n - 30], r[n - 29]),
                                    c = x(r[n - 30], r[n - 29]),
                                    f = r[n - 32],
                                    m = r[n - 31];
                                (r[n] = d(i, s, a, h, l, c, f, m)),
                                    (r[n + 1] = p(i, s, a, h, l, c, f, m));
                            }
                            var g, y, v;
                        }),
                        (w.prototype._update = function(t, e) {
                            this._prepareBlock(t, e);
                            var r,
                                n,
                                i,
                                a = this.W,
                                u = this.h[0],
                                h = this.h[1],
                                d = this.h[2],
                                p = this.h[3],
                                y = this.h[4],
                                v = this.h[5],
                                w = this.h[6],
                                S = this.h[7],
                                x = this.h[8],
                                P = this.h[9],
                                T = this.h[10],
                                R = this.h[11],
                                k = this.h[12],
                                I = this.h[13],
                                B = this.h[14],
                                C = this.h[15];
                            s(this.k.length === a.length);
                            for (var L = 0; L < a.length; L += 2) {
                                var F = B,
                                    U = C,
                                    D =
                                        ((i = void 0),
                                        (i =
                                            o((r = x), (n = P), 14) ^
                                            o(r, n, 18) ^
                                            o(n, r, 9)) < 0 &&
                                            (i += 4294967296),
                                        i),
                                    j = O(x, P),
                                    z = b(x, 0, T, 0, k),
                                    G = M(0, P, 0, R, 0, I),
                                    H = this.k[L],
                                    $ = this.k[L + 1],
                                    V = a[L],
                                    q = a[L + 1],
                                    W = m(F, U, D, j, z, G, H, $, V, q),
                                    Z = g(F, U, D, j, z, G, H, $, V, q);
                                (F = A(u, h)),
                                    (U = N(u, h)),
                                    (D = E(u, 0, d, 0, y)),
                                    (j = _(0, h, 0, p, 0, v));
                                var J = c(F, U, D, j),
                                    X = f(F, U, D, j);
                                (B = k),
                                    (C = I),
                                    (k = T),
                                    (I = R),
                                    (T = x),
                                    (R = P),
                                    (x = c(w, S, W, Z)),
                                    (P = f(S, S, W, Z)),
                                    (w = y),
                                    (S = v),
                                    (y = d),
                                    (v = p),
                                    (d = u),
                                    (p = h),
                                    (u = c(W, Z, J, X)),
                                    (h = f(W, Z, J, X));
                            }
                            l(this.h, 0, u, h),
                                l(this.h, 2, d, p),
                                l(this.h, 4, y, v),
                                l(this.h, 6, w, S),
                                l(this.h, 8, x, P),
                                l(this.h, 10, T, R),
                                l(this.h, 12, k, I),
                                l(this.h, 14, B, C);
                        }),
                        (w.prototype._digest = function(t) {
                            return 'hex' === t
                                ? n.toHex32(this.h, 'big')
                                : n.split32(this.h, 'big');
                        });
                },
                2: (t, e, r) => {
                    'use strict';
                    var n = r(679).rotr32;
                    function i(t, e, r) {
                        return (t & e) ^ (~t & r);
                    }
                    function s(t, e, r) {
                        return (t & e) ^ (t & r) ^ (e & r);
                    }
                    function o(t, e, r) {
                        return t ^ e ^ r;
                    }
                    (e.ft_1 = function(t, e, r, n) {
                        return 0 === t
                            ? i(e, r, n)
                            : 1 === t || 3 === t
                            ? o(e, r, n)
                            : 2 === t
                            ? s(e, r, n)
                            : void 0;
                    }),
                        (e.ch32 = i),
                        (e.maj32 = s),
                        (e.p32 = o),
                        (e.s0_256 = function(t) {
                            return n(t, 2) ^ n(t, 13) ^ n(t, 22);
                        }),
                        (e.s1_256 = function(t) {
                            return n(t, 6) ^ n(t, 11) ^ n(t, 25);
                        }),
                        (e.g0_256 = function(t) {
                            return n(t, 7) ^ n(t, 18) ^ (t >>> 3);
                        }),
                        (e.g1_256 = function(t) {
                            return n(t, 17) ^ n(t, 19) ^ (t >>> 10);
                        });
                },
                679: (t, e, r) => {
                    'use strict';
                    var n = r(349),
                        i = r(698);
                    function s(t) {
                        return (
                            ((t >>> 24) |
                                ((t >>> 8) & 65280) |
                                ((t << 8) & 16711680) |
                                ((255 & t) << 24)) >>>
                            0
                        );
                    }
                    function o(t) {
                        return 1 === t.length ? '0' + t : t;
                    }
                    function a(t) {
                        return 7 === t.length
                            ? '0' + t
                            : 6 === t.length
                            ? '00' + t
                            : 5 === t.length
                            ? '000' + t
                            : 4 === t.length
                            ? '0000' + t
                            : 3 === t.length
                            ? '00000' + t
                            : 2 === t.length
                            ? '000000' + t
                            : 1 === t.length
                            ? '0000000' + t
                            : t;
                    }
                    (e.inherits = i),
                        (e.toArray = function(t, e) {
                            if (Array.isArray(t)) return t.slice();
                            if (!t) return [];
                            var r = [];
                            if ('string' == typeof t)
                                if (e) {
                                    if ('hex' === e)
                                        for (
                                            (t = t.replace(/[^a-z0-9]+/gi, ''))
                                                .length %
                                                2 !=
                                                0 && (t = '0' + t),
                                                n = 0;
                                            n < t.length;
                                            n += 2
                                        )
                                            r.push(
                                                parseInt(t[n] + t[n + 1], 16)
                                            );
                                } else
                                    for (var n = 0; n < t.length; n++) {
                                        var i = t.charCodeAt(n),
                                            s = i >> 8,
                                            o = 255 & i;
                                        s ? r.push(s, o) : r.push(o);
                                    }
                            else for (n = 0; n < t.length; n++) r[n] = 0 | t[n];
                            return r;
                        }),
                        (e.toHex = function(t) {
                            for (var e = '', r = 0; r < t.length; r++)
                                e += o(t[r].toString(16));
                            return e;
                        }),
                        (e.htonl = s),
                        (e.toHex32 = function(t, e) {
                            for (var r = '', n = 0; n < t.length; n++) {
                                var i = t[n];
                                'little' === e && (i = s(i)),
                                    (r += a(i.toString(16)));
                            }
                            return r;
                        }),
                        (e.zero2 = o),
                        (e.zero8 = a),
                        (e.join32 = function(t, e, r, i) {
                            var s = r - e;
                            n(s % 4 == 0);
                            for (
                                var o = new Array(s / 4), a = 0, u = e;
                                a < o.length;
                                a++, u += 4
                            ) {
                                var h;
                                (h =
                                    'big' === i
                                        ? (t[u] << 24) |
                                          (t[u + 1] << 16) |
                                          (t[u + 2] << 8) |
                                          t[u + 3]
                                        : (t[u + 3] << 24) |
                                          (t[u + 2] << 16) |
                                          (t[u + 1] << 8) |
                                          t[u]),
                                    (o[a] = h >>> 0);
                            }
                            return o;
                        }),
                        (e.split32 = function(t, e) {
                            for (
                                var r = new Array(4 * t.length), n = 0, i = 0;
                                n < t.length;
                                n++, i += 4
                            ) {
                                var s = t[n];
                                'big' === e
                                    ? ((r[i] = s >>> 24),
                                      (r[i + 1] = (s >>> 16) & 255),
                                      (r[i + 2] = (s >>> 8) & 255),
                                      (r[i + 3] = 255 & s))
                                    : ((r[i + 3] = s >>> 24),
                                      (r[i + 2] = (s >>> 16) & 255),
                                      (r[i + 1] = (s >>> 8) & 255),
                                      (r[i] = 255 & s));
                            }
                            return r;
                        }),
                        (e.rotr32 = function(t, e) {
                            return (t >>> e) | (t << (32 - e));
                        }),
                        (e.rotl32 = function(t, e) {
                            return (t << e) | (t >>> (32 - e));
                        }),
                        (e.sum32 = function(t, e) {
                            return (t + e) >>> 0;
                        }),
                        (e.sum32_3 = function(t, e, r) {
                            return (t + e + r) >>> 0;
                        }),
                        (e.sum32_4 = function(t, e, r, n) {
                            return (t + e + r + n) >>> 0;
                        }),
                        (e.sum32_5 = function(t, e, r, n, i) {
                            return (t + e + r + n + i) >>> 0;
                        }),
                        (e.sum64 = function(t, e, r, n) {
                            var i = t[e],
                                s = (n + t[e + 1]) >>> 0,
                                o = (s < n ? 1 : 0) + r + i;
                            (t[e] = o >>> 0), (t[e + 1] = s);
                        }),
                        (e.sum64_hi = function(t, e, r, n) {
                            return (((e + n) >>> 0 < e ? 1 : 0) + t + r) >>> 0;
                        }),
                        (e.sum64_lo = function(t, e, r, n) {
                            return (e + n) >>> 0;
                        }),
                        (e.sum64_4_hi = function(t, e, r, n, i, s, o, a) {
                            var u = 0,
                                h = e;
                            return (
                                (u += (h = (h + n) >>> 0) < e ? 1 : 0),
                                (u += (h = (h + s) >>> 0) < s ? 1 : 0),
                                (t +
                                    r +
                                    i +
                                    o +
                                    (u += (h = (h + a) >>> 0) < a ? 1 : 0)) >>>
                                    0
                            );
                        }),
                        (e.sum64_4_lo = function(t, e, r, n, i, s, o, a) {
                            return (e + n + s + a) >>> 0;
                        }),
                        (e.sum64_5_hi = function(t, e, r, n, i, s, o, a, u, h) {
                            var l = 0,
                                c = e;
                            return (
                                (l += (c = (c + n) >>> 0) < e ? 1 : 0),
                                (l += (c = (c + s) >>> 0) < s ? 1 : 0),
                                (l += (c = (c + a) >>> 0) < a ? 1 : 0),
                                (t +
                                    r +
                                    i +
                                    o +
                                    u +
                                    (l += (c = (c + h) >>> 0) < h ? 1 : 0)) >>>
                                    0
                            );
                        }),
                        (e.sum64_5_lo = function(t, e, r, n, i, s, o, a, u, h) {
                            return (e + n + s + a + h) >>> 0;
                        }),
                        (e.rotr64_hi = function(t, e, r) {
                            return ((e << (32 - r)) | (t >>> r)) >>> 0;
                        }),
                        (e.rotr64_lo = function(t, e, r) {
                            return ((t << (32 - r)) | (e >>> r)) >>> 0;
                        }),
                        (e.shr64_hi = function(t, e, r) {
                            return t >>> r;
                        }),
                        (e.shr64_lo = function(t, e, r) {
                            return ((t << (32 - r)) | (e >>> r)) >>> 0;
                        });
                },
                360: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            keccak256: () => p,
                            pack: () => d,
                            sha256: () => m,
                        });
                    var n = r(181),
                        i = r(905),
                        s = r(234),
                        o = r(600),
                        a = r(143);
                    const u = new RegExp('^bytes([0-9]+)$'),
                        h = new RegExp('^(u?int)([0-9]*)$'),
                        l = new RegExp('^(.*)\\[([0-9]*)\\]$'),
                        c =
                            '0000000000000000000000000000000000000000000000000000000000000000';
                    function f(t, e, r) {
                        switch (t) {
                            case 'address':
                                return r
                                    ? (0, i.zeroPad)(e, 32)
                                    : (0, i.arrayify)(e);
                            case 'string':
                                return (0, a.YW)(e);
                            case 'bytes':
                                return (0, i.arrayify)(e);
                            case 'bool':
                                return (
                                    (e = e ? '0x01' : '0x00'),
                                    r
                                        ? (0, i.zeroPad)(e, 32)
                                        : (0, i.arrayify)(e)
                                );
                        }
                        let s = t.match(h);
                        if (s) {
                            let o = parseInt(s[2] || '256');
                            if (
                                (s[2] && String(o) !== s[2]) ||
                                o % 8 != 0 ||
                                0 === o ||
                                o > 256
                            )
                                throw new Error('invalid number type - ' + t);
                            return (
                                r && (o = 256),
                                (e = n.gH.from(e).toTwos(o)),
                                (0, i.zeroPad)(e, o / 8)
                            );
                        }
                        if (((s = t.match(u)), s)) {
                            const n = parseInt(s[1]);
                            if (String(n) !== s[1] || 0 === n || n > 32)
                                throw new Error('invalid bytes type - ' + t);
                            if ((0, i.arrayify)(e).byteLength !== n)
                                throw new Error('invalid value for ' + t);
                            return r
                                ? (0, i.arrayify)((e + c).substring(0, 66))
                                : e;
                        }
                        if (((s = t.match(l)), s && Array.isArray(e))) {
                            const r = s[1];
                            if (parseInt(s[2] || String(e.length)) != e.length)
                                throw new Error('invalid value for ' + t);
                            const n = [];
                            return (
                                e.forEach(function(t) {
                                    n.push(f(r, t, !0));
                                }),
                                (0, i.concat)(n)
                            );
                        }
                        throw new Error('invalid type - ' + t);
                    }
                    function d(t, e) {
                        if (t.length != e.length)
                            throw new Error('type/value count mismatch');
                        const r = [];
                        return (
                            t.forEach(function(t, n) {
                                r.push(f(t, e[n]));
                            }),
                            (0, i.hexlify)((0, i.concat)(r))
                        );
                    }
                    function p(t, e) {
                        return (0, s.S)(d(t, e));
                    }
                    function m(t, e) {
                        return (0, o.sha256)(d(t, e));
                    }
                },
                143: (t, e, r) => {
                    'use strict';
                    r.d(e, { YW: () => l, _v: () => c }), r(60);
                    var n = r(905);
                    const i = new (r(720).Logger)('strings/5.0.5');
                    var s, o, a;
                    function u(t, e, r, n, i) {
                        if (t === o.BAD_PREFIX || t === o.UNEXPECTED_CONTINUE) {
                            let t = 0;
                            for (
                                let n = e + 1;
                                n < r.length && r[n] >> 6 == 2;
                                n++
                            )
                                t++;
                            return t;
                        }
                        return t === o.OVERRUN ? r.length - e - 1 : 0;
                    }
                    ((a = s || (s = {})).current = ''),
                        (a.NFC = 'NFC'),
                        (a.NFD = 'NFD'),
                        (a.NFKC = 'NFKC'),
                        (a.NFKD = 'NFKD'),
                        (function(t) {
                            (t.UNEXPECTED_CONTINUE =
                                'unexpected continuation byte'),
                                (t.BAD_PREFIX = 'bad codepoint prefix'),
                                (t.OVERRUN = 'string overrun'),
                                (t.MISSING_CONTINUE =
                                    'missing continuation byte'),
                                (t.OUT_OF_RANGE = 'out of UTF-8 range'),
                                (t.UTF16_SURROGATE = 'UTF-16 surrogate'),
                                (t.OVERLONG = 'overlong representation');
                        })(o || (o = {}));
                    const h = Object.freeze({
                        error: function(t, e, r, n, s) {
                            return i.throwArgumentError(
                                `invalid codepoint at offset ${e}; ${t}`,
                                'bytes',
                                r
                            );
                        },
                        ignore: u,
                        replace: function(t, e, r, n, i) {
                            return t === o.OVERLONG
                                ? (n.push(i), 0)
                                : (n.push(65533), u(t, e, r));
                        },
                    });
                    function l(t, e = s.current) {
                        e != s.current &&
                            (i.checkNormalize(), (t = t.normalize(e)));
                        let r = [];
                        for (let e = 0; e < t.length; e++) {
                            const n = t.charCodeAt(e);
                            if (n < 128) r.push(n);
                            else if (n < 2048)
                                r.push((n >> 6) | 192), r.push((63 & n) | 128);
                            else if (55296 == (64512 & n)) {
                                e++;
                                const i = t.charCodeAt(e);
                                if (e >= t.length || 56320 != (64512 & i))
                                    throw new Error('invalid utf-8 string');
                                const s =
                                    65536 + ((1023 & n) << 10) + (1023 & i);
                                r.push((s >> 18) | 240),
                                    r.push(((s >> 12) & 63) | 128),
                                    r.push(((s >> 6) & 63) | 128),
                                    r.push((63 & s) | 128);
                            } else
                                r.push((n >> 12) | 224),
                                    r.push(((n >> 6) & 63) | 128),
                                    r.push((63 & n) | 128);
                        }
                        return (0, n.arrayify)(r);
                    }
                    function c(t, e) {
                        return (function(t, e) {
                            null == e && (e = h.error),
                                (t = (0, n.arrayify)(t));
                            const r = [];
                            let i = 0;
                            for (; i < t.length; ) {
                                const n = t[i++];
                                if (!(n >> 7)) {
                                    r.push(n);
                                    continue;
                                }
                                let s = null,
                                    a = null;
                                if (192 == (224 & n)) (s = 1), (a = 127);
                                else if (224 == (240 & n)) (s = 2), (a = 2047);
                                else {
                                    if (240 != (248 & n)) {
                                        i += e(
                                            128 == (192 & n)
                                                ? o.UNEXPECTED_CONTINUE
                                                : o.BAD_PREFIX,
                                            i - 1,
                                            t,
                                            r
                                        );
                                        continue;
                                    }
                                    (s = 3), (a = 65535);
                                }
                                if (i - 1 + s >= t.length) {
                                    i += e(o.OVERRUN, i - 1, t, r);
                                    continue;
                                }
                                let u = n & ((1 << (8 - s - 1)) - 1);
                                for (let n = 0; n < s; n++) {
                                    let n = t[i];
                                    if (128 != (192 & n)) {
                                        (i += e(o.MISSING_CONTINUE, i, t, r)),
                                            (u = null);
                                        break;
                                    }
                                    (u = (u << 6) | (63 & n)), i++;
                                }
                                null !== u &&
                                    (u > 1114111
                                        ? (i += e(
                                              o.OUT_OF_RANGE,
                                              i - 1 - s,
                                              t,
                                              r,
                                              u
                                          ))
                                        : u >= 55296 && u <= 57343
                                        ? (i += e(
                                              o.UTF16_SURROGATE,
                                              i - 1 - s,
                                              t,
                                              r,
                                              u
                                          ))
                                        : u <= a
                                        ? (i += e(
                                              o.OVERLONG,
                                              i - 1 - s,
                                              t,
                                              r,
                                              u
                                          ))
                                        : r.push(u));
                            }
                            return r;
                        })(t, e)
                            .map(t =>
                                t <= 65535
                                    ? String.fromCharCode(t)
                                    : ((t -= 65536),
                                      String.fromCharCode(
                                          55296 + ((t >> 10) & 1023),
                                          56320 + (1023 & t)
                                      ))
                            )
                            .join('');
                    }
                    function f(t, e) {
                        e ||
                            (e = function(t) {
                                return [parseInt(t, 16)];
                            });
                        let r = 0,
                            n = {};
                        return (
                            t.split(',').forEach(t => {
                                let i = t.split(':');
                                (r += parseInt(i[0], 16)), (n[r] = e(i[1]));
                            }),
                            n
                        );
                    }
                    function d(t) {
                        let e = 0;
                        return t.split(',').map(t => {
                            let r = t.split('-');
                            1 === r.length
                                ? (r[1] = '0')
                                : '' === r[1] && (r[1] = '1');
                            let n = e + parseInt(r[0], 16);
                            return (e = parseInt(r[1], 16)), { l: n, h: e };
                        });
                    }
                    d(
                        '221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d'
                    ),
                        'ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff'
                            .split(',')
                            .map(t => parseInt(t, 16)),
                        f(
                            'b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3'
                        ),
                        f(
                            '179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7'
                        ),
                        f(
                            'df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D',
                            function(t) {
                                if (t.length % 4 != 0)
                                    throw new Error('bad data');
                                let e = [];
                                for (let r = 0; r < t.length; r += 4)
                                    e.push(parseInt(t.substring(r, r + 4), 16));
                                return e;
                            }
                        ),
                        d(
                            '80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001'
                        );
                },
                594: function(t, e, r) {
                    var n;
                    !(function(i) {
                        'use strict';
                        var s,
                            o = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                            a = Math.ceil,
                            u = Math.floor,
                            h = '[BigNumber Error] ',
                            l =
                                h +
                                'Number primitive has more than 15 significant digits: ',
                            c = 1e14,
                            f = 14,
                            d = 9007199254740991,
                            p = [
                                1,
                                10,
                                100,
                                1e3,
                                1e4,
                                1e5,
                                1e6,
                                1e7,
                                1e8,
                                1e9,
                                1e10,
                                1e11,
                                1e12,
                                1e13,
                            ],
                            m = 1e7,
                            g = 1e9;
                        function y(t) {
                            var e = 0 | t;
                            return t > 0 || t === e ? e : e - 1;
                        }
                        function v(t) {
                            for (
                                var e, r, n = 1, i = t.length, s = t[0] + '';
                                n < i;

                            ) {
                                for (
                                    e = t[n++] + '', r = f - e.length;
                                    r--;
                                    e = '0' + e
                                );
                                s += e;
                            }
                            for (i = s.length; 48 === s.charCodeAt(--i); );
                            return s.slice(0, i + 1 || 1);
                        }
                        function w(t, e) {
                            var r,
                                n,
                                i = t.c,
                                s = e.c,
                                o = t.s,
                                a = e.s,
                                u = t.e,
                                h = e.e;
                            if (!o || !a) return null;
                            if (((r = i && !i[0]), (n = s && !s[0]), r || n))
                                return r ? (n ? 0 : -a) : o;
                            if (o != a) return o;
                            if (((r = o < 0), (n = u == h), !i || !s))
                                return n ? 0 : !i ^ r ? 1 : -1;
                            if (!n) return (u > h) ^ r ? 1 : -1;
                            for (
                                a = (u = i.length) < (h = s.length) ? u : h,
                                    o = 0;
                                o < a;
                                o++
                            )
                                if (i[o] != s[o])
                                    return (i[o] > s[o]) ^ r ? 1 : -1;
                            return u == h ? 0 : (u > h) ^ r ? 1 : -1;
                        }
                        function b(t, e, r, n) {
                            if (t < e || t > r || t !== u(t))
                                throw Error(
                                    h +
                                        (n || 'Argument') +
                                        ('number' == typeof t
                                            ? t < e || t > r
                                                ? ' out of range: '
                                                : ' not an integer: '
                                            : ' not a primitive number: ') +
                                        String(t)
                                );
                        }
                        function M(t) {
                            var e = t.c.length - 1;
                            return y(t.e / f) == e && t.c[e] % 2 != 0;
                        }
                        function E(t, e) {
                            return (
                                (t.length > 1
                                    ? t.charAt(0) + '.' + t.slice(1)
                                    : t) +
                                (e < 0 ? 'e' : 'e+') +
                                e
                            );
                        }
                        function _(t, e, r) {
                            var n, i;
                            if (e < 0) {
                                for (i = r + '.'; ++e; i += r);
                                t = i + t;
                            } else if (++e > (n = t.length)) {
                                for (i = r, e -= n; --e; i += r);
                                t += i;
                            } else
                                e < n && (t = t.slice(0, e) + '.' + t.slice(e));
                            return t;
                        }
                        (s = (function t(e) {
                            var r,
                                n,
                                i,
                                s,
                                A,
                                N,
                                O,
                                S,
                                x,
                                P,
                                T = (H.prototype = {
                                    constructor: H,
                                    toString: null,
                                    valueOf: null,
                                }),
                                R = new H(1),
                                k = 20,
                                I = 4,
                                B = -7,
                                C = 21,
                                L = -1e7,
                                F = 1e7,
                                U = !1,
                                D = 1,
                                j = 0,
                                z = {
                                    prefix: '',
                                    groupSize: 3,
                                    secondaryGroupSize: 0,
                                    groupSeparator: ',',
                                    decimalSeparator: '.',
                                    fractionGroupSize: 0,
                                    fractionGroupSeparator: ' ',
                                    suffix: '',
                                },
                                G = '0123456789abcdefghijklmnopqrstuvwxyz';
                            function H(t, e) {
                                var r,
                                    s,
                                    a,
                                    h,
                                    c,
                                    p,
                                    m,
                                    g,
                                    y = this;
                                if (!(y instanceof H)) return new H(t, e);
                                if (null == e) {
                                    if (t && !0 === t._isBigNumber)
                                        return (
                                            (y.s = t.s),
                                            void (!t.c || t.e > F
                                                ? (y.c = y.e = null)
                                                : t.e < L
                                                ? (y.c = [(y.e = 0)])
                                                : ((y.e = t.e),
                                                  (y.c = t.c.slice())))
                                        );
                                    if (
                                        (p = 'number' == typeof t) &&
                                        0 * t == 0
                                    ) {
                                        if (
                                            ((y.s =
                                                1 / t < 0 ? ((t = -t), -1) : 1),
                                            t === ~~t)
                                        ) {
                                            for (
                                                h = 0, c = t;
                                                c >= 10;
                                                c /= 10, h++
                                            );
                                            return void (h > F
                                                ? (y.c = y.e = null)
                                                : ((y.e = h), (y.c = [t])));
                                        }
                                        g = String(t);
                                    } else {
                                        if (!o.test((g = String(t))))
                                            return i(y, g, p);
                                        y.s =
                                            45 == g.charCodeAt(0)
                                                ? ((g = g.slice(1)), -1)
                                                : 1;
                                    }
                                    (h = g.indexOf('.')) > -1 &&
                                        (g = g.replace('.', '')),
                                        (c = g.search(/e/i)) > 0
                                            ? (h < 0 && (h = c),
                                              (h += +g.slice(c + 1)),
                                              (g = g.substring(0, c)))
                                            : h < 0 && (h = g.length);
                                } else {
                                    if ((b(e, 2, G.length, 'Base'), 10 == e))
                                        return W(
                                            (y = new H(t)),
                                            k + y.e + 1,
                                            I
                                        );
                                    if (
                                        ((g = String(t)),
                                        (p = 'number' == typeof t))
                                    ) {
                                        if (0 * t != 0) return i(y, g, p, e);
                                        if (
                                            ((y.s =
                                                1 / t < 0
                                                    ? ((g = g.slice(1)), -1)
                                                    : 1),
                                            H.DEBUG &&
                                                g.replace(/^0\.0*|\./, '')
                                                    .length > 15)
                                        )
                                            throw Error(l + t);
                                    } else
                                        y.s =
                                            45 === g.charCodeAt(0)
                                                ? ((g = g.slice(1)), -1)
                                                : 1;
                                    for (
                                        r = G.slice(0, e),
                                            h = c = 0,
                                            m = g.length;
                                        c < m;
                                        c++
                                    )
                                        if (r.indexOf((s = g.charAt(c))) < 0) {
                                            if ('.' == s) {
                                                if (c > h) {
                                                    h = m;
                                                    continue;
                                                }
                                            } else if (
                                                !a &&
                                                ((g == g.toUpperCase() &&
                                                    (g = g.toLowerCase())) ||
                                                    (g == g.toLowerCase() &&
                                                        (g = g.toUpperCase())))
                                            ) {
                                                (a = !0), (c = -1), (h = 0);
                                                continue;
                                            }
                                            return i(y, String(t), p, e);
                                        }
                                    (p = !1),
                                        (h = (g = n(g, e, 10, y.s)).indexOf(
                                            '.'
                                        )) > -1
                                            ? (g = g.replace('.', ''))
                                            : (h = g.length);
                                }
                                for (c = 0; 48 === g.charCodeAt(c); c++);
                                for (m = g.length; 48 === g.charCodeAt(--m); );
                                if ((g = g.slice(c, ++m))) {
                                    if (
                                        ((m -= c),
                                        p &&
                                            H.DEBUG &&
                                            m > 15 &&
                                            (t > d || t !== u(t)))
                                    )
                                        throw Error(l + y.s * t);
                                    if ((h = h - c - 1) > F) y.c = y.e = null;
                                    else if (h < L) y.c = [(y.e = 0)];
                                    else {
                                        if (
                                            ((y.e = h),
                                            (y.c = []),
                                            (c = (h + 1) % f),
                                            h < 0 && (c += f),
                                            c < m)
                                        ) {
                                            for (
                                                c && y.c.push(+g.slice(0, c)),
                                                    m -= f;
                                                c < m;

                                            )
                                                y.c.push(+g.slice(c, (c += f)));
                                            c = f - (g = g.slice(c)).length;
                                        } else c -= m;
                                        for (; c--; g += '0');
                                        y.c.push(+g);
                                    }
                                } else y.c = [(y.e = 0)];
                            }
                            function $(t, e, r, n) {
                                var i, s, o, a, u;
                                if ((null == r ? (r = I) : b(r, 0, 8), !t.c))
                                    return t.toString();
                                if (((i = t.c[0]), (o = t.e), null == e))
                                    (u = v(t.c)),
                                        (u =
                                            1 == n ||
                                            (2 == n && (o <= B || o >= C))
                                                ? E(u, o)
                                                : _(u, o, '0'));
                                else if (
                                    ((s = (t = W(new H(t), e, r)).e),
                                    (a = (u = v(t.c)).length),
                                    1 == n || (2 == n && (e <= s || s <= B)))
                                ) {
                                    for (; a < e; u += '0', a++);
                                    u = E(u, s);
                                } else if (
                                    ((e -= o), (u = _(u, s, '0')), s + 1 > a)
                                ) {
                                    if (--e > 0) for (u += '.'; e--; u += '0');
                                } else if ((e += s - a) > 0)
                                    for (
                                        s + 1 == a && (u += '.');
                                        e--;
                                        u += '0'
                                    );
                                return t.s < 0 && i ? '-' + u : u;
                            }
                            function V(t, e) {
                                for (
                                    var r, n = 1, i = new H(t[0]);
                                    n < t.length;
                                    n++
                                ) {
                                    if (!(r = new H(t[n])).s) {
                                        i = r;
                                        break;
                                    }
                                    e.call(i, r) && (i = r);
                                }
                                return i;
                            }
                            function q(t, e, r) {
                                for (var n = 1, i = e.length; !e[--i]; e.pop());
                                for (i = e[0]; i >= 10; i /= 10, n++);
                                return (
                                    (r = n + r * f - 1) > F
                                        ? (t.c = t.e = null)
                                        : r < L
                                        ? (t.c = [(t.e = 0)])
                                        : ((t.e = r), (t.c = e)),
                                    t
                                );
                            }
                            function W(t, e, r, n) {
                                var i,
                                    s,
                                    o,
                                    h,
                                    l,
                                    d,
                                    m,
                                    g = t.c,
                                    y = p;
                                if (g) {
                                    t: {
                                        for (
                                            i = 1, h = g[0];
                                            h >= 10;
                                            h /= 10, i++
                                        );
                                        if ((s = e - i) < 0)
                                            (s += f),
                                                (o = e),
                                                (m =
                                                    ((l = g[(d = 0)]) /
                                                        y[i - o - 1]) %
                                                        10 |
                                                    0);
                                        else if (
                                            (d = a((s + 1) / f)) >= g.length
                                        ) {
                                            if (!n) break t;
                                            for (; g.length <= d; g.push(0));
                                            (l = m = 0),
                                                (i = 1),
                                                (o = (s %= f) - f + 1);
                                        } else {
                                            for (
                                                l = h = g[d], i = 1;
                                                h >= 10;
                                                h /= 10, i++
                                            );
                                            m =
                                                (o = (s %= f) - f + i) < 0
                                                    ? 0
                                                    : (l / y[i - o - 1]) % 10 |
                                                      0;
                                        }
                                        if (
                                            ((n =
                                                n ||
                                                e < 0 ||
                                                null != g[d + 1] ||
                                                (o < 0 ? l : l % y[i - o - 1])),
                                            (n =
                                                r < 4
                                                    ? (m || n) &&
                                                      (0 == r ||
                                                          r ==
                                                              (t.s < 0 ? 3 : 2))
                                                    : m > 5 ||
                                                      (5 == m &&
                                                          (4 == r ||
                                                              n ||
                                                              (6 == r &&
                                                                  (s > 0
                                                                      ? o > 0
                                                                          ? l /
                                                                            y[
                                                                                i -
                                                                                    o
                                                                            ]
                                                                          : 0
                                                                      : g[
                                                                            d -
                                                                                1
                                                                        ]) %
                                                                      10 &
                                                                      1) ||
                                                              r ==
                                                                  (t.s < 0
                                                                      ? 8
                                                                      : 7)))),
                                            e < 1 || !g[0])
                                        )
                                            return (
                                                (g.length = 0),
                                                n
                                                    ? ((e -= t.e + 1),
                                                      (g[0] =
                                                          y[(f - (e % f)) % f]),
                                                      (t.e = -e || 0))
                                                    : (g[0] = t.e = 0),
                                                t
                                            );
                                        if (
                                            (0 == s
                                                ? ((g.length = d), (h = 1), d--)
                                                : ((g.length = d + 1),
                                                  (h = y[f - s]),
                                                  (g[d] =
                                                      o > 0
                                                          ? u(
                                                                (l / y[i - o]) %
                                                                    y[o]
                                                            ) * h
                                                          : 0)),
                                            n)
                                        )
                                            for (;;) {
                                                if (0 == d) {
                                                    for (
                                                        s = 1, o = g[0];
                                                        o >= 10;
                                                        o /= 10, s++
                                                    );
                                                    for (
                                                        o = g[0] += h, h = 1;
                                                        o >= 10;
                                                        o /= 10, h++
                                                    );
                                                    s != h &&
                                                        (t.e++,
                                                        g[0] == c &&
                                                            (g[0] = 1));
                                                    break;
                                                }
                                                if (((g[d] += h), g[d] != c))
                                                    break;
                                                (g[d--] = 0), (h = 1);
                                            }
                                        for (
                                            s = g.length;
                                            0 === g[--s];
                                            g.pop()
                                        );
                                    }
                                    t.e > F
                                        ? (t.c = t.e = null)
                                        : t.e < L && (t.c = [(t.e = 0)]);
                                }
                                return t;
                            }
                            function Z(t) {
                                var e,
                                    r = t.e;
                                return null === r
                                    ? t.toString()
                                    : ((e = v(t.c)),
                                      (e =
                                          r <= B || r >= C
                                              ? E(e, r)
                                              : _(e, r, '0')),
                                      t.s < 0 ? '-' + e : e);
                            }
                            return (
                                (H.clone = t),
                                (H.ROUND_UP = 0),
                                (H.ROUND_DOWN = 1),
                                (H.ROUND_CEIL = 2),
                                (H.ROUND_FLOOR = 3),
                                (H.ROUND_HALF_UP = 4),
                                (H.ROUND_HALF_DOWN = 5),
                                (H.ROUND_HALF_EVEN = 6),
                                (H.ROUND_HALF_CEIL = 7),
                                (H.ROUND_HALF_FLOOR = 8),
                                (H.EUCLID = 9),
                                (H.config = H.set = function(t) {
                                    var e, r;
                                    if (null != t) {
                                        if ('object' != typeof t)
                                            throw Error(
                                                h + 'Object expected: ' + t
                                            );
                                        if (
                                            (t.hasOwnProperty(
                                                (e = 'DECIMAL_PLACES')
                                            ) &&
                                                (b((r = t[e]), 0, g, e),
                                                (k = r)),
                                            t.hasOwnProperty(
                                                (e = 'ROUNDING_MODE')
                                            ) &&
                                                (b((r = t[e]), 0, 8, e),
                                                (I = r)),
                                            t.hasOwnProperty(
                                                (e = 'EXPONENTIAL_AT')
                                            ) &&
                                                ((r = t[e]) && r.pop
                                                    ? (b(r[0], -g, 0, e),
                                                      b(r[1], 0, g, e),
                                                      (B = r[0]),
                                                      (C = r[1]))
                                                    : (b(r, -g, g, e),
                                                      (B = -(C =
                                                          r < 0 ? -r : r)))),
                                            t.hasOwnProperty((e = 'RANGE')))
                                        )
                                            if ((r = t[e]) && r.pop)
                                                b(r[0], -g, -1, e),
                                                    b(r[1], 1, g, e),
                                                    (L = r[0]),
                                                    (F = r[1]);
                                            else {
                                                if ((b(r, -g, g, e), !r))
                                                    throw Error(
                                                        h +
                                                            e +
                                                            ' cannot be zero: ' +
                                                            r
                                                    );
                                                L = -(F = r < 0 ? -r : r);
                                            }
                                        if (t.hasOwnProperty((e = 'CRYPTO'))) {
                                            if ((r = t[e]) !== !!r)
                                                throw Error(
                                                    h +
                                                        e +
                                                        ' not true or false: ' +
                                                        r
                                                );
                                            if (r) {
                                                if (
                                                    'undefined' ==
                                                        typeof crypto ||
                                                    !crypto ||
                                                    (!crypto.getRandomValues &&
                                                        !crypto.randomBytes)
                                                )
                                                    throw ((U = !r),
                                                    Error(
                                                        h + 'crypto unavailable'
                                                    ));
                                                U = r;
                                            } else U = r;
                                        }
                                        if (
                                            (t.hasOwnProperty(
                                                (e = 'MODULO_MODE')
                                            ) &&
                                                (b((r = t[e]), 0, 9, e),
                                                (D = r)),
                                            t.hasOwnProperty(
                                                (e = 'POW_PRECISION')
                                            ) &&
                                                (b((r = t[e]), 0, g, e),
                                                (j = r)),
                                            t.hasOwnProperty((e = 'FORMAT')))
                                        ) {
                                            if ('object' != typeof (r = t[e]))
                                                throw Error(
                                                    h +
                                                        e +
                                                        ' not an object: ' +
                                                        r
                                                );
                                            z = r;
                                        }
                                        if (
                                            t.hasOwnProperty((e = 'ALPHABET'))
                                        ) {
                                            if (
                                                'string' != typeof (r = t[e]) ||
                                                /^.$|[+-.\s]|(.).*\1/.test(r)
                                            )
                                                throw Error(
                                                    h + e + ' invalid: ' + r
                                                );
                                            G = r;
                                        }
                                    }
                                    return {
                                        DECIMAL_PLACES: k,
                                        ROUNDING_MODE: I,
                                        EXPONENTIAL_AT: [B, C],
                                        RANGE: [L, F],
                                        CRYPTO: U,
                                        MODULO_MODE: D,
                                        POW_PRECISION: j,
                                        FORMAT: z,
                                        ALPHABET: G,
                                    };
                                }),
                                (H.isBigNumber = function(t) {
                                    if (!t || !0 !== t._isBigNumber) return !1;
                                    if (!H.DEBUG) return !0;
                                    var e,
                                        r,
                                        n = t.c,
                                        i = t.e,
                                        s = t.s;
                                    t: if (
                                        '[object Array]' == {}.toString.call(n)
                                    ) {
                                        if (
                                            (1 === s || -1 === s) &&
                                            i >= -g &&
                                            i <= g &&
                                            i === u(i)
                                        ) {
                                            if (0 === n[0]) {
                                                if (0 === i && 1 === n.length)
                                                    return !0;
                                                break t;
                                            }
                                            if (
                                                ((e = (i + 1) % f) < 1 &&
                                                    (e += f),
                                                String(n[0]).length == e)
                                            ) {
                                                for (e = 0; e < n.length; e++)
                                                    if (
                                                        (r = n[e]) < 0 ||
                                                        r >= c ||
                                                        r !== u(r)
                                                    )
                                                        break t;
                                                if (0 !== r) return !0;
                                            }
                                        }
                                    } else if (
                                        null === n &&
                                        null === i &&
                                        (null === s || 1 === s || -1 === s)
                                    )
                                        return !0;
                                    throw Error(h + 'Invalid BigNumber: ' + t);
                                }),
                                (H.maximum = H.max = function() {
                                    return V(arguments, T.lt);
                                }),
                                (H.minimum = H.min = function() {
                                    return V(arguments, T.gt);
                                }),
                                (H.random =
                                    ((s = 9007199254740992),
                                    (A =
                                        (Math.random() * s) & 2097151
                                            ? function() {
                                                  return u(Math.random() * s);
                                              }
                                            : function() {
                                                  return (
                                                      8388608 *
                                                          ((1073741824 *
                                                              Math.random()) |
                                                              0) +
                                                      ((8388608 *
                                                          Math.random()) |
                                                          0)
                                                  );
                                              }),
                                    function(t) {
                                        var e,
                                            r,
                                            n,
                                            i,
                                            s,
                                            o = 0,
                                            l = [],
                                            c = new H(R);
                                        if (
                                            (null == t ? (t = k) : b(t, 0, g),
                                            (i = a(t / f)),
                                            U)
                                        )
                                            if (crypto.getRandomValues) {
                                                for (
                                                    e = crypto.getRandomValues(
                                                        new Uint32Array(
                                                            (i *= 2)
                                                        )
                                                    );
                                                    o < i;

                                                )
                                                    (s =
                                                        131072 * e[o] +
                                                        (e[o + 1] >>> 11)) >=
                                                    9e15
                                                        ? ((r = crypto.getRandomValues(
                                                              new Uint32Array(2)
                                                          )),
                                                          (e[o] = r[0]),
                                                          (e[o + 1] = r[1]))
                                                        : (l.push(s % 1e14),
                                                          (o += 2));
                                                o = i / 2;
                                            } else {
                                                if (!crypto.randomBytes)
                                                    throw ((U = !1),
                                                    Error(
                                                        h + 'crypto unavailable'
                                                    ));
                                                for (
                                                    e = crypto.randomBytes(
                                                        (i *= 7)
                                                    );
                                                    o < i;

                                                )
                                                    (s =
                                                        281474976710656 *
                                                            (31 & e[o]) +
                                                        1099511627776 *
                                                            e[o + 1] +
                                                        4294967296 * e[o + 2] +
                                                        16777216 * e[o + 3] +
                                                        (e[o + 4] << 16) +
                                                        (e[o + 5] << 8) +
                                                        e[o + 6]) >= 9e15
                                                        ? crypto
                                                              .randomBytes(7)
                                                              .copy(e, o)
                                                        : (l.push(s % 1e14),
                                                          (o += 7));
                                                o = i / 7;
                                            }
                                        if (!U)
                                            for (; o < i; )
                                                (s = A()) < 9e15 &&
                                                    (l[o++] = s % 1e14);
                                        for (
                                            i = l[--o],
                                                t %= f,
                                                i &&
                                                    t &&
                                                    ((s = p[f - t]),
                                                    (l[o] = u(i / s) * s));
                                            0 === l[o];
                                            l.pop(), o--
                                        );
                                        if (o < 0) l = [(n = 0)];
                                        else {
                                            for (
                                                n = -1;
                                                0 === l[0];
                                                l.splice(0, 1), n -= f
                                            );
                                            for (
                                                o = 1, s = l[0];
                                                s >= 10;
                                                s /= 10, o++
                                            );
                                            o < f && (n -= f - o);
                                        }
                                        return (c.e = n), (c.c = l), c;
                                    })),
                                (H.sum = function() {
                                    for (
                                        var t = 1,
                                            e = arguments,
                                            r = new H(e[0]);
                                        t < e.length;

                                    )
                                        r = r.plus(e[t++]);
                                    return r;
                                }),
                                (n = (function() {
                                    var t = '0123456789';
                                    function e(t, e, r, n) {
                                        for (
                                            var i,
                                                s,
                                                o = [0],
                                                a = 0,
                                                u = t.length;
                                            a < u;

                                        ) {
                                            for (s = o.length; s--; o[s] *= e);
                                            for (
                                                o[0] += n.indexOf(
                                                    t.charAt(a++)
                                                ),
                                                    i = 0;
                                                i < o.length;
                                                i++
                                            )
                                                o[i] > r - 1 &&
                                                    (null == o[i + 1] &&
                                                        (o[i + 1] = 0),
                                                    (o[i + 1] +=
                                                        (o[i] / r) | 0),
                                                    (o[i] %= r));
                                        }
                                        return o.reverse();
                                    }
                                    return function(n, i, s, o, a) {
                                        var u,
                                            h,
                                            l,
                                            c,
                                            f,
                                            d,
                                            p,
                                            m,
                                            g = n.indexOf('.'),
                                            y = k,
                                            w = I;
                                        for (
                                            g >= 0 &&
                                                ((c = j),
                                                (j = 0),
                                                (n = n.replace('.', '')),
                                                (d = (m = new H(i)).pow(
                                                    n.length - g
                                                )),
                                                (j = c),
                                                (m.c = e(
                                                    _(v(d.c), d.e, '0'),
                                                    10,
                                                    s,
                                                    t
                                                )),
                                                (m.e = m.c.length)),
                                                l = c = (p = e(
                                                    n,
                                                    i,
                                                    s,
                                                    a
                                                        ? ((u = G), t)
                                                        : ((u = t), G)
                                                )).length;
                                            0 == p[--c];
                                            p.pop()
                                        );
                                        if (!p[0]) return u.charAt(0);
                                        if (
                                            (g < 0
                                                ? --l
                                                : ((d.c = p),
                                                  (d.e = l),
                                                  (d.s = o),
                                                  (p = (d = r(d, m, y, w, s))
                                                      .c),
                                                  (f = d.r),
                                                  (l = d.e)),
                                            (g = p[(h = l + y + 1)]),
                                            (c = s / 2),
                                            (f =
                                                f || h < 0 || null != p[h + 1]),
                                            (f =
                                                w < 4
                                                    ? (null != g || f) &&
                                                      (0 == w ||
                                                          w ==
                                                              (d.s < 0 ? 3 : 2))
                                                    : g > c ||
                                                      (g == c &&
                                                          (4 == w ||
                                                              f ||
                                                              (6 == w &&
                                                                  1 &
                                                                      p[
                                                                          h - 1
                                                                      ]) ||
                                                              w ==
                                                                  (d.s < 0
                                                                      ? 8
                                                                      : 7)))),
                                            h < 1 || !p[0])
                                        )
                                            n = f
                                                ? _(
                                                      u.charAt(1),
                                                      -y,
                                                      u.charAt(0)
                                                  )
                                                : u.charAt(0);
                                        else {
                                            if (((p.length = h), f))
                                                for (--s; ++p[--h] > s; )
                                                    (p[h] = 0),
                                                        h ||
                                                            (++l,
                                                            (p = [1].concat(
                                                                p
                                                            )));
                                            for (c = p.length; !p[--c]; );
                                            for (
                                                g = 0, n = '';
                                                g <= c;
                                                n += u.charAt(p[g++])
                                            );
                                            n = _(n, l, u.charAt(0));
                                        }
                                        return n;
                                    };
                                })()),
                                (r = (function() {
                                    function t(t, e, r) {
                                        var n,
                                            i,
                                            s,
                                            o,
                                            a = 0,
                                            u = t.length,
                                            h = e % m,
                                            l = (e / m) | 0;
                                        for (t = t.slice(); u--; )
                                            (a =
                                                (((i =
                                                    h * (s = t[u] % m) +
                                                    ((n =
                                                        l * s +
                                                        (o = (t[u] / m) | 0) *
                                                            h) %
                                                        m) *
                                                        m +
                                                    a) /
                                                    r) |
                                                    0) +
                                                ((n / m) | 0) +
                                                l * o),
                                                (t[u] = i % r);
                                        return a && (t = [a].concat(t)), t;
                                    }
                                    function e(t, e, r, n) {
                                        var i, s;
                                        if (r != n) s = r > n ? 1 : -1;
                                        else
                                            for (i = s = 0; i < r; i++)
                                                if (t[i] != e[i]) {
                                                    s = t[i] > e[i] ? 1 : -1;
                                                    break;
                                                }
                                        return s;
                                    }
                                    function r(t, e, r, n) {
                                        for (var i = 0; r--; )
                                            (t[r] -= i),
                                                (i = t[r] < e[r] ? 1 : 0),
                                                (t[r] = i * n + t[r] - e[r]);
                                        for (
                                            ;
                                            !t[0] && t.length > 1;
                                            t.splice(0, 1)
                                        );
                                    }
                                    return function(n, i, s, o, a) {
                                        var h,
                                            l,
                                            d,
                                            p,
                                            m,
                                            g,
                                            v,
                                            w,
                                            b,
                                            M,
                                            E,
                                            _,
                                            A,
                                            N,
                                            O,
                                            S,
                                            x,
                                            P = n.s == i.s ? 1 : -1,
                                            T = n.c,
                                            R = i.c;
                                        if (!(T && T[0] && R && R[0]))
                                            return new H(
                                                n.s &&
                                                i.s &&
                                                (T ? !R || T[0] != R[0] : R)
                                                    ? (T && 0 == T[0]) || !R
                                                        ? 0 * P
                                                        : P / 0
                                                    : NaN
                                            );
                                        for (
                                            b = (w = new H(P)).c = [],
                                                P = s + (l = n.e - i.e) + 1,
                                                a ||
                                                    ((a = c),
                                                    (l =
                                                        y(n.e / f) -
                                                        y(i.e / f)),
                                                    (P = (P / f) | 0)),
                                                d = 0;
                                            R[d] == (T[d] || 0);
                                            d++
                                        );
                                        if ((R[d] > (T[d] || 0) && l--, P < 0))
                                            b.push(1), (p = !0);
                                        else {
                                            for (
                                                N = T.length,
                                                    S = R.length,
                                                    d = 0,
                                                    P += 2,
                                                    (m = u(a / (R[0] + 1))) >
                                                        1 &&
                                                        ((R = t(R, m, a)),
                                                        (T = t(T, m, a)),
                                                        (S = R.length),
                                                        (N = T.length)),
                                                    A = S,
                                                    E = (M = T.slice(0, S))
                                                        .length;
                                                E < S;
                                                M[E++] = 0
                                            );
                                            (x = R.slice()),
                                                (x = [0].concat(x)),
                                                (O = R[0]),
                                                R[1] >= a / 2 && O++;
                                            do {
                                                if (
                                                    ((m = 0),
                                                    (h = e(R, M, S, E)) < 0)
                                                ) {
                                                    if (
                                                        ((_ = M[0]),
                                                        S != E &&
                                                            (_ =
                                                                _ * a +
                                                                (M[1] || 0)),
                                                        (m = u(_ / O)) > 1)
                                                    )
                                                        for (
                                                            m >= a &&
                                                                (m = a - 1),
                                                                v = (g = t(
                                                                    R,
                                                                    m,
                                                                    a
                                                                )).length,
                                                                E = M.length;
                                                            1 == e(g, M, v, E);

                                                        )
                                                            m--,
                                                                r(
                                                                    g,
                                                                    S < v
                                                                        ? x
                                                                        : R,
                                                                    v,
                                                                    a
                                                                ),
                                                                (v = g.length),
                                                                (h = 1);
                                                    else
                                                        0 == m && (h = m = 1),
                                                            (v = (g = R.slice())
                                                                .length);
                                                    if (
                                                        (v < E &&
                                                            (g = [0].concat(g)),
                                                        r(M, g, E, a),
                                                        (E = M.length),
                                                        -1 == h)
                                                    )
                                                        for (
                                                            ;
                                                            e(R, M, S, E) < 1;

                                                        )
                                                            m++,
                                                                r(
                                                                    M,
                                                                    S < E
                                                                        ? x
                                                                        : R,
                                                                    E,
                                                                    a
                                                                ),
                                                                (E = M.length);
                                                } else
                                                    0 === h && (m++, (M = [0]));
                                                (b[d++] = m),
                                                    M[0]
                                                        ? (M[E++] = T[A] || 0)
                                                        : ((M = [T[A]]),
                                                          (E = 1));
                                            } while (
                                                (A++ < N || null != M[0]) &&
                                                P--
                                            );
                                            (p = null != M[0]),
                                                b[0] || b.splice(0, 1);
                                        }
                                        if (a == c) {
                                            for (
                                                d = 1, P = b[0];
                                                P >= 10;
                                                P /= 10, d++
                                            );
                                            W(
                                                w,
                                                s + (w.e = d + l * f - 1) + 1,
                                                o,
                                                p
                                            );
                                        } else (w.e = l), (w.r = +p);
                                        return w;
                                    };
                                })()),
                                (N = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
                                (O = /^([^.]+)\.$/),
                                (S = /^\.([^.]+)$/),
                                (x = /^-?(Infinity|NaN)$/),
                                (P = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
                                (i = function(t, e, r, n) {
                                    var i,
                                        s = r ? e : e.replace(P, '');
                                    if (x.test(s))
                                        t.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                                    else {
                                        if (
                                            !r &&
                                            ((s = s.replace(N, function(
                                                t,
                                                e,
                                                r
                                            ) {
                                                return (
                                                    (i =
                                                        'x' ==
                                                        (r = r.toLowerCase())
                                                            ? 16
                                                            : 'b' == r
                                                            ? 2
                                                            : 8),
                                                    n && n != i ? t : e
                                                );
                                            })),
                                            n &&
                                                ((i = n),
                                                (s = s
                                                    .replace(O, '$1')
                                                    .replace(S, '0.$1'))),
                                            e != s)
                                        )
                                            return new H(s, i);
                                        if (H.DEBUG)
                                            throw Error(
                                                h +
                                                    'Not a' +
                                                    (n ? ' base ' + n : '') +
                                                    ' number: ' +
                                                    e
                                            );
                                        t.s = null;
                                    }
                                    t.c = t.e = null;
                                }),
                                (T.absoluteValue = T.abs = function() {
                                    var t = new H(this);
                                    return t.s < 0 && (t.s = 1), t;
                                }),
                                (T.comparedTo = function(t, e) {
                                    return w(this, new H(t, e));
                                }),
                                (T.decimalPlaces = T.dp = function(t, e) {
                                    var r,
                                        n,
                                        i,
                                        s = this;
                                    if (null != t)
                                        return (
                                            b(t, 0, g),
                                            null == e ? (e = I) : b(e, 0, 8),
                                            W(new H(s), t + s.e + 1, e)
                                        );
                                    if (!(r = s.c)) return null;
                                    if (
                                        ((n =
                                            ((i = r.length - 1) -
                                                y(this.e / f)) *
                                            f),
                                        (i = r[i]))
                                    )
                                        for (; i % 10 == 0; i /= 10, n--);
                                    return n < 0 && (n = 0), n;
                                }),
                                (T.dividedBy = T.div = function(t, e) {
                                    return r(this, new H(t, e), k, I);
                                }),
                                (T.dividedToIntegerBy = T.idiv = function(
                                    t,
                                    e
                                ) {
                                    return r(this, new H(t, e), 0, 1);
                                }),
                                (T.exponentiatedBy = T.pow = function(t, e) {
                                    var r,
                                        n,
                                        i,
                                        s,
                                        o,
                                        l,
                                        c,
                                        d,
                                        p = this;
                                    if ((t = new H(t)).c && !t.isInteger())
                                        throw Error(
                                            h +
                                                'Exponent not an integer: ' +
                                                Z(t)
                                        );
                                    if (
                                        (null != e && (e = new H(e)),
                                        (o = t.e > 14),
                                        !p.c ||
                                            !p.c[0] ||
                                            (1 == p.c[0] &&
                                                !p.e &&
                                                1 == p.c.length) ||
                                            !t.c ||
                                            !t.c[0])
                                    )
                                        return (
                                            (d = new H(
                                                Math.pow(
                                                    +Z(p),
                                                    o ? 2 - M(t) : +Z(t)
                                                )
                                            )),
                                            e ? d.mod(e) : d
                                        );
                                    if (((l = t.s < 0), e)) {
                                        if (e.c ? !e.c[0] : !e.s)
                                            return new H(NaN);
                                        (n =
                                            !l &&
                                            p.isInteger() &&
                                            e.isInteger()) && (p = p.mod(e));
                                    } else {
                                        if (
                                            t.e > 9 &&
                                            (p.e > 0 ||
                                                p.e < -1 ||
                                                (0 == p.e
                                                    ? p.c[0] > 1 ||
                                                      (o && p.c[1] >= 24e7)
                                                    : p.c[0] < 8e13 ||
                                                      (o &&
                                                          p.c[0] <= 9999975e7)))
                                        )
                                            return (
                                                (s = p.s < 0 && M(t) ? -0 : 0),
                                                p.e > -1 && (s = 1 / s),
                                                new H(l ? 1 / s : s)
                                            );
                                        j && (s = a(j / f + 2));
                                    }
                                    for (
                                        o
                                            ? ((r = new H(0.5)),
                                              l && (t.s = 1),
                                              (c = M(t)))
                                            : (c = (i = Math.abs(+Z(t))) % 2),
                                            d = new H(R);
                                        ;

                                    ) {
                                        if (c) {
                                            if (!(d = d.times(p)).c) break;
                                            s
                                                ? d.c.length > s &&
                                                  (d.c.length = s)
                                                : n && (d = d.mod(e));
                                        }
                                        if (i) {
                                            if (0 === (i = u(i / 2))) break;
                                            c = i % 2;
                                        } else if (
                                            (W((t = t.times(r)), t.e + 1, 1),
                                            t.e > 14)
                                        )
                                            c = M(t);
                                        else {
                                            if (0 == (i = +Z(t))) break;
                                            c = i % 2;
                                        }
                                        (p = p.times(p)),
                                            s
                                                ? p.c &&
                                                  p.c.length > s &&
                                                  (p.c.length = s)
                                                : n && (p = p.mod(e));
                                    }
                                    return n
                                        ? d
                                        : (l && (d = R.div(d)),
                                          e
                                              ? d.mod(e)
                                              : s
                                              ? W(d, j, I, void 0)
                                              : d);
                                }),
                                (T.integerValue = function(t) {
                                    var e = new H(this);
                                    return (
                                        null == t ? (t = I) : b(t, 0, 8),
                                        W(e, e.e + 1, t)
                                    );
                                }),
                                (T.isEqualTo = T.eq = function(t, e) {
                                    return 0 === w(this, new H(t, e));
                                }),
                                (T.isFinite = function() {
                                    return !!this.c;
                                }),
                                (T.isGreaterThan = T.gt = function(t, e) {
                                    return w(this, new H(t, e)) > 0;
                                }),
                                (T.isGreaterThanOrEqualTo = T.gte = function(
                                    t,
                                    e
                                ) {
                                    return (
                                        1 === (e = w(this, new H(t, e))) ||
                                        0 === e
                                    );
                                }),
                                (T.isInteger = function() {
                                    return (
                                        !!this.c &&
                                        y(this.e / f) > this.c.length - 2
                                    );
                                }),
                                (T.isLessThan = T.lt = function(t, e) {
                                    return w(this, new H(t, e)) < 0;
                                }),
                                (T.isLessThanOrEqualTo = T.lte = function(
                                    t,
                                    e
                                ) {
                                    return (
                                        -1 === (e = w(this, new H(t, e))) ||
                                        0 === e
                                    );
                                }),
                                (T.isNaN = function() {
                                    return !this.s;
                                }),
                                (T.isNegative = function() {
                                    return this.s < 0;
                                }),
                                (T.isPositive = function() {
                                    return this.s > 0;
                                }),
                                (T.isZero = function() {
                                    return !!this.c && 0 == this.c[0];
                                }),
                                (T.minus = function(t, e) {
                                    var r,
                                        n,
                                        i,
                                        s,
                                        o = this,
                                        a = o.s;
                                    if (((e = (t = new H(t, e)).s), !a || !e))
                                        return new H(NaN);
                                    if (a != e) return (t.s = -e), o.plus(t);
                                    var u = o.e / f,
                                        h = t.e / f,
                                        l = o.c,
                                        d = t.c;
                                    if (!u || !h) {
                                        if (!l || !d)
                                            return l
                                                ? ((t.s = -e), t)
                                                : new H(d ? o : NaN);
                                        if (!l[0] || !d[0])
                                            return d[0]
                                                ? ((t.s = -e), t)
                                                : new H(
                                                      l[0] ? o : 3 == I ? -0 : 0
                                                  );
                                    }
                                    if (
                                        ((u = y(u)),
                                        (h = y(h)),
                                        (l = l.slice()),
                                        (a = u - h))
                                    ) {
                                        for (
                                            (s = a < 0)
                                                ? ((a = -a), (i = l))
                                                : ((h = u), (i = d)),
                                                i.reverse(),
                                                e = a;
                                            e--;
                                            i.push(0)
                                        );
                                        i.reverse();
                                    } else
                                        for (
                                            n = (s =
                                                (a = l.length) < (e = d.length))
                                                ? a
                                                : e,
                                                a = e = 0;
                                            e < n;
                                            e++
                                        )
                                            if (l[e] != d[e]) {
                                                s = l[e] < d[e];
                                                break;
                                            }
                                    if (
                                        (s &&
                                            ((i = l),
                                            (l = d),
                                            (d = i),
                                            (t.s = -t.s)),
                                        (e = (n = d.length) - (r = l.length)) >
                                            0)
                                    )
                                        for (; e--; l[r++] = 0);
                                    for (e = c - 1; n > a; ) {
                                        if (l[--n] < d[n]) {
                                            for (r = n; r && !l[--r]; l[r] = e);
                                            --l[r], (l[n] += c);
                                        }
                                        l[n] -= d[n];
                                    }
                                    for (; 0 == l[0]; l.splice(0, 1), --h);
                                    return l[0]
                                        ? q(t, l, h)
                                        : ((t.s = 3 == I ? -1 : 1),
                                          (t.c = [(t.e = 0)]),
                                          t);
                                }),
                                (T.modulo = T.mod = function(t, e) {
                                    var n,
                                        i,
                                        s = this;
                                    return (
                                        (t = new H(t, e)),
                                        !s.c || !t.s || (t.c && !t.c[0])
                                            ? new H(NaN)
                                            : !t.c || (s.c && !s.c[0])
                                            ? new H(s)
                                            : (9 == D
                                                  ? ((i = t.s),
                                                    (t.s = 1),
                                                    (n = r(s, t, 0, 3)),
                                                    (t.s = i),
                                                    (n.s *= i))
                                                  : (n = r(s, t, 0, D)),
                                              (t = s.minus(n.times(t))).c[0] ||
                                                  1 != D ||
                                                  (t.s = s.s),
                                              t)
                                    );
                                }),
                                (T.multipliedBy = T.times = function(t, e) {
                                    var r,
                                        n,
                                        i,
                                        s,
                                        o,
                                        a,
                                        u,
                                        h,
                                        l,
                                        d,
                                        p,
                                        g,
                                        v,
                                        w,
                                        b,
                                        M = this,
                                        E = M.c,
                                        _ = (t = new H(t, e)).c;
                                    if (!(E && _ && E[0] && _[0]))
                                        return (
                                            !M.s ||
                                            !t.s ||
                                            (E && !E[0] && !_) ||
                                            (_ && !_[0] && !E)
                                                ? (t.c = t.e = t.s = null)
                                                : ((t.s *= M.s),
                                                  E && _
                                                      ? ((t.c = [0]), (t.e = 0))
                                                      : (t.c = t.e = null)),
                                            t
                                        );
                                    for (
                                        n = y(M.e / f) + y(t.e / f),
                                            t.s *= M.s,
                                            (u = E.length) < (d = _.length) &&
                                                ((v = E),
                                                (E = _),
                                                (_ = v),
                                                (i = u),
                                                (u = d),
                                                (d = i)),
                                            i = u + d,
                                            v = [];
                                        i--;
                                        v.push(0)
                                    );
                                    for (w = c, b = m, i = d; --i >= 0; ) {
                                        for (
                                            r = 0,
                                                p = _[i] % b,
                                                g = (_[i] / b) | 0,
                                                s = i + (o = u);
                                            s > i;

                                        )
                                            (r =
                                                (((h =
                                                    p * (h = E[--o] % b) +
                                                    ((a =
                                                        g * h +
                                                        (l = (E[o] / b) | 0) *
                                                            p) %
                                                        b) *
                                                        b +
                                                    v[s] +
                                                    r) /
                                                    w) |
                                                    0) +
                                                ((a / b) | 0) +
                                                g * l),
                                                (v[s--] = h % w);
                                        v[s] = r;
                                    }
                                    return r ? ++n : v.splice(0, 1), q(t, v, n);
                                }),
                                (T.negated = function() {
                                    var t = new H(this);
                                    return (t.s = -t.s || null), t;
                                }),
                                (T.plus = function(t, e) {
                                    var r,
                                        n = this,
                                        i = n.s;
                                    if (((e = (t = new H(t, e)).s), !i || !e))
                                        return new H(NaN);
                                    if (i != e) return (t.s = -e), n.minus(t);
                                    var s = n.e / f,
                                        o = t.e / f,
                                        a = n.c,
                                        u = t.c;
                                    if (!s || !o) {
                                        if (!a || !u) return new H(i / 0);
                                        if (!a[0] || !u[0])
                                            return u[0]
                                                ? t
                                                : new H(a[0] ? n : 0 * i);
                                    }
                                    if (
                                        ((s = y(s)),
                                        (o = y(o)),
                                        (a = a.slice()),
                                        (i = s - o))
                                    ) {
                                        for (
                                            i > 0
                                                ? ((o = s), (r = u))
                                                : ((i = -i), (r = a)),
                                                r.reverse();
                                            i--;
                                            r.push(0)
                                        );
                                        r.reverse();
                                    }
                                    for (
                                        (i = a.length) - (e = u.length) < 0 &&
                                            ((r = u),
                                            (u = a),
                                            (a = r),
                                            (e = i)),
                                            i = 0;
                                        e;

                                    )
                                        (i =
                                            ((a[--e] = a[e] + u[e] + i) / c) |
                                            0),
                                            (a[e] = c === a[e] ? 0 : a[e] % c);
                                    return (
                                        i && ((a = [i].concat(a)), ++o),
                                        q(t, a, o)
                                    );
                                }),
                                (T.precision = T.sd = function(t, e) {
                                    var r,
                                        n,
                                        i,
                                        s = this;
                                    if (null != t && t !== !!t)
                                        return (
                                            b(t, 1, g),
                                            null == e ? (e = I) : b(e, 0, 8),
                                            W(new H(s), t, e)
                                        );
                                    if (!(r = s.c)) return null;
                                    if (
                                        ((n = (i = r.length - 1) * f + 1),
                                        (i = r[i]))
                                    ) {
                                        for (; i % 10 == 0; i /= 10, n--);
                                        for (i = r[0]; i >= 10; i /= 10, n++);
                                    }
                                    return t && s.e + 1 > n && (n = s.e + 1), n;
                                }),
                                (T.shiftedBy = function(t) {
                                    return (
                                        b(t, -9007199254740991, d),
                                        this.times('1e' + t)
                                    );
                                }),
                                (T.squareRoot = T.sqrt = function() {
                                    var t,
                                        e,
                                        n,
                                        i,
                                        s,
                                        o = this,
                                        a = o.c,
                                        u = o.s,
                                        h = o.e,
                                        l = k + 4,
                                        c = new H('0.5');
                                    if (1 !== u || !a || !a[0])
                                        return new H(
                                            !u || (u < 0 && (!a || a[0]))
                                                ? NaN
                                                : a
                                                ? o
                                                : 1 / 0
                                        );
                                    if (
                                        (0 == (u = Math.sqrt(+Z(o))) ||
                                        u == 1 / 0
                                            ? (((e = v(a)).length + h) % 2 ==
                                                  0 && (e += '0'),
                                              (u = Math.sqrt(+e)),
                                              (h =
                                                  y((h + 1) / 2) -
                                                  (h < 0 || h % 2)),
                                              (n = new H(
                                                  (e =
                                                      u == 1 / 0
                                                          ? '1e' + h
                                                          : (e = u.toExponential()).slice(
                                                                0,
                                                                e.indexOf('e') +
                                                                    1
                                                            ) + h)
                                              )))
                                            : (n = new H(u + '')),
                                        n.c[0])
                                    )
                                        for (
                                            (u = (h = n.e) + l) < 3 && (u = 0);
                                            ;

                                        )
                                            if (
                                                ((s = n),
                                                (n = c.times(
                                                    s.plus(r(o, s, l, 1))
                                                )),
                                                v(s.c).slice(0, u) ===
                                                    (e = v(n.c)).slice(0, u))
                                            ) {
                                                if (
                                                    (n.e < h && --u,
                                                    '9999' !=
                                                        (e = e.slice(
                                                            u - 3,
                                                            u + 1
                                                        )) &&
                                                        (i || '4999' != e))
                                                ) {
                                                    (+e &&
                                                        (+e.slice(1) ||
                                                            '5' !=
                                                                e.charAt(0))) ||
                                                        (W(n, n.e + k + 2, 1),
                                                        (t = !n
                                                            .times(n)
                                                            .eq(o)));
                                                    break;
                                                }
                                                if (
                                                    !i &&
                                                    (W(s, s.e + k + 2, 0),
                                                    s.times(s).eq(o))
                                                ) {
                                                    n = s;
                                                    break;
                                                }
                                                (l += 4), (u += 4), (i = 1);
                                            }
                                    return W(n, n.e + k + 1, I, t);
                                }),
                                (T.toExponential = function(t, e) {
                                    return (
                                        null != t && (b(t, 0, g), t++),
                                        $(this, t, e, 1)
                                    );
                                }),
                                (T.toFixed = function(t, e) {
                                    return (
                                        null != t &&
                                            (b(t, 0, g), (t = t + this.e + 1)),
                                        $(this, t, e)
                                    );
                                }),
                                (T.toFormat = function(t, e, r) {
                                    var n,
                                        i = this;
                                    if (null == r)
                                        null != t && e && 'object' == typeof e
                                            ? ((r = e), (e = null))
                                            : t && 'object' == typeof t
                                            ? ((r = t), (t = e = null))
                                            : (r = z);
                                    else if ('object' != typeof r)
                                        throw Error(
                                            h + 'Argument not an object: ' + r
                                        );
                                    if (((n = i.toFixed(t, e)), i.c)) {
                                        var s,
                                            o = n.split('.'),
                                            a = +r.groupSize,
                                            u = +r.secondaryGroupSize,
                                            l = r.groupSeparator || '',
                                            c = o[0],
                                            f = o[1],
                                            d = i.s < 0,
                                            p = d ? c.slice(1) : c,
                                            m = p.length;
                                        if (
                                            (u &&
                                                ((s = a),
                                                (a = u),
                                                (u = s),
                                                (m -= s)),
                                            a > 0 && m > 0)
                                        ) {
                                            for (
                                                s = m % a || a,
                                                    c = p.substr(0, s);
                                                s < m;
                                                s += a
                                            )
                                                c += l + p.substr(s, a);
                                            u > 0 && (c += l + p.slice(s)),
                                                d && (c = '-' + c);
                                        }
                                        n = f
                                            ? c +
                                              (r.decimalSeparator || '') +
                                              ((u = +r.fractionGroupSize)
                                                  ? f.replace(
                                                        new RegExp(
                                                            '\\d{' + u + '}\\B',
                                                            'g'
                                                        ),
                                                        '$&' +
                                                            (r.fractionGroupSeparator ||
                                                                '')
                                                    )
                                                  : f)
                                            : c;
                                    }
                                    return (
                                        (r.prefix || '') + n + (r.suffix || '')
                                    );
                                }),
                                (T.toFraction = function(t) {
                                    var e,
                                        n,
                                        i,
                                        s,
                                        o,
                                        a,
                                        u,
                                        l,
                                        c,
                                        d,
                                        m,
                                        g,
                                        y = this,
                                        w = y.c;
                                    if (
                                        null != t &&
                                        ((!(u = new H(t)).isInteger() &&
                                            (u.c || 1 !== u.s)) ||
                                            u.lt(R))
                                    )
                                        throw Error(
                                            h +
                                                'Argument ' +
                                                (u.isInteger()
                                                    ? 'out of range: '
                                                    : 'not an integer: ') +
                                                Z(u)
                                        );
                                    if (!w) return new H(y);
                                    for (
                                        e = new H(R),
                                            c = n = new H(R),
                                            i = l = new H(R),
                                            g = v(w),
                                            o = e.e = g.length - y.e - 1,
                                            e.c[0] =
                                                p[(a = o % f) < 0 ? f + a : a],
                                            t =
                                                !t || u.comparedTo(e) > 0
                                                    ? o > 0
                                                        ? e
                                                        : c
                                                    : u,
                                            a = F,
                                            F = 1 / 0,
                                            u = new H(g),
                                            l.c[0] = 0;
                                        (d = r(u, e, 0, 1)),
                                            1 !=
                                                (s = n.plus(
                                                    d.times(i)
                                                )).comparedTo(t);

                                    )
                                        (n = i),
                                            (i = s),
                                            (c = l.plus(d.times((s = c)))),
                                            (l = s),
                                            (e = u.minus(d.times((s = e)))),
                                            (u = s);
                                    return (
                                        (s = r(t.minus(n), i, 0, 1)),
                                        (l = l.plus(s.times(c))),
                                        (n = n.plus(s.times(i))),
                                        (l.s = c.s = y.s),
                                        (m =
                                            r(c, i, (o *= 2), I)
                                                .minus(y)
                                                .abs()
                                                .comparedTo(
                                                    r(l, n, o, I)
                                                        .minus(y)
                                                        .abs()
                                                ) < 1
                                                ? [c, i]
                                                : [l, n]),
                                        (F = a),
                                        m
                                    );
                                }),
                                (T.toNumber = function() {
                                    return +Z(this);
                                }),
                                (T.toPrecision = function(t, e) {
                                    return (
                                        null != t && b(t, 1, g),
                                        $(this, t, e, 2)
                                    );
                                }),
                                (T.toString = function(t) {
                                    var e,
                                        r = this,
                                        i = r.s,
                                        s = r.e;
                                    return (
                                        null === s
                                            ? i
                                                ? ((e = 'Infinity'),
                                                  i < 0 && (e = '-' + e))
                                                : (e = 'NaN')
                                            : (null == t
                                                  ? (e =
                                                        s <= B || s >= C
                                                            ? E(v(r.c), s)
                                                            : _(v(r.c), s, '0'))
                                                  : 10 === t
                                                  ? (e = _(
                                                        v(
                                                            (r = W(
                                                                new H(r),
                                                                k + s + 1,
                                                                I
                                                            )).c
                                                        ),
                                                        r.e,
                                                        '0'
                                                    ))
                                                  : (b(t, 2, G.length, 'Base'),
                                                    (e = n(
                                                        _(v(r.c), s, '0'),
                                                        10,
                                                        t,
                                                        i,
                                                        !0
                                                    ))),
                                              i < 0 && r.c[0] && (e = '-' + e)),
                                        e
                                    );
                                }),
                                (T.valueOf = T.toJSON = function() {
                                    return Z(this);
                                }),
                                (T._isBigNumber = !0),
                                null != e && H.set(e),
                                H
                            );
                        })()),
                            (s.default = s.BigNumber = s),
                            void 0 ===
                                (n = function() {
                                    return s;
                                }.call(e, r, e, t)) || (t.exports = n);
                    })();
                },
                404: function(t, e, r) {
                    !(function(t, e) {
                        'use strict';
                        function n(t, e) {
                            if (!t) throw new Error(e || 'Assertion failed');
                        }
                        function i(t, e) {
                            t.super_ = e;
                            var r = function() {};
                            (r.prototype = e.prototype),
                                (t.prototype = new r()),
                                (t.prototype.constructor = t);
                        }
                        function s(t, e, r) {
                            if (s.isBN(t)) return t;
                            (this.negative = 0),
                                (this.words = null),
                                (this.length = 0),
                                (this.red = null),
                                null !== t &&
                                    (('le' !== e && 'be' !== e) ||
                                        ((r = e), (e = 10)),
                                    this._init(t || 0, e || 10, r || 'be'));
                        }
                        var o;
                        'object' == typeof t ? (t.exports = s) : (e.BN = s),
                            (s.BN = s),
                            (s.wordSize = 26);
                        try {
                            o = r(790).Buffer;
                        } catch (t) {}
                        function a(t, e, r) {
                            for (
                                var n = 0, i = Math.min(t.length, r), s = e;
                                s < i;
                                s++
                            ) {
                                var o = t.charCodeAt(s) - 48;
                                (n <<= 4),
                                    (n |=
                                        o >= 49 && o <= 54
                                            ? o - 49 + 10
                                            : o >= 17 && o <= 22
                                            ? o - 17 + 10
                                            : 15 & o);
                            }
                            return n;
                        }
                        function u(t, e, r, n) {
                            for (
                                var i = 0, s = Math.min(t.length, r), o = e;
                                o < s;
                                o++
                            ) {
                                var a = t.charCodeAt(o) - 48;
                                (i *= n),
                                    (i +=
                                        a >= 49
                                            ? a - 49 + 10
                                            : a >= 17
                                            ? a - 17 + 10
                                            : a);
                            }
                            return i;
                        }
                        (s.isBN = function(t) {
                            return (
                                t instanceof s ||
                                (null !== t &&
                                    'object' == typeof t &&
                                    t.constructor.wordSize === s.wordSize &&
                                    Array.isArray(t.words))
                            );
                        }),
                            (s.max = function(t, e) {
                                return t.cmp(e) > 0 ? t : e;
                            }),
                            (s.min = function(t, e) {
                                return t.cmp(e) < 0 ? t : e;
                            }),
                            (s.prototype._init = function(t, e, r) {
                                if ('number' == typeof t)
                                    return this._initNumber(t, e, r);
                                if ('object' == typeof t)
                                    return this._initArray(t, e, r);
                                'hex' === e && (e = 16),
                                    n(e === (0 | e) && e >= 2 && e <= 36);
                                var i = 0;
                                '-' ===
                                    (t = t.toString().replace(/\s+/g, ''))[0] &&
                                    i++,
                                    16 === e
                                        ? this._parseHex(t, i)
                                        : this._parseBase(t, e, i),
                                    '-' === t[0] && (this.negative = 1),
                                    this.strip(),
                                    'le' === r &&
                                        this._initArray(this.toArray(), e, r);
                            }),
                            (s.prototype._initNumber = function(t, e, r) {
                                t < 0 && ((this.negative = 1), (t = -t)),
                                    t < 67108864
                                        ? ((this.words = [67108863 & t]),
                                          (this.length = 1))
                                        : t < 4503599627370496
                                        ? ((this.words = [
                                              67108863 & t,
                                              (t / 67108864) & 67108863,
                                          ]),
                                          (this.length = 2))
                                        : (n(t < 9007199254740992),
                                          (this.words = [
                                              67108863 & t,
                                              (t / 67108864) & 67108863,
                                              1,
                                          ]),
                                          (this.length = 3)),
                                    'le' === r &&
                                        this._initArray(this.toArray(), e, r);
                            }),
                            (s.prototype._initArray = function(t, e, r) {
                                if (
                                    (n('number' == typeof t.length),
                                    t.length <= 0)
                                )
                                    return (
                                        (this.words = [0]),
                                        (this.length = 1),
                                        this
                                    );
                                (this.length = Math.ceil(t.length / 3)),
                                    (this.words = new Array(this.length));
                                for (var i = 0; i < this.length; i++)
                                    this.words[i] = 0;
                                var s,
                                    o,
                                    a = 0;
                                if ('be' === r)
                                    for (
                                        i = t.length - 1, s = 0;
                                        i >= 0;
                                        i -= 3
                                    )
                                        (o =
                                            t[i] |
                                            (t[i - 1] << 8) |
                                            (t[i - 2] << 16)),
                                            (this.words[s] |=
                                                (o << a) & 67108863),
                                            (this.words[s + 1] =
                                                (o >>> (26 - a)) & 67108863),
                                            (a += 24) >= 26 && ((a -= 26), s++);
                                else if ('le' === r)
                                    for (i = 0, s = 0; i < t.length; i += 3)
                                        (o =
                                            t[i] |
                                            (t[i + 1] << 8) |
                                            (t[i + 2] << 16)),
                                            (this.words[s] |=
                                                (o << a) & 67108863),
                                            (this.words[s + 1] =
                                                (o >>> (26 - a)) & 67108863),
                                            (a += 24) >= 26 && ((a -= 26), s++);
                                return this.strip();
                            }),
                            (s.prototype._parseHex = function(t, e) {
                                (this.length = Math.ceil((t.length - e) / 6)),
                                    (this.words = new Array(this.length));
                                for (var r = 0; r < this.length; r++)
                                    this.words[r] = 0;
                                var n,
                                    i,
                                    s = 0;
                                for (r = t.length - 6, n = 0; r >= e; r -= 6)
                                    (i = a(t, r, r + 6)),
                                        (this.words[n] |= (i << s) & 67108863),
                                        (this.words[n + 1] |=
                                            (i >>> (26 - s)) & 4194303),
                                        (s += 24) >= 26 && ((s -= 26), n++);
                                r + 6 !== e &&
                                    ((i = a(t, e, r + 6)),
                                    (this.words[n] |= (i << s) & 67108863),
                                    (this.words[n + 1] |=
                                        (i >>> (26 - s)) & 4194303)),
                                    this.strip();
                            }),
                            (s.prototype._parseBase = function(t, e, r) {
                                (this.words = [0]), (this.length = 1);
                                for (var n = 0, i = 1; i <= 67108863; i *= e)
                                    n++;
                                n--, (i = (i / e) | 0);
                                for (
                                    var s = t.length - r,
                                        o = s % n,
                                        a = Math.min(s, s - o) + r,
                                        h = 0,
                                        l = r;
                                    l < a;
                                    l += n
                                )
                                    (h = u(t, l, l + n, e)),
                                        this.imuln(i),
                                        this.words[0] + h < 67108864
                                            ? (this.words[0] += h)
                                            : this._iaddn(h);
                                if (0 !== o) {
                                    var c = 1;
                                    for (
                                        h = u(t, l, t.length, e), l = 0;
                                        l < o;
                                        l++
                                    )
                                        c *= e;
                                    this.imuln(c),
                                        this.words[0] + h < 67108864
                                            ? (this.words[0] += h)
                                            : this._iaddn(h);
                                }
                            }),
                            (s.prototype.copy = function(t) {
                                t.words = new Array(this.length);
                                for (var e = 0; e < this.length; e++)
                                    t.words[e] = this.words[e];
                                (t.length = this.length),
                                    (t.negative = this.negative),
                                    (t.red = this.red);
                            }),
                            (s.prototype.clone = function() {
                                var t = new s(null);
                                return this.copy(t), t;
                            }),
                            (s.prototype._expand = function(t) {
                                for (; this.length < t; )
                                    this.words[this.length++] = 0;
                                return this;
                            }),
                            (s.prototype.strip = function() {
                                for (
                                    ;
                                    this.length > 1 &&
                                    0 === this.words[this.length - 1];

                                )
                                    this.length--;
                                return this._normSign();
                            }),
                            (s.prototype._normSign = function() {
                                return (
                                    1 === this.length &&
                                        0 === this.words[0] &&
                                        (this.negative = 0),
                                    this
                                );
                            }),
                            (s.prototype.inspect = function() {
                                return (
                                    (this.red ? '<BN-R: ' : '<BN: ') +
                                    this.toString(16) +
                                    '>'
                                );
                            });
                        var h = [
                                '',
                                '0',
                                '00',
                                '000',
                                '0000',
                                '00000',
                                '000000',
                                '0000000',
                                '00000000',
                                '000000000',
                                '0000000000',
                                '00000000000',
                                '000000000000',
                                '0000000000000',
                                '00000000000000',
                                '000000000000000',
                                '0000000000000000',
                                '00000000000000000',
                                '000000000000000000',
                                '0000000000000000000',
                                '00000000000000000000',
                                '000000000000000000000',
                                '0000000000000000000000',
                                '00000000000000000000000',
                                '000000000000000000000000',
                                '0000000000000000000000000',
                            ],
                            l = [
                                0,
                                0,
                                25,
                                16,
                                12,
                                11,
                                10,
                                9,
                                8,
                                8,
                                7,
                                7,
                                7,
                                7,
                                6,
                                6,
                                6,
                                6,
                                6,
                                6,
                                6,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                                5,
                            ],
                            c = [
                                0,
                                0,
                                33554432,
                                43046721,
                                16777216,
                                48828125,
                                60466176,
                                40353607,
                                16777216,
                                43046721,
                                1e7,
                                19487171,
                                35831808,
                                62748517,
                                7529536,
                                11390625,
                                16777216,
                                24137569,
                                34012224,
                                47045881,
                                64e6,
                                4084101,
                                5153632,
                                6436343,
                                7962624,
                                9765625,
                                11881376,
                                14348907,
                                17210368,
                                20511149,
                                243e5,
                                28629151,
                                33554432,
                                39135393,
                                45435424,
                                52521875,
                                60466176,
                            ];
                        function f(t, e, r) {
                            r.negative = e.negative ^ t.negative;
                            var n = (t.length + e.length) | 0;
                            (r.length = n), (n = (n - 1) | 0);
                            var i = 0 | t.words[0],
                                s = 0 | e.words[0],
                                o = i * s,
                                a = 67108863 & o,
                                u = (o / 67108864) | 0;
                            r.words[0] = a;
                            for (var h = 1; h < n; h++) {
                                for (
                                    var l = u >>> 26,
                                        c = 67108863 & u,
                                        f = Math.min(h, e.length - 1),
                                        d = Math.max(0, h - t.length + 1);
                                    d <= f;
                                    d++
                                ) {
                                    var p = (h - d) | 0;
                                    (l +=
                                        ((o =
                                            (i = 0 | t.words[p]) *
                                                (s = 0 | e.words[d]) +
                                            c) /
                                            67108864) |
                                        0),
                                        (c = 67108863 & o);
                                }
                                (r.words[h] = 0 | c), (u = 0 | l);
                            }
                            return (
                                0 !== u ? (r.words[h] = 0 | u) : r.length--,
                                r.strip()
                            );
                        }
                        (s.prototype.toString = function(t, e) {
                            var r;
                            if (
                                ((e = 0 | e || 1),
                                16 === (t = t || 10) || 'hex' === t)
                            ) {
                                r = '';
                                for (
                                    var i = 0, s = 0, o = 0;
                                    o < this.length;
                                    o++
                                ) {
                                    var a = this.words[o],
                                        u = (
                                            16777215 &
                                            ((a << i) | s)
                                        ).toString(16);
                                    (r =
                                        0 !=
                                            (s = (a >>> (24 - i)) & 16777215) ||
                                        o !== this.length - 1
                                            ? h[6 - u.length] + u + r
                                            : u + r),
                                        (i += 2) >= 26 && ((i -= 26), o--);
                                }
                                for (
                                    0 !== s && (r = s.toString(16) + r);
                                    r.length % e != 0;

                                )
                                    r = '0' + r;
                                return 0 !== this.negative && (r = '-' + r), r;
                            }
                            if (t === (0 | t) && t >= 2 && t <= 36) {
                                var f = l[t],
                                    d = c[t];
                                r = '';
                                var p = this.clone();
                                for (p.negative = 0; !p.isZero(); ) {
                                    var m = p.modn(d).toString(t);
                                    r = (p = p.idivn(d)).isZero()
                                        ? m + r
                                        : h[f - m.length] + m + r;
                                }
                                for (
                                    this.isZero() && (r = '0' + r);
                                    r.length % e != 0;

                                )
                                    r = '0' + r;
                                return 0 !== this.negative && (r = '-' + r), r;
                            }
                            n(!1, 'Base should be between 2 and 36');
                        }),
                            (s.prototype.toNumber = function() {
                                var t = this.words[0];
                                return (
                                    2 === this.length
                                        ? (t += 67108864 * this.words[1])
                                        : 3 === this.length &&
                                          1 === this.words[2]
                                        ? (t +=
                                              4503599627370496 +
                                              67108864 * this.words[1])
                                        : this.length > 2 &&
                                          n(
                                              !1,
                                              'Number can only safely store up to 53 bits'
                                          ),
                                    0 !== this.negative ? -t : t
                                );
                            }),
                            (s.prototype.toJSON = function() {
                                return this.toString(16);
                            }),
                            (s.prototype.toBuffer = function(t, e) {
                                return (
                                    n(void 0 !== o), this.toArrayLike(o, t, e)
                                );
                            }),
                            (s.prototype.toArray = function(t, e) {
                                return this.toArrayLike(Array, t, e);
                            }),
                            (s.prototype.toArrayLike = function(t, e, r) {
                                var i = this.byteLength(),
                                    s = r || Math.max(1, i);
                                n(
                                    i <= s,
                                    'byte array longer than desired length'
                                ),
                                    n(s > 0, 'Requested array length <= 0'),
                                    this.strip();
                                var o,
                                    a,
                                    u = 'le' === e,
                                    h = new t(s),
                                    l = this.clone();
                                if (u) {
                                    for (a = 0; !l.isZero(); a++)
                                        (o = l.andln(255)),
                                            l.iushrn(8),
                                            (h[a] = o);
                                    for (; a < s; a++) h[a] = 0;
                                } else {
                                    for (a = 0; a < s - i; a++) h[a] = 0;
                                    for (a = 0; !l.isZero(); a++)
                                        (o = l.andln(255)),
                                            l.iushrn(8),
                                            (h[s - a - 1] = o);
                                }
                                return h;
                            }),
                            Math.clz32
                                ? (s.prototype._countBits = function(t) {
                                      return 32 - Math.clz32(t);
                                  })
                                : (s.prototype._countBits = function(t) {
                                      var e = t,
                                          r = 0;
                                      return (
                                          e >= 4096 && ((r += 13), (e >>>= 13)),
                                          e >= 64 && ((r += 7), (e >>>= 7)),
                                          e >= 8 && ((r += 4), (e >>>= 4)),
                                          e >= 2 && ((r += 2), (e >>>= 2)),
                                          r + e
                                      );
                                  }),
                            (s.prototype._zeroBits = function(t) {
                                if (0 === t) return 26;
                                var e = t,
                                    r = 0;
                                return (
                                    8191 & e || ((r += 13), (e >>>= 13)),
                                    127 & e || ((r += 7), (e >>>= 7)),
                                    15 & e || ((r += 4), (e >>>= 4)),
                                    3 & e || ((r += 2), (e >>>= 2)),
                                    1 & e || r++,
                                    r
                                );
                            }),
                            (s.prototype.bitLength = function() {
                                var t = this.words[this.length - 1],
                                    e = this._countBits(t);
                                return 26 * (this.length - 1) + e;
                            }),
                            (s.prototype.zeroBits = function() {
                                if (this.isZero()) return 0;
                                for (var t = 0, e = 0; e < this.length; e++) {
                                    var r = this._zeroBits(this.words[e]);
                                    if (((t += r), 26 !== r)) break;
                                }
                                return t;
                            }),
                            (s.prototype.byteLength = function() {
                                return Math.ceil(this.bitLength() / 8);
                            }),
                            (s.prototype.toTwos = function(t) {
                                return 0 !== this.negative
                                    ? this.abs()
                                          .inotn(t)
                                          .iaddn(1)
                                    : this.clone();
                            }),
                            (s.prototype.fromTwos = function(t) {
                                return this.testn(t - 1)
                                    ? this.notn(t)
                                          .iaddn(1)
                                          .ineg()
                                    : this.clone();
                            }),
                            (s.prototype.isNeg = function() {
                                return 0 !== this.negative;
                            }),
                            (s.prototype.neg = function() {
                                return this.clone().ineg();
                            }),
                            (s.prototype.ineg = function() {
                                return (
                                    this.isZero() || (this.negative ^= 1), this
                                );
                            }),
                            (s.prototype.iuor = function(t) {
                                for (; this.length < t.length; )
                                    this.words[this.length++] = 0;
                                for (var e = 0; e < t.length; e++)
                                    this.words[e] = this.words[e] | t.words[e];
                                return this.strip();
                            }),
                            (s.prototype.ior = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuor(t)
                                );
                            }),
                            (s.prototype.or = function(t) {
                                return this.length > t.length
                                    ? this.clone().ior(t)
                                    : t.clone().ior(this);
                            }),
                            (s.prototype.uor = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuor(t)
                                    : t.clone().iuor(this);
                            }),
                            (s.prototype.iuand = function(t) {
                                var e;
                                e = this.length > t.length ? t : this;
                                for (var r = 0; r < e.length; r++)
                                    this.words[r] = this.words[r] & t.words[r];
                                return (this.length = e.length), this.strip();
                            }),
                            (s.prototype.iand = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuand(t)
                                );
                            }),
                            (s.prototype.and = function(t) {
                                return this.length > t.length
                                    ? this.clone().iand(t)
                                    : t.clone().iand(this);
                            }),
                            (s.prototype.uand = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuand(t)
                                    : t.clone().iuand(this);
                            }),
                            (s.prototype.iuxor = function(t) {
                                var e, r;
                                this.length > t.length
                                    ? ((e = this), (r = t))
                                    : ((e = t), (r = this));
                                for (var n = 0; n < r.length; n++)
                                    this.words[n] = e.words[n] ^ r.words[n];
                                if (this !== e)
                                    for (; n < e.length; n++)
                                        this.words[n] = e.words[n];
                                return (this.length = e.length), this.strip();
                            }),
                            (s.prototype.ixor = function(t) {
                                return (
                                    n(!(this.negative | t.negative)),
                                    this.iuxor(t)
                                );
                            }),
                            (s.prototype.xor = function(t) {
                                return this.length > t.length
                                    ? this.clone().ixor(t)
                                    : t.clone().ixor(this);
                            }),
                            (s.prototype.uxor = function(t) {
                                return this.length > t.length
                                    ? this.clone().iuxor(t)
                                    : t.clone().iuxor(this);
                            }),
                            (s.prototype.inotn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = 0 | Math.ceil(t / 26),
                                    r = t % 26;
                                this._expand(e), r > 0 && e--;
                                for (var i = 0; i < e; i++)
                                    this.words[i] = 67108863 & ~this.words[i];
                                return (
                                    r > 0 &&
                                        (this.words[i] =
                                            ~this.words[i] &
                                            (67108863 >> (26 - r))),
                                    this.strip()
                                );
                            }),
                            (s.prototype.notn = function(t) {
                                return this.clone().inotn(t);
                            }),
                            (s.prototype.setn = function(t, e) {
                                n('number' == typeof t && t >= 0);
                                var r = (t / 26) | 0,
                                    i = t % 26;
                                return (
                                    this._expand(r + 1),
                                    (this.words[r] = e
                                        ? this.words[r] | (1 << i)
                                        : this.words[r] & ~(1 << i)),
                                    this.strip()
                                );
                            }),
                            (s.prototype.iadd = function(t) {
                                var e, r, n;
                                if (0 !== this.negative && 0 === t.negative)
                                    return (
                                        (this.negative = 0),
                                        (e = this.isub(t)),
                                        (this.negative ^= 1),
                                        this._normSign()
                                    );
                                if (0 === this.negative && 0 !== t.negative)
                                    return (
                                        (t.negative = 0),
                                        (e = this.isub(t)),
                                        (t.negative = 1),
                                        e._normSign()
                                    );
                                this.length > t.length
                                    ? ((r = this), (n = t))
                                    : ((r = t), (n = this));
                                for (var i = 0, s = 0; s < n.length; s++)
                                    (e =
                                        (0 | r.words[s]) +
                                        (0 | n.words[s]) +
                                        i),
                                        (this.words[s] = 67108863 & e),
                                        (i = e >>> 26);
                                for (; 0 !== i && s < r.length; s++)
                                    (e = (0 | r.words[s]) + i),
                                        (this.words[s] = 67108863 & e),
                                        (i = e >>> 26);
                                if (((this.length = r.length), 0 !== i))
                                    (this.words[this.length] = i),
                                        this.length++;
                                else if (r !== this)
                                    for (; s < r.length; s++)
                                        this.words[s] = r.words[s];
                                return this;
                            }),
                            (s.prototype.add = function(t) {
                                var e;
                                return 0 !== t.negative && 0 === this.negative
                                    ? ((t.negative = 0),
                                      (e = this.sub(t)),
                                      (t.negative ^= 1),
                                      e)
                                    : 0 === t.negative && 0 !== this.negative
                                    ? ((this.negative = 0),
                                      (e = t.sub(this)),
                                      (this.negative = 1),
                                      e)
                                    : this.length > t.length
                                    ? this.clone().iadd(t)
                                    : t.clone().iadd(this);
                            }),
                            (s.prototype.isub = function(t) {
                                if (0 !== t.negative) {
                                    t.negative = 0;
                                    var e = this.iadd(t);
                                    return (t.negative = 1), e._normSign();
                                }
                                if (0 !== this.negative)
                                    return (
                                        (this.negative = 0),
                                        this.iadd(t),
                                        (this.negative = 1),
                                        this._normSign()
                                    );
                                var r,
                                    n,
                                    i = this.cmp(t);
                                if (0 === i)
                                    return (
                                        (this.negative = 0),
                                        (this.length = 1),
                                        (this.words[0] = 0),
                                        this
                                    );
                                i > 0
                                    ? ((r = this), (n = t))
                                    : ((r = t), (n = this));
                                for (var s = 0, o = 0; o < n.length; o++)
                                    (s =
                                        (e =
                                            (0 | r.words[o]) -
                                            (0 | n.words[o]) +
                                            s) >> 26),
                                        (this.words[o] = 67108863 & e);
                                for (; 0 !== s && o < r.length; o++)
                                    (s = (e = (0 | r.words[o]) + s) >> 26),
                                        (this.words[o] = 67108863 & e);
                                if (0 === s && o < r.length && r !== this)
                                    for (; o < r.length; o++)
                                        this.words[o] = r.words[o];
                                return (
                                    (this.length = Math.max(this.length, o)),
                                    r !== this && (this.negative = 1),
                                    this.strip()
                                );
                            }),
                            (s.prototype.sub = function(t) {
                                return this.clone().isub(t);
                            });
                        var d = function(t, e, r) {
                            var n,
                                i,
                                s,
                                o = t.words,
                                a = e.words,
                                u = r.words,
                                h = 0,
                                l = 0 | o[0],
                                c = 8191 & l,
                                f = l >>> 13,
                                d = 0 | o[1],
                                p = 8191 & d,
                                m = d >>> 13,
                                g = 0 | o[2],
                                y = 8191 & g,
                                v = g >>> 13,
                                w = 0 | o[3],
                                b = 8191 & w,
                                M = w >>> 13,
                                E = 0 | o[4],
                                _ = 8191 & E,
                                A = E >>> 13,
                                N = 0 | o[5],
                                O = 8191 & N,
                                S = N >>> 13,
                                x = 0 | o[6],
                                P = 8191 & x,
                                T = x >>> 13,
                                R = 0 | o[7],
                                k = 8191 & R,
                                I = R >>> 13,
                                B = 0 | o[8],
                                C = 8191 & B,
                                L = B >>> 13,
                                F = 0 | o[9],
                                U = 8191 & F,
                                D = F >>> 13,
                                j = 0 | a[0],
                                z = 8191 & j,
                                G = j >>> 13,
                                H = 0 | a[1],
                                $ = 8191 & H,
                                V = H >>> 13,
                                q = 0 | a[2],
                                W = 8191 & q,
                                Z = q >>> 13,
                                J = 0 | a[3],
                                X = 8191 & J,
                                K = J >>> 13,
                                Y = 0 | a[4],
                                Q = 8191 & Y,
                                tt = Y >>> 13,
                                et = 0 | a[5],
                                rt = 8191 & et,
                                nt = et >>> 13,
                                it = 0 | a[6],
                                st = 8191 & it,
                                ot = it >>> 13,
                                at = 0 | a[7],
                                ut = 8191 & at,
                                ht = at >>> 13,
                                lt = 0 | a[8],
                                ct = 8191 & lt,
                                ft = lt >>> 13,
                                dt = 0 | a[9],
                                pt = 8191 & dt,
                                mt = dt >>> 13;
                            (r.negative = t.negative ^ e.negative),
                                (r.length = 19);
                            var gt =
                                (((h + (n = Math.imul(c, z))) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = Math.imul(c, G)) +
                                                Math.imul(f, z)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = Math.imul(f, G)) + (i >>> 13)) | 0) +
                                    (gt >>> 26)) |
                                0),
                                (gt &= 67108863),
                                (n = Math.imul(p, z)),
                                (i =
                                    ((i = Math.imul(p, G)) + Math.imul(m, z)) |
                                    0),
                                (s = Math.imul(m, G));
                            var yt =
                                (((h + (n = (n + Math.imul(c, $)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, V)) | 0) +
                                                Math.imul(f, $)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, V)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (yt >>> 26)) |
                                0),
                                (yt &= 67108863),
                                (n = Math.imul(y, z)),
                                (i =
                                    ((i = Math.imul(y, G)) + Math.imul(v, z)) |
                                    0),
                                (s = Math.imul(v, G)),
                                (n = (n + Math.imul(p, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, V)) | 0) +
                                        Math.imul(m, $)) |
                                    0),
                                (s = (s + Math.imul(m, V)) | 0);
                            var vt =
                                (((h + (n = (n + Math.imul(c, W)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, Z)) | 0) +
                                                Math.imul(f, W)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, Z)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (vt >>> 26)) |
                                0),
                                (vt &= 67108863),
                                (n = Math.imul(b, z)),
                                (i =
                                    ((i = Math.imul(b, G)) + Math.imul(M, z)) |
                                    0),
                                (s = Math.imul(M, G)),
                                (n = (n + Math.imul(y, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, V)) | 0) +
                                        Math.imul(v, $)) |
                                    0),
                                (s = (s + Math.imul(v, V)) | 0),
                                (n = (n + Math.imul(p, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, Z)) | 0) +
                                        Math.imul(m, W)) |
                                    0),
                                (s = (s + Math.imul(m, Z)) | 0);
                            var wt =
                                (((h + (n = (n + Math.imul(c, X)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, K)) | 0) +
                                                Math.imul(f, X)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, K)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (wt >>> 26)) |
                                0),
                                (wt &= 67108863),
                                (n = Math.imul(_, z)),
                                (i =
                                    ((i = Math.imul(_, G)) + Math.imul(A, z)) |
                                    0),
                                (s = Math.imul(A, G)),
                                (n = (n + Math.imul(b, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, V)) | 0) +
                                        Math.imul(M, $)) |
                                    0),
                                (s = (s + Math.imul(M, V)) | 0),
                                (n = (n + Math.imul(y, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, Z)) | 0) +
                                        Math.imul(v, W)) |
                                    0),
                                (s = (s + Math.imul(v, Z)) | 0),
                                (n = (n + Math.imul(p, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, K)) | 0) +
                                        Math.imul(m, X)) |
                                    0),
                                (s = (s + Math.imul(m, K)) | 0);
                            var bt =
                                (((h + (n = (n + Math.imul(c, Q)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, tt)) | 0) +
                                                Math.imul(f, Q)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, tt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (bt >>> 26)) |
                                0),
                                (bt &= 67108863),
                                (n = Math.imul(O, z)),
                                (i =
                                    ((i = Math.imul(O, G)) + Math.imul(S, z)) |
                                    0),
                                (s = Math.imul(S, G)),
                                (n = (n + Math.imul(_, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, V)) | 0) +
                                        Math.imul(A, $)) |
                                    0),
                                (s = (s + Math.imul(A, V)) | 0),
                                (n = (n + Math.imul(b, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, Z)) | 0) +
                                        Math.imul(M, W)) |
                                    0),
                                (s = (s + Math.imul(M, Z)) | 0),
                                (n = (n + Math.imul(y, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, K)) | 0) +
                                        Math.imul(v, X)) |
                                    0),
                                (s = (s + Math.imul(v, K)) | 0),
                                (n = (n + Math.imul(p, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, tt)) | 0) +
                                        Math.imul(m, Q)) |
                                    0),
                                (s = (s + Math.imul(m, tt)) | 0);
                            var Mt =
                                (((h + (n = (n + Math.imul(c, rt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, nt)) | 0) +
                                                Math.imul(f, rt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, nt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Mt >>> 26)) |
                                0),
                                (Mt &= 67108863),
                                (n = Math.imul(P, z)),
                                (i =
                                    ((i = Math.imul(P, G)) + Math.imul(T, z)) |
                                    0),
                                (s = Math.imul(T, G)),
                                (n = (n + Math.imul(O, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, V)) | 0) +
                                        Math.imul(S, $)) |
                                    0),
                                (s = (s + Math.imul(S, V)) | 0),
                                (n = (n + Math.imul(_, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, Z)) | 0) +
                                        Math.imul(A, W)) |
                                    0),
                                (s = (s + Math.imul(A, Z)) | 0),
                                (n = (n + Math.imul(b, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, K)) | 0) +
                                        Math.imul(M, X)) |
                                    0),
                                (s = (s + Math.imul(M, K)) | 0),
                                (n = (n + Math.imul(y, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, tt)) | 0) +
                                        Math.imul(v, Q)) |
                                    0),
                                (s = (s + Math.imul(v, tt)) | 0),
                                (n = (n + Math.imul(p, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, nt)) | 0) +
                                        Math.imul(m, rt)) |
                                    0),
                                (s = (s + Math.imul(m, nt)) | 0);
                            var Et =
                                (((h + (n = (n + Math.imul(c, st)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ot)) | 0) +
                                                Math.imul(f, st)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ot)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Et >>> 26)) |
                                0),
                                (Et &= 67108863),
                                (n = Math.imul(k, z)),
                                (i =
                                    ((i = Math.imul(k, G)) + Math.imul(I, z)) |
                                    0),
                                (s = Math.imul(I, G)),
                                (n = (n + Math.imul(P, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, V)) | 0) +
                                        Math.imul(T, $)) |
                                    0),
                                (s = (s + Math.imul(T, V)) | 0),
                                (n = (n + Math.imul(O, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, Z)) | 0) +
                                        Math.imul(S, W)) |
                                    0),
                                (s = (s + Math.imul(S, Z)) | 0),
                                (n = (n + Math.imul(_, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, K)) | 0) +
                                        Math.imul(A, X)) |
                                    0),
                                (s = (s + Math.imul(A, K)) | 0),
                                (n = (n + Math.imul(b, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, tt)) | 0) +
                                        Math.imul(M, Q)) |
                                    0),
                                (s = (s + Math.imul(M, tt)) | 0),
                                (n = (n + Math.imul(y, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, nt)) | 0) +
                                        Math.imul(v, rt)) |
                                    0),
                                (s = (s + Math.imul(v, nt)) | 0),
                                (n = (n + Math.imul(p, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ot)) | 0) +
                                        Math.imul(m, st)) |
                                    0),
                                (s = (s + Math.imul(m, ot)) | 0);
                            var _t =
                                (((h + (n = (n + Math.imul(c, ut)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ht)) | 0) +
                                                Math.imul(f, ut)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ht)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (_t >>> 26)) |
                                0),
                                (_t &= 67108863),
                                (n = Math.imul(C, z)),
                                (i =
                                    ((i = Math.imul(C, G)) + Math.imul(L, z)) |
                                    0),
                                (s = Math.imul(L, G)),
                                (n = (n + Math.imul(k, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, V)) | 0) +
                                        Math.imul(I, $)) |
                                    0),
                                (s = (s + Math.imul(I, V)) | 0),
                                (n = (n + Math.imul(P, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, Z)) | 0) +
                                        Math.imul(T, W)) |
                                    0),
                                (s = (s + Math.imul(T, Z)) | 0),
                                (n = (n + Math.imul(O, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, K)) | 0) +
                                        Math.imul(S, X)) |
                                    0),
                                (s = (s + Math.imul(S, K)) | 0),
                                (n = (n + Math.imul(_, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, tt)) | 0) +
                                        Math.imul(A, Q)) |
                                    0),
                                (s = (s + Math.imul(A, tt)) | 0),
                                (n = (n + Math.imul(b, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, nt)) | 0) +
                                        Math.imul(M, rt)) |
                                    0),
                                (s = (s + Math.imul(M, nt)) | 0),
                                (n = (n + Math.imul(y, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ot)) | 0) +
                                        Math.imul(v, st)) |
                                    0),
                                (s = (s + Math.imul(v, ot)) | 0),
                                (n = (n + Math.imul(p, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ht)) | 0) +
                                        Math.imul(m, ut)) |
                                    0),
                                (s = (s + Math.imul(m, ht)) | 0);
                            var At =
                                (((h + (n = (n + Math.imul(c, ct)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, ft)) | 0) +
                                                Math.imul(f, ct)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, ft)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (At >>> 26)) |
                                0),
                                (At &= 67108863),
                                (n = Math.imul(U, z)),
                                (i =
                                    ((i = Math.imul(U, G)) + Math.imul(D, z)) |
                                    0),
                                (s = Math.imul(D, G)),
                                (n = (n + Math.imul(C, $)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, V)) | 0) +
                                        Math.imul(L, $)) |
                                    0),
                                (s = (s + Math.imul(L, V)) | 0),
                                (n = (n + Math.imul(k, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, Z)) | 0) +
                                        Math.imul(I, W)) |
                                    0),
                                (s = (s + Math.imul(I, Z)) | 0),
                                (n = (n + Math.imul(P, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, K)) | 0) +
                                        Math.imul(T, X)) |
                                    0),
                                (s = (s + Math.imul(T, K)) | 0),
                                (n = (n + Math.imul(O, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, tt)) | 0) +
                                        Math.imul(S, Q)) |
                                    0),
                                (s = (s + Math.imul(S, tt)) | 0),
                                (n = (n + Math.imul(_, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, nt)) | 0) +
                                        Math.imul(A, rt)) |
                                    0),
                                (s = (s + Math.imul(A, nt)) | 0),
                                (n = (n + Math.imul(b, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ot)) | 0) +
                                        Math.imul(M, st)) |
                                    0),
                                (s = (s + Math.imul(M, ot)) | 0),
                                (n = (n + Math.imul(y, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ht)) | 0) +
                                        Math.imul(v, ut)) |
                                    0),
                                (s = (s + Math.imul(v, ht)) | 0),
                                (n = (n + Math.imul(p, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(p, ft)) | 0) +
                                        Math.imul(m, ct)) |
                                    0),
                                (s = (s + Math.imul(m, ft)) | 0);
                            var Nt =
                                (((h + (n = (n + Math.imul(c, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(c, mt)) | 0) +
                                                Math.imul(f, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(f, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Nt >>> 26)) |
                                0),
                                (Nt &= 67108863),
                                (n = Math.imul(U, $)),
                                (i =
                                    ((i = Math.imul(U, V)) + Math.imul(D, $)) |
                                    0),
                                (s = Math.imul(D, V)),
                                (n = (n + Math.imul(C, W)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, Z)) | 0) +
                                        Math.imul(L, W)) |
                                    0),
                                (s = (s + Math.imul(L, Z)) | 0),
                                (n = (n + Math.imul(k, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, K)) | 0) +
                                        Math.imul(I, X)) |
                                    0),
                                (s = (s + Math.imul(I, K)) | 0),
                                (n = (n + Math.imul(P, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, tt)) | 0) +
                                        Math.imul(T, Q)) |
                                    0),
                                (s = (s + Math.imul(T, tt)) | 0),
                                (n = (n + Math.imul(O, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, nt)) | 0) +
                                        Math.imul(S, rt)) |
                                    0),
                                (s = (s + Math.imul(S, nt)) | 0),
                                (n = (n + Math.imul(_, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ot)) | 0) +
                                        Math.imul(A, st)) |
                                    0),
                                (s = (s + Math.imul(A, ot)) | 0),
                                (n = (n + Math.imul(b, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ht)) | 0) +
                                        Math.imul(M, ut)) |
                                    0),
                                (s = (s + Math.imul(M, ht)) | 0),
                                (n = (n + Math.imul(y, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(y, ft)) | 0) +
                                        Math.imul(v, ct)) |
                                    0),
                                (s = (s + Math.imul(v, ft)) | 0);
                            var Ot =
                                (((h + (n = (n + Math.imul(p, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(p, mt)) | 0) +
                                                Math.imul(m, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(m, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Ot >>> 26)) |
                                0),
                                (Ot &= 67108863),
                                (n = Math.imul(U, W)),
                                (i =
                                    ((i = Math.imul(U, Z)) + Math.imul(D, W)) |
                                    0),
                                (s = Math.imul(D, Z)),
                                (n = (n + Math.imul(C, X)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, K)) | 0) +
                                        Math.imul(L, X)) |
                                    0),
                                (s = (s + Math.imul(L, K)) | 0),
                                (n = (n + Math.imul(k, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, tt)) | 0) +
                                        Math.imul(I, Q)) |
                                    0),
                                (s = (s + Math.imul(I, tt)) | 0),
                                (n = (n + Math.imul(P, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, nt)) | 0) +
                                        Math.imul(T, rt)) |
                                    0),
                                (s = (s + Math.imul(T, nt)) | 0),
                                (n = (n + Math.imul(O, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ot)) | 0) +
                                        Math.imul(S, st)) |
                                    0),
                                (s = (s + Math.imul(S, ot)) | 0),
                                (n = (n + Math.imul(_, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ht)) | 0) +
                                        Math.imul(A, ut)) |
                                    0),
                                (s = (s + Math.imul(A, ht)) | 0),
                                (n = (n + Math.imul(b, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(b, ft)) | 0) +
                                        Math.imul(M, ct)) |
                                    0),
                                (s = (s + Math.imul(M, ft)) | 0);
                            var St =
                                (((h + (n = (n + Math.imul(y, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(y, mt)) | 0) +
                                                Math.imul(v, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(v, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (St >>> 26)) |
                                0),
                                (St &= 67108863),
                                (n = Math.imul(U, X)),
                                (i =
                                    ((i = Math.imul(U, K)) + Math.imul(D, X)) |
                                    0),
                                (s = Math.imul(D, K)),
                                (n = (n + Math.imul(C, Q)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, tt)) | 0) +
                                        Math.imul(L, Q)) |
                                    0),
                                (s = (s + Math.imul(L, tt)) | 0),
                                (n = (n + Math.imul(k, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, nt)) | 0) +
                                        Math.imul(I, rt)) |
                                    0),
                                (s = (s + Math.imul(I, nt)) | 0),
                                (n = (n + Math.imul(P, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ot)) | 0) +
                                        Math.imul(T, st)) |
                                    0),
                                (s = (s + Math.imul(T, ot)) | 0),
                                (n = (n + Math.imul(O, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ht)) | 0) +
                                        Math.imul(S, ut)) |
                                    0),
                                (s = (s + Math.imul(S, ht)) | 0),
                                (n = (n + Math.imul(_, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(_, ft)) | 0) +
                                        Math.imul(A, ct)) |
                                    0),
                                (s = (s + Math.imul(A, ft)) | 0);
                            var xt =
                                (((h + (n = (n + Math.imul(b, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(b, mt)) | 0) +
                                                Math.imul(M, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(M, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (xt >>> 26)) |
                                0),
                                (xt &= 67108863),
                                (n = Math.imul(U, Q)),
                                (i =
                                    ((i = Math.imul(U, tt)) + Math.imul(D, Q)) |
                                    0),
                                (s = Math.imul(D, tt)),
                                (n = (n + Math.imul(C, rt)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, nt)) | 0) +
                                        Math.imul(L, rt)) |
                                    0),
                                (s = (s + Math.imul(L, nt)) | 0),
                                (n = (n + Math.imul(k, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ot)) | 0) +
                                        Math.imul(I, st)) |
                                    0),
                                (s = (s + Math.imul(I, ot)) | 0),
                                (n = (n + Math.imul(P, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ht)) | 0) +
                                        Math.imul(T, ut)) |
                                    0),
                                (s = (s + Math.imul(T, ht)) | 0),
                                (n = (n + Math.imul(O, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(O, ft)) | 0) +
                                        Math.imul(S, ct)) |
                                    0),
                                (s = (s + Math.imul(S, ft)) | 0);
                            var Pt =
                                (((h + (n = (n + Math.imul(_, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(_, mt)) | 0) +
                                                Math.imul(A, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(A, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Pt >>> 26)) |
                                0),
                                (Pt &= 67108863),
                                (n = Math.imul(U, rt)),
                                (i =
                                    ((i = Math.imul(U, nt)) +
                                        Math.imul(D, rt)) |
                                    0),
                                (s = Math.imul(D, nt)),
                                (n = (n + Math.imul(C, st)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ot)) | 0) +
                                        Math.imul(L, st)) |
                                    0),
                                (s = (s + Math.imul(L, ot)) | 0),
                                (n = (n + Math.imul(k, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ht)) | 0) +
                                        Math.imul(I, ut)) |
                                    0),
                                (s = (s + Math.imul(I, ht)) | 0),
                                (n = (n + Math.imul(P, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(P, ft)) | 0) +
                                        Math.imul(T, ct)) |
                                    0),
                                (s = (s + Math.imul(T, ft)) | 0);
                            var Tt =
                                (((h + (n = (n + Math.imul(O, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(O, mt)) | 0) +
                                                Math.imul(S, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(S, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Tt >>> 26)) |
                                0),
                                (Tt &= 67108863),
                                (n = Math.imul(U, st)),
                                (i =
                                    ((i = Math.imul(U, ot)) +
                                        Math.imul(D, st)) |
                                    0),
                                (s = Math.imul(D, ot)),
                                (n = (n + Math.imul(C, ut)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ht)) | 0) +
                                        Math.imul(L, ut)) |
                                    0),
                                (s = (s + Math.imul(L, ht)) | 0),
                                (n = (n + Math.imul(k, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(k, ft)) | 0) +
                                        Math.imul(I, ct)) |
                                    0),
                                (s = (s + Math.imul(I, ft)) | 0);
                            var Rt =
                                (((h + (n = (n + Math.imul(P, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(P, mt)) | 0) +
                                                Math.imul(T, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(T, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (Rt >>> 26)) |
                                0),
                                (Rt &= 67108863),
                                (n = Math.imul(U, ut)),
                                (i =
                                    ((i = Math.imul(U, ht)) +
                                        Math.imul(D, ut)) |
                                    0),
                                (s = Math.imul(D, ht)),
                                (n = (n + Math.imul(C, ct)) | 0),
                                (i =
                                    ((i = (i + Math.imul(C, ft)) | 0) +
                                        Math.imul(L, ct)) |
                                    0),
                                (s = (s + Math.imul(L, ft)) | 0);
                            var kt =
                                (((h + (n = (n + Math.imul(k, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(k, mt)) | 0) +
                                                Math.imul(I, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(I, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (kt >>> 26)) |
                                0),
                                (kt &= 67108863),
                                (n = Math.imul(U, ct)),
                                (i =
                                    ((i = Math.imul(U, ft)) +
                                        Math.imul(D, ct)) |
                                    0),
                                (s = Math.imul(D, ft));
                            var It =
                                (((h + (n = (n + Math.imul(C, pt)) | 0)) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = (i + Math.imul(C, mt)) | 0) +
                                                Math.imul(L, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            (h =
                                ((((s = (s + Math.imul(L, mt)) | 0) +
                                    (i >>> 13)) |
                                    0) +
                                    (It >>> 26)) |
                                0),
                                (It &= 67108863);
                            var Bt =
                                (((h + (n = Math.imul(U, pt))) | 0) +
                                    ((8191 &
                                        (i =
                                            ((i = Math.imul(U, mt)) +
                                                Math.imul(D, pt)) |
                                            0)) <<
                                        13)) |
                                0;
                            return (
                                (h =
                                    ((((s = Math.imul(D, mt)) + (i >>> 13)) |
                                        0) +
                                        (Bt >>> 26)) |
                                    0),
                                (Bt &= 67108863),
                                (u[0] = gt),
                                (u[1] = yt),
                                (u[2] = vt),
                                (u[3] = wt),
                                (u[4] = bt),
                                (u[5] = Mt),
                                (u[6] = Et),
                                (u[7] = _t),
                                (u[8] = At),
                                (u[9] = Nt),
                                (u[10] = Ot),
                                (u[11] = St),
                                (u[12] = xt),
                                (u[13] = Pt),
                                (u[14] = Tt),
                                (u[15] = Rt),
                                (u[16] = kt),
                                (u[17] = It),
                                (u[18] = Bt),
                                0 !== h && ((u[19] = h), r.length++),
                                r
                            );
                        };
                        function p(t, e, r) {
                            return new m().mulp(t, e, r);
                        }
                        function m(t, e) {
                            (this.x = t), (this.y = e);
                        }
                        Math.imul || (d = f),
                            (s.prototype.mulTo = function(t, e) {
                                var r,
                                    n = this.length + t.length;
                                return (
                                    (r =
                                        10 === this.length && 10 === t.length
                                            ? d(this, t, e)
                                            : n < 63
                                            ? f(this, t, e)
                                            : n < 1024
                                            ? (function(t, e, r) {
                                                  (r.negative =
                                                      e.negative ^ t.negative),
                                                      (r.length =
                                                          t.length + e.length);
                                                  for (
                                                      var n = 0, i = 0, s = 0;
                                                      s < r.length - 1;
                                                      s++
                                                  ) {
                                                      var o = i;
                                                      i = 0;
                                                      for (
                                                          var a = 67108863 & n,
                                                              u = Math.min(
                                                                  s,
                                                                  e.length - 1
                                                              ),
                                                              h = Math.max(
                                                                  0,
                                                                  s -
                                                                      t.length +
                                                                      1
                                                              );
                                                          h <= u;
                                                          h++
                                                      ) {
                                                          var l = s - h,
                                                              c =
                                                                  (0 |
                                                                      t.words[
                                                                          l
                                                                      ]) *
                                                                  (0 |
                                                                      e.words[
                                                                          h
                                                                      ]),
                                                              f = 67108863 & c;
                                                          (a =
                                                              67108863 &
                                                              (f =
                                                                  (f + a) | 0)),
                                                              (i +=
                                                                  (o =
                                                                      ((o =
                                                                          (o +
                                                                              ((c /
                                                                                  67108864) |
                                                                                  0)) |
                                                                          0) +
                                                                          (f >>>
                                                                              26)) |
                                                                      0) >>>
                                                                  26),
                                                              (o &= 67108863);
                                                      }
                                                      (r.words[s] = a),
                                                          (n = o),
                                                          (o = i);
                                                  }
                                                  return (
                                                      0 !== n
                                                          ? (r.words[s] = n)
                                                          : r.length--,
                                                      r.strip()
                                                  );
                                              })(this, t, e)
                                            : p(this, t, e)),
                                    r
                                );
                            }),
                            (m.prototype.makeRBT = function(t) {
                                for (
                                    var e = new Array(t),
                                        r = s.prototype._countBits(t) - 1,
                                        n = 0;
                                    n < t;
                                    n++
                                )
                                    e[n] = this.revBin(n, r, t);
                                return e;
                            }),
                            (m.prototype.revBin = function(t, e, r) {
                                if (0 === t || t === r - 1) return t;
                                for (var n = 0, i = 0; i < e; i++)
                                    (n |= (1 & t) << (e - i - 1)), (t >>= 1);
                                return n;
                            }),
                            (m.prototype.permute = function(t, e, r, n, i, s) {
                                for (var o = 0; o < s; o++)
                                    (n[o] = e[t[o]]), (i[o] = r[t[o]]);
                            }),
                            (m.prototype.transform = function(
                                t,
                                e,
                                r,
                                n,
                                i,
                                s
                            ) {
                                this.permute(s, t, e, r, n, i);
                                for (var o = 1; o < i; o <<= 1)
                                    for (
                                        var a = o << 1,
                                            u = Math.cos((2 * Math.PI) / a),
                                            h = Math.sin((2 * Math.PI) / a),
                                            l = 0;
                                        l < i;
                                        l += a
                                    )
                                        for (
                                            var c = u, f = h, d = 0;
                                            d < o;
                                            d++
                                        ) {
                                            var p = r[l + d],
                                                m = n[l + d],
                                                g = r[l + d + o],
                                                y = n[l + d + o],
                                                v = c * g - f * y;
                                            (y = c * y + f * g),
                                                (g = v),
                                                (r[l + d] = p + g),
                                                (n[l + d] = m + y),
                                                (r[l + d + o] = p - g),
                                                (n[l + d + o] = m - y),
                                                d !== a &&
                                                    ((v = u * c - h * f),
                                                    (f = u * f + h * c),
                                                    (c = v));
                                        }
                            }),
                            (m.prototype.guessLen13b = function(t, e) {
                                var r = 1 | Math.max(e, t),
                                    n = 1 & r,
                                    i = 0;
                                for (r = (r / 2) | 0; r; r >>>= 1) i++;
                                return 1 << (i + 1 + n);
                            }),
                            (m.prototype.conjugate = function(t, e, r) {
                                if (!(r <= 1))
                                    for (var n = 0; n < r / 2; n++) {
                                        var i = t[n];
                                        (t[n] = t[r - n - 1]),
                                            (t[r - n - 1] = i),
                                            (i = e[n]),
                                            (e[n] = -e[r - n - 1]),
                                            (e[r - n - 1] = -i);
                                    }
                            }),
                            (m.prototype.normalize13b = function(t, e) {
                                for (var r = 0, n = 0; n < e / 2; n++) {
                                    var i =
                                        8192 * Math.round(t[2 * n + 1] / e) +
                                        Math.round(t[2 * n] / e) +
                                        r;
                                    (t[n] = 67108863 & i),
                                        (r =
                                            i < 67108864
                                                ? 0
                                                : (i / 67108864) | 0);
                                }
                                return t;
                            }),
                            (m.prototype.convert13b = function(t, e, r, i) {
                                for (var s = 0, o = 0; o < e; o++)
                                    (s += 0 | t[o]),
                                        (r[2 * o] = 8191 & s),
                                        (s >>>= 13),
                                        (r[2 * o + 1] = 8191 & s),
                                        (s >>>= 13);
                                for (o = 2 * e; o < i; ++o) r[o] = 0;
                                n(0 === s), n(!(-8192 & s));
                            }),
                            (m.prototype.stub = function(t) {
                                for (var e = new Array(t), r = 0; r < t; r++)
                                    e[r] = 0;
                                return e;
                            }),
                            (m.prototype.mulp = function(t, e, r) {
                                var n =
                                        2 *
                                        this.guessLen13b(t.length, e.length),
                                    i = this.makeRBT(n),
                                    s = this.stub(n),
                                    o = new Array(n),
                                    a = new Array(n),
                                    u = new Array(n),
                                    h = new Array(n),
                                    l = new Array(n),
                                    c = new Array(n),
                                    f = r.words;
                                (f.length = n),
                                    this.convert13b(t.words, t.length, o, n),
                                    this.convert13b(e.words, e.length, h, n),
                                    this.transform(o, s, a, u, n, i),
                                    this.transform(h, s, l, c, n, i);
                                for (var d = 0; d < n; d++) {
                                    var p = a[d] * l[d] - u[d] * c[d];
                                    (u[d] = a[d] * c[d] + u[d] * l[d]),
                                        (a[d] = p);
                                }
                                return (
                                    this.conjugate(a, u, n),
                                    this.transform(a, u, f, s, n, i),
                                    this.conjugate(f, s, n),
                                    this.normalize13b(f, n),
                                    (r.negative = t.negative ^ e.negative),
                                    (r.length = t.length + e.length),
                                    r.strip()
                                );
                            }),
                            (s.prototype.mul = function(t) {
                                var e = new s(null);
                                return (
                                    (e.words = new Array(
                                        this.length + t.length
                                    )),
                                    this.mulTo(t, e)
                                );
                            }),
                            (s.prototype.mulf = function(t) {
                                var e = new s(null);
                                return (
                                    (e.words = new Array(
                                        this.length + t.length
                                    )),
                                    p(this, t, e)
                                );
                            }),
                            (s.prototype.imul = function(t) {
                                return this.clone().mulTo(t, this);
                            }),
                            (s.prototype.imuln = function(t) {
                                n('number' == typeof t), n(t < 67108864);
                                for (var e = 0, r = 0; r < this.length; r++) {
                                    var i = (0 | this.words[r]) * t,
                                        s = (67108863 & i) + (67108863 & e);
                                    (e >>= 26),
                                        (e += (i / 67108864) | 0),
                                        (e += s >>> 26),
                                        (this.words[r] = 67108863 & s);
                                }
                                return (
                                    0 !== e &&
                                        ((this.words[r] = e), this.length++),
                                    this
                                );
                            }),
                            (s.prototype.muln = function(t) {
                                return this.clone().imuln(t);
                            }),
                            (s.prototype.sqr = function() {
                                return this.mul(this);
                            }),
                            (s.prototype.isqr = function() {
                                return this.imul(this.clone());
                            }),
                            (s.prototype.pow = function(t) {
                                var e = (function(t) {
                                    for (
                                        var e = new Array(t.bitLength()), r = 0;
                                        r < e.length;
                                        r++
                                    ) {
                                        var n = (r / 26) | 0,
                                            i = r % 26;
                                        e[r] = (t.words[n] & (1 << i)) >>> i;
                                    }
                                    return e;
                                })(t);
                                if (0 === e.length) return new s(1);
                                for (
                                    var r = this, n = 0;
                                    n < e.length && 0 === e[n];
                                    n++, r = r.sqr()
                                );
                                if (++n < e.length)
                                    for (
                                        var i = r.sqr();
                                        n < e.length;
                                        n++, i = i.sqr()
                                    )
                                        0 !== e[n] && (r = r.mul(i));
                                return r;
                            }),
                            (s.prototype.iushln = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e,
                                    r = t % 26,
                                    i = (t - r) / 26,
                                    s = (67108863 >>> (26 - r)) << (26 - r);
                                if (0 !== r) {
                                    var o = 0;
                                    for (e = 0; e < this.length; e++) {
                                        var a = this.words[e] & s,
                                            u = ((0 | this.words[e]) - a) << r;
                                        (this.words[e] = u | o),
                                            (o = a >>> (26 - r));
                                    }
                                    o && ((this.words[e] = o), this.length++);
                                }
                                if (0 !== i) {
                                    for (e = this.length - 1; e >= 0; e--)
                                        this.words[e + i] = this.words[e];
                                    for (e = 0; e < i; e++) this.words[e] = 0;
                                    this.length += i;
                                }
                                return this.strip();
                            }),
                            (s.prototype.ishln = function(t) {
                                return n(0 === this.negative), this.iushln(t);
                            }),
                            (s.prototype.iushrn = function(t, e, r) {
                                var i;
                                n('number' == typeof t && t >= 0),
                                    (i = e ? (e - (e % 26)) / 26 : 0);
                                var s = t % 26,
                                    o = Math.min((t - s) / 26, this.length),
                                    a = 67108863 ^ ((67108863 >>> s) << s),
                                    u = r;
                                if (((i -= o), (i = Math.max(0, i)), u)) {
                                    for (var h = 0; h < o; h++)
                                        u.words[h] = this.words[h];
                                    u.length = o;
                                }
                                if (0 === o);
                                else if (this.length > o)
                                    for (
                                        this.length -= o, h = 0;
                                        h < this.length;
                                        h++
                                    )
                                        this.words[h] = this.words[h + o];
                                else (this.words[0] = 0), (this.length = 1);
                                var l = 0;
                                for (
                                    h = this.length - 1;
                                    h >= 0 && (0 !== l || h >= i);
                                    h--
                                ) {
                                    var c = 0 | this.words[h];
                                    (this.words[h] =
                                        (l << (26 - s)) | (c >>> s)),
                                        (l = c & a);
                                }
                                return (
                                    u && 0 !== l && (u.words[u.length++] = l),
                                    0 === this.length &&
                                        ((this.words[0] = 0),
                                        (this.length = 1)),
                                    this.strip()
                                );
                            }),
                            (s.prototype.ishrn = function(t, e, r) {
                                return (
                                    n(0 === this.negative), this.iushrn(t, e, r)
                                );
                            }),
                            (s.prototype.shln = function(t) {
                                return this.clone().ishln(t);
                            }),
                            (s.prototype.ushln = function(t) {
                                return this.clone().iushln(t);
                            }),
                            (s.prototype.shrn = function(t) {
                                return this.clone().ishrn(t);
                            }),
                            (s.prototype.ushrn = function(t) {
                                return this.clone().iushrn(t);
                            }),
                            (s.prototype.testn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = t % 26,
                                    r = (t - e) / 26,
                                    i = 1 << e;
                                return !(
                                    this.length <= r || !(this.words[r] & i)
                                );
                            }),
                            (s.prototype.imaskn = function(t) {
                                n('number' == typeof t && t >= 0);
                                var e = t % 26,
                                    r = (t - e) / 26;
                                if (
                                    (n(
                                        0 === this.negative,
                                        'imaskn works only with positive numbers'
                                    ),
                                    this.length <= r)
                                )
                                    return this;
                                if (
                                    (0 !== e && r++,
                                    (this.length = Math.min(r, this.length)),
                                    0 !== e)
                                ) {
                                    var i = 67108863 ^ ((67108863 >>> e) << e);
                                    this.words[this.length - 1] &= i;
                                }
                                return this.strip();
                            }),
                            (s.prototype.maskn = function(t) {
                                return this.clone().imaskn(t);
                            }),
                            (s.prototype.iaddn = function(t) {
                                return (
                                    n('number' == typeof t),
                                    n(t < 67108864),
                                    t < 0
                                        ? this.isubn(-t)
                                        : 0 !== this.negative
                                        ? 1 === this.length &&
                                          (0 | this.words[0]) < t
                                            ? ((this.words[0] =
                                                  t - (0 | this.words[0])),
                                              (this.negative = 0),
                                              this)
                                            : ((this.negative = 0),
                                              this.isubn(t),
                                              (this.negative = 1),
                                              this)
                                        : this._iaddn(t)
                                );
                            }),
                            (s.prototype._iaddn = function(t) {
                                this.words[0] += t;
                                for (
                                    var e = 0;
                                    e < this.length &&
                                    this.words[e] >= 67108864;
                                    e++
                                )
                                    (this.words[e] -= 67108864),
                                        e === this.length - 1
                                            ? (this.words[e + 1] = 1)
                                            : this.words[e + 1]++;
                                return (
                                    (this.length = Math.max(
                                        this.length,
                                        e + 1
                                    )),
                                    this
                                );
                            }),
                            (s.prototype.isubn = function(t) {
                                if (
                                    (n('number' == typeof t),
                                    n(t < 67108864),
                                    t < 0)
                                )
                                    return this.iaddn(-t);
                                if (0 !== this.negative)
                                    return (
                                        (this.negative = 0),
                                        this.iaddn(t),
                                        (this.negative = 1),
                                        this
                                    );
                                if (
                                    ((this.words[0] -= t),
                                    1 === this.length && this.words[0] < 0)
                                )
                                    (this.words[0] = -this.words[0]),
                                        (this.negative = 1);
                                else
                                    for (
                                        var e = 0;
                                        e < this.length && this.words[e] < 0;
                                        e++
                                    )
                                        (this.words[e] += 67108864),
                                            (this.words[e + 1] -= 1);
                                return this.strip();
                            }),
                            (s.prototype.addn = function(t) {
                                return this.clone().iaddn(t);
                            }),
                            (s.prototype.subn = function(t) {
                                return this.clone().isubn(t);
                            }),
                            (s.prototype.iabs = function() {
                                return (this.negative = 0), this;
                            }),
                            (s.prototype.abs = function() {
                                return this.clone().iabs();
                            }),
                            (s.prototype._ishlnsubmul = function(t, e, r) {
                                var i,
                                    s,
                                    o = t.length + r;
                                this._expand(o);
                                var a = 0;
                                for (i = 0; i < t.length; i++) {
                                    s = (0 | this.words[i + r]) + a;
                                    var u = (0 | t.words[i]) * e;
                                    (a =
                                        ((s -= 67108863 & u) >> 26) -
                                        ((u / 67108864) | 0)),
                                        (this.words[i + r] = 67108863 & s);
                                }
                                for (; i < this.length - r; i++)
                                    (a =
                                        (s = (0 | this.words[i + r]) + a) >>
                                        26),
                                        (this.words[i + r] = 67108863 & s);
                                if (0 === a) return this.strip();
                                for (
                                    n(-1 === a), a = 0, i = 0;
                                    i < this.length;
                                    i++
                                )
                                    (a = (s = -(0 | this.words[i]) + a) >> 26),
                                        (this.words[i] = 67108863 & s);
                                return (this.negative = 1), this.strip();
                            }),
                            (s.prototype._wordDiv = function(t, e) {
                                var r = (this.length, t.length),
                                    n = this.clone(),
                                    i = t,
                                    o = 0 | i.words[i.length - 1];
                                0 != (r = 26 - this._countBits(o)) &&
                                    ((i = i.ushln(r)),
                                    n.iushln(r),
                                    (o = 0 | i.words[i.length - 1]));
                                var a,
                                    u = n.length - i.length;
                                if ('mod' !== e) {
                                    ((a = new s(null)).length = u + 1),
                                        (a.words = new Array(a.length));
                                    for (var h = 0; h < a.length; h++)
                                        a.words[h] = 0;
                                }
                                var l = n.clone()._ishlnsubmul(i, 1, u);
                                0 === l.negative &&
                                    ((n = l), a && (a.words[u] = 1));
                                for (var c = u - 1; c >= 0; c--) {
                                    var f =
                                        67108864 * (0 | n.words[i.length + c]) +
                                        (0 | n.words[i.length + c - 1]);
                                    for (
                                        f = Math.min((f / o) | 0, 67108863),
                                            n._ishlnsubmul(i, f, c);
                                        0 !== n.negative;

                                    )
                                        f--,
                                            (n.negative = 0),
                                            n._ishlnsubmul(i, 1, c),
                                            n.isZero() || (n.negative ^= 1);
                                    a && (a.words[c] = f);
                                }
                                return (
                                    a && a.strip(),
                                    n.strip(),
                                    'div' !== e && 0 !== r && n.iushrn(r),
                                    { div: a || null, mod: n }
                                );
                            }),
                            (s.prototype.divmod = function(t, e, r) {
                                return (
                                    n(!t.isZero()),
                                    this.isZero()
                                        ? { div: new s(0), mod: new s(0) }
                                        : 0 !== this.negative &&
                                          0 === t.negative
                                        ? ((a = this.neg().divmod(t, e)),
                                          'mod' !== e && (i = a.div.neg()),
                                          'div' !== e &&
                                              ((o = a.mod.neg()),
                                              r &&
                                                  0 !== o.negative &&
                                                  o.iadd(t)),
                                          { div: i, mod: o })
                                        : 0 === this.negative &&
                                          0 !== t.negative
                                        ? ((a = this.divmod(t.neg(), e)),
                                          'mod' !== e && (i = a.div.neg()),
                                          { div: i, mod: a.mod })
                                        : this.negative & t.negative
                                        ? ((a = this.neg().divmod(t.neg(), e)),
                                          'div' !== e &&
                                              ((o = a.mod.neg()),
                                              r &&
                                                  0 !== o.negative &&
                                                  o.isub(t)),
                                          { div: a.div, mod: o })
                                        : t.length > this.length ||
                                          this.cmp(t) < 0
                                        ? { div: new s(0), mod: this }
                                        : 1 === t.length
                                        ? 'div' === e
                                            ? {
                                                  div: this.divn(t.words[0]),
                                                  mod: null,
                                              }
                                            : 'mod' === e
                                            ? {
                                                  div: null,
                                                  mod: new s(
                                                      this.modn(t.words[0])
                                                  ),
                                              }
                                            : {
                                                  div: this.divn(t.words[0]),
                                                  mod: new s(
                                                      this.modn(t.words[0])
                                                  ),
                                              }
                                        : this._wordDiv(t, e)
                                );
                                var i, o, a;
                            }),
                            (s.prototype.div = function(t) {
                                return this.divmod(t, 'div', !1).div;
                            }),
                            (s.prototype.mod = function(t) {
                                return this.divmod(t, 'mod', !1).mod;
                            }),
                            (s.prototype.umod = function(t) {
                                return this.divmod(t, 'mod', !0).mod;
                            }),
                            (s.prototype.divRound = function(t) {
                                var e = this.divmod(t);
                                if (e.mod.isZero()) return e.div;
                                var r =
                                        0 !== e.div.negative
                                            ? e.mod.isub(t)
                                            : e.mod,
                                    n = t.ushrn(1),
                                    i = t.andln(1),
                                    s = r.cmp(n);
                                return s < 0 || (1 === i && 0 === s)
                                    ? e.div
                                    : 0 !== e.div.negative
                                    ? e.div.isubn(1)
                                    : e.div.iaddn(1);
                            }),
                            (s.prototype.modn = function(t) {
                                n(t <= 67108863);
                                for (
                                    var e = (1 << 26) % t,
                                        r = 0,
                                        i = this.length - 1;
                                    i >= 0;
                                    i--
                                )
                                    r = (e * r + (0 | this.words[i])) % t;
                                return r;
                            }),
                            (s.prototype.idivn = function(t) {
                                n(t <= 67108863);
                                for (
                                    var e = 0, r = this.length - 1;
                                    r >= 0;
                                    r--
                                ) {
                                    var i = (0 | this.words[r]) + 67108864 * e;
                                    (this.words[r] = (i / t) | 0), (e = i % t);
                                }
                                return this.strip();
                            }),
                            (s.prototype.divn = function(t) {
                                return this.clone().idivn(t);
                            }),
                            (s.prototype.egcd = function(t) {
                                n(0 === t.negative), n(!t.isZero());
                                var e = this,
                                    r = t.clone();
                                e = 0 !== e.negative ? e.umod(t) : e.clone();
                                for (
                                    var i = new s(1),
                                        o = new s(0),
                                        a = new s(0),
                                        u = new s(1),
                                        h = 0;
                                    e.isEven() && r.isEven();

                                )
                                    e.iushrn(1), r.iushrn(1), ++h;
                                for (
                                    var l = r.clone(), c = e.clone();
                                    !e.isZero();

                                ) {
                                    for (
                                        var f = 0, d = 1;
                                        !(e.words[0] & d) && f < 26;
                                        ++f, d <<= 1
                                    );
                                    if (f > 0)
                                        for (e.iushrn(f); f-- > 0; )
                                            (i.isOdd() || o.isOdd()) &&
                                                (i.iadd(l), o.isub(c)),
                                                i.iushrn(1),
                                                o.iushrn(1);
                                    for (
                                        var p = 0, m = 1;
                                        !(r.words[0] & m) && p < 26;
                                        ++p, m <<= 1
                                    );
                                    if (p > 0)
                                        for (r.iushrn(p); p-- > 0; )
                                            (a.isOdd() || u.isOdd()) &&
                                                (a.iadd(l), u.isub(c)),
                                                a.iushrn(1),
                                                u.iushrn(1);
                                    e.cmp(r) >= 0
                                        ? (e.isub(r), i.isub(a), o.isub(u))
                                        : (r.isub(e), a.isub(i), u.isub(o));
                                }
                                return { a, b: u, gcd: r.iushln(h) };
                            }),
                            (s.prototype._invmp = function(t) {
                                n(0 === t.negative), n(!t.isZero());
                                var e = this,
                                    r = t.clone();
                                e = 0 !== e.negative ? e.umod(t) : e.clone();
                                for (
                                    var i,
                                        o = new s(1),
                                        a = new s(0),
                                        u = r.clone();
                                    e.cmpn(1) > 0 && r.cmpn(1) > 0;

                                ) {
                                    for (
                                        var h = 0, l = 1;
                                        !(e.words[0] & l) && h < 26;
                                        ++h, l <<= 1
                                    );
                                    if (h > 0)
                                        for (e.iushrn(h); h-- > 0; )
                                            o.isOdd() && o.iadd(u), o.iushrn(1);
                                    for (
                                        var c = 0, f = 1;
                                        !(r.words[0] & f) && c < 26;
                                        ++c, f <<= 1
                                    );
                                    if (c > 0)
                                        for (r.iushrn(c); c-- > 0; )
                                            a.isOdd() && a.iadd(u), a.iushrn(1);
                                    e.cmp(r) >= 0
                                        ? (e.isub(r), o.isub(a))
                                        : (r.isub(e), a.isub(o));
                                }
                                return (
                                    (i = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 &&
                                        i.iadd(t),
                                    i
                                );
                            }),
                            (s.prototype.gcd = function(t) {
                                if (this.isZero()) return t.abs();
                                if (t.isZero()) return this.abs();
                                var e = this.clone(),
                                    r = t.clone();
                                (e.negative = 0), (r.negative = 0);
                                for (var n = 0; e.isEven() && r.isEven(); n++)
                                    e.iushrn(1), r.iushrn(1);
                                for (;;) {
                                    for (; e.isEven(); ) e.iushrn(1);
                                    for (; r.isEven(); ) r.iushrn(1);
                                    var i = e.cmp(r);
                                    if (i < 0) {
                                        var s = e;
                                        (e = r), (r = s);
                                    } else if (0 === i || 0 === r.cmpn(1))
                                        break;
                                    e.isub(r);
                                }
                                return r.iushln(n);
                            }),
                            (s.prototype.invm = function(t) {
                                return this.egcd(t).a.umod(t);
                            }),
                            (s.prototype.isEven = function() {
                                return !(1 & this.words[0]);
                            }),
                            (s.prototype.isOdd = function() {
                                return !(1 & ~this.words[0]);
                            }),
                            (s.prototype.andln = function(t) {
                                return this.words[0] & t;
                            }),
                            (s.prototype.bincn = function(t) {
                                n('number' == typeof t);
                                var e = t % 26,
                                    r = (t - e) / 26,
                                    i = 1 << e;
                                if (this.length <= r)
                                    return (
                                        this._expand(r + 1),
                                        (this.words[r] |= i),
                                        this
                                    );
                                for (
                                    var s = i, o = r;
                                    0 !== s && o < this.length;
                                    o++
                                ) {
                                    var a = 0 | this.words[o];
                                    (s = (a += s) >>> 26),
                                        (a &= 67108863),
                                        (this.words[o] = a);
                                }
                                return (
                                    0 !== s &&
                                        ((this.words[o] = s), this.length++),
                                    this
                                );
                            }),
                            (s.prototype.isZero = function() {
                                return 1 === this.length && 0 === this.words[0];
                            }),
                            (s.prototype.cmpn = function(t) {
                                var e,
                                    r = t < 0;
                                if (0 !== this.negative && !r) return -1;
                                if (0 === this.negative && r) return 1;
                                if ((this.strip(), this.length > 1)) e = 1;
                                else {
                                    r && (t = -t),
                                        n(t <= 67108863, 'Number is too big');
                                    var i = 0 | this.words[0];
                                    e = i === t ? 0 : i < t ? -1 : 1;
                                }
                                return 0 !== this.negative ? 0 | -e : e;
                            }),
                            (s.prototype.cmp = function(t) {
                                if (0 !== this.negative && 0 === t.negative)
                                    return -1;
                                if (0 === this.negative && 0 !== t.negative)
                                    return 1;
                                var e = this.ucmp(t);
                                return 0 !== this.negative ? 0 | -e : e;
                            }),
                            (s.prototype.ucmp = function(t) {
                                if (this.length > t.length) return 1;
                                if (this.length < t.length) return -1;
                                for (
                                    var e = 0, r = this.length - 1;
                                    r >= 0;
                                    r--
                                ) {
                                    var n = 0 | this.words[r],
                                        i = 0 | t.words[r];
                                    if (n !== i) {
                                        n < i ? (e = -1) : n > i && (e = 1);
                                        break;
                                    }
                                }
                                return e;
                            }),
                            (s.prototype.gtn = function(t) {
                                return 1 === this.cmpn(t);
                            }),
                            (s.prototype.gt = function(t) {
                                return 1 === this.cmp(t);
                            }),
                            (s.prototype.gten = function(t) {
                                return this.cmpn(t) >= 0;
                            }),
                            (s.prototype.gte = function(t) {
                                return this.cmp(t) >= 0;
                            }),
                            (s.prototype.ltn = function(t) {
                                return -1 === this.cmpn(t);
                            }),
                            (s.prototype.lt = function(t) {
                                return -1 === this.cmp(t);
                            }),
                            (s.prototype.lten = function(t) {
                                return this.cmpn(t) <= 0;
                            }),
                            (s.prototype.lte = function(t) {
                                return this.cmp(t) <= 0;
                            }),
                            (s.prototype.eqn = function(t) {
                                return 0 === this.cmpn(t);
                            }),
                            (s.prototype.eq = function(t) {
                                return 0 === this.cmp(t);
                            }),
                            (s.red = function(t) {
                                return new E(t);
                            }),
                            (s.prototype.toRed = function(t) {
                                return (
                                    n(
                                        !this.red,
                                        'Already a number in reduction context'
                                    ),
                                    n(
                                        0 === this.negative,
                                        'red works only with positives'
                                    ),
                                    t.convertTo(this)._forceRed(t)
                                );
                            }),
                            (s.prototype.fromRed = function() {
                                return (
                                    n(
                                        this.red,
                                        'fromRed works only with numbers in reduction context'
                                    ),
                                    this.red.convertFrom(this)
                                );
                            }),
                            (s.prototype._forceRed = function(t) {
                                return (this.red = t), this;
                            }),
                            (s.prototype.forceRed = function(t) {
                                return (
                                    n(
                                        !this.red,
                                        'Already a number in reduction context'
                                    ),
                                    this._forceRed(t)
                                );
                            }),
                            (s.prototype.redAdd = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redAdd works only with red numbers'
                                    ),
                                    this.red.add(this, t)
                                );
                            }),
                            (s.prototype.redIAdd = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redIAdd works only with red numbers'
                                    ),
                                    this.red.iadd(this, t)
                                );
                            }),
                            (s.prototype.redSub = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redSub works only with red numbers'
                                    ),
                                    this.red.sub(this, t)
                                );
                            }),
                            (s.prototype.redISub = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redISub works only with red numbers'
                                    ),
                                    this.red.isub(this, t)
                                );
                            }),
                            (s.prototype.redShl = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redShl works only with red numbers'
                                    ),
                                    this.red.shl(this, t)
                                );
                            }),
                            (s.prototype.redMul = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redMul works only with red numbers'
                                    ),
                                    this.red._verify2(this, t),
                                    this.red.mul(this, t)
                                );
                            }),
                            (s.prototype.redIMul = function(t) {
                                return (
                                    n(
                                        this.red,
                                        'redMul works only with red numbers'
                                    ),
                                    this.red._verify2(this, t),
                                    this.red.imul(this, t)
                                );
                            }),
                            (s.prototype.redSqr = function() {
                                return (
                                    n(
                                        this.red,
                                        'redSqr works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.sqr(this)
                                );
                            }),
                            (s.prototype.redISqr = function() {
                                return (
                                    n(
                                        this.red,
                                        'redISqr works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.isqr(this)
                                );
                            }),
                            (s.prototype.redSqrt = function() {
                                return (
                                    n(
                                        this.red,
                                        'redSqrt works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.sqrt(this)
                                );
                            }),
                            (s.prototype.redInvm = function() {
                                return (
                                    n(
                                        this.red,
                                        'redInvm works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.invm(this)
                                );
                            }),
                            (s.prototype.redNeg = function() {
                                return (
                                    n(
                                        this.red,
                                        'redNeg works only with red numbers'
                                    ),
                                    this.red._verify1(this),
                                    this.red.neg(this)
                                );
                            }),
                            (s.prototype.redPow = function(t) {
                                return (
                                    n(this.red && !t.red, 'redPow(normalNum)'),
                                    this.red._verify1(this),
                                    this.red.pow(this, t)
                                );
                            });
                        var g = {
                            k256: null,
                            p224: null,
                            p192: null,
                            p25519: null,
                        };
                        function y(t, e) {
                            (this.name = t),
                                (this.p = new s(e, 16)),
                                (this.n = this.p.bitLength()),
                                (this.k = new s(1).iushln(this.n).isub(this.p)),
                                (this.tmp = this._tmp());
                        }
                        function v() {
                            y.call(
                                this,
                                'k256',
                                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
                            );
                        }
                        function w() {
                            y.call(
                                this,
                                'p224',
                                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
                            );
                        }
                        function b() {
                            y.call(
                                this,
                                'p192',
                                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
                            );
                        }
                        function M() {
                            y.call(
                                this,
                                '25519',
                                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
                            );
                        }
                        function E(t) {
                            if ('string' == typeof t) {
                                var e = s._prime(t);
                                (this.m = e.p), (this.prime = e);
                            } else
                                n(t.gtn(1), 'modulus must be greater than 1'),
                                    (this.m = t),
                                    (this.prime = null);
                        }
                        function _(t) {
                            E.call(this, t),
                                (this.shift = this.m.bitLength()),
                                this.shift % 26 != 0 &&
                                    (this.shift += 26 - (this.shift % 26)),
                                (this.r = new s(1).iushln(this.shift)),
                                (this.r2 = this.imod(this.r.sqr())),
                                (this.rinv = this.r._invmp(this.m)),
                                (this.minv = this.rinv
                                    .mul(this.r)
                                    .isubn(1)
                                    .div(this.m)),
                                (this.minv = this.minv.umod(this.r)),
                                (this.minv = this.r.sub(this.minv));
                        }
                        (y.prototype._tmp = function() {
                            var t = new s(null);
                            return (
                                (t.words = new Array(Math.ceil(this.n / 13))), t
                            );
                        }),
                            (y.prototype.ireduce = function(t) {
                                var e,
                                    r = t;
                                do {
                                    this.split(r, this.tmp),
                                        (e = (r = (r = this.imulK(r)).iadd(
                                            this.tmp
                                        )).bitLength());
                                } while (e > this.n);
                                var n = e < this.n ? -1 : r.ucmp(this.p);
                                return (
                                    0 === n
                                        ? ((r.words[0] = 0), (r.length = 1))
                                        : n > 0
                                        ? r.isub(this.p)
                                        : r.strip(),
                                    r
                                );
                            }),
                            (y.prototype.split = function(t, e) {
                                t.iushrn(this.n, 0, e);
                            }),
                            (y.prototype.imulK = function(t) {
                                return t.imul(this.k);
                            }),
                            i(v, y),
                            (v.prototype.split = function(t, e) {
                                for (
                                    var r = 4194303,
                                        n = Math.min(t.length, 9),
                                        i = 0;
                                    i < n;
                                    i++
                                )
                                    e.words[i] = t.words[i];
                                if (((e.length = n), t.length <= 9))
                                    return (
                                        (t.words[0] = 0), void (t.length = 1)
                                    );
                                var s = t.words[9];
                                for (
                                    e.words[e.length++] = s & r, i = 10;
                                    i < t.length;
                                    i++
                                ) {
                                    var o = 0 | t.words[i];
                                    (t.words[i - 10] =
                                        ((o & r) << 4) | (s >>> 22)),
                                        (s = o);
                                }
                                (s >>>= 22),
                                    (t.words[i - 10] = s),
                                    0 === s && t.length > 10
                                        ? (t.length -= 10)
                                        : (t.length -= 9);
                            }),
                            (v.prototype.imulK = function(t) {
                                (t.words[t.length] = 0),
                                    (t.words[t.length + 1] = 0),
                                    (t.length += 2);
                                for (var e = 0, r = 0; r < t.length; r++) {
                                    var n = 0 | t.words[r];
                                    (e += 977 * n),
                                        (t.words[r] = 67108863 & e),
                                        (e = 64 * n + ((e / 67108864) | 0));
                                }
                                return (
                                    0 === t.words[t.length - 1] &&
                                        (t.length--,
                                        0 === t.words[t.length - 1] &&
                                            t.length--),
                                    t
                                );
                            }),
                            i(w, y),
                            i(b, y),
                            i(M, y),
                            (M.prototype.imulK = function(t) {
                                for (var e = 0, r = 0; r < t.length; r++) {
                                    var n = 19 * (0 | t.words[r]) + e,
                                        i = 67108863 & n;
                                    (n >>>= 26), (t.words[r] = i), (e = n);
                                }
                                return 0 !== e && (t.words[t.length++] = e), t;
                            }),
                            (s._prime = function(t) {
                                if (g[t]) return g[t];
                                var e;
                                if ('k256' === t) e = new v();
                                else if ('p224' === t) e = new w();
                                else if ('p192' === t) e = new b();
                                else {
                                    if ('p25519' !== t)
                                        throw new Error('Unknown prime ' + t);
                                    e = new M();
                                }
                                return (g[t] = e), e;
                            }),
                            (E.prototype._verify1 = function(t) {
                                n(
                                    0 === t.negative,
                                    'red works only with positives'
                                ),
                                    n(t.red, 'red works only with red numbers');
                            }),
                            (E.prototype._verify2 = function(t, e) {
                                n(
                                    !(t.negative | e.negative),
                                    'red works only with positives'
                                ),
                                    n(
                                        t.red && t.red === e.red,
                                        'red works only with red numbers'
                                    );
                            }),
                            (E.prototype.imod = function(t) {
                                return this.prime
                                    ? this.prime.ireduce(t)._forceRed(this)
                                    : t.umod(this.m)._forceRed(this);
                            }),
                            (E.prototype.neg = function(t) {
                                return t.isZero()
                                    ? t.clone()
                                    : this.m.sub(t)._forceRed(this);
                            }),
                            (E.prototype.add = function(t, e) {
                                this._verify2(t, e);
                                var r = t.add(e);
                                return (
                                    r.cmp(this.m) >= 0 && r.isub(this.m),
                                    r._forceRed(this)
                                );
                            }),
                            (E.prototype.iadd = function(t, e) {
                                this._verify2(t, e);
                                var r = t.iadd(e);
                                return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                            }),
                            (E.prototype.sub = function(t, e) {
                                this._verify2(t, e);
                                var r = t.sub(e);
                                return (
                                    r.cmpn(0) < 0 && r.iadd(this.m),
                                    r._forceRed(this)
                                );
                            }),
                            (E.prototype.isub = function(t, e) {
                                this._verify2(t, e);
                                var r = t.isub(e);
                                return r.cmpn(0) < 0 && r.iadd(this.m), r;
                            }),
                            (E.prototype.shl = function(t, e) {
                                return this._verify1(t), this.imod(t.ushln(e));
                            }),
                            (E.prototype.imul = function(t, e) {
                                return (
                                    this._verify2(t, e), this.imod(t.imul(e))
                                );
                            }),
                            (E.prototype.mul = function(t, e) {
                                return this._verify2(t, e), this.imod(t.mul(e));
                            }),
                            (E.prototype.isqr = function(t) {
                                return this.imul(t, t.clone());
                            }),
                            (E.prototype.sqr = function(t) {
                                return this.mul(t, t);
                            }),
                            (E.prototype.sqrt = function(t) {
                                if (t.isZero()) return t.clone();
                                var e = this.m.andln(3);
                                if ((n(e % 2 == 1), 3 === e)) {
                                    var r = this.m.add(new s(1)).iushrn(2);
                                    return this.pow(t, r);
                                }
                                for (
                                    var i = this.m.subn(1), o = 0;
                                    !i.isZero() && 0 === i.andln(1);

                                )
                                    o++, i.iushrn(1);
                                n(!i.isZero());
                                var a = new s(1).toRed(this),
                                    u = a.redNeg(),
                                    h = this.m.subn(1).iushrn(1),
                                    l = this.m.bitLength();
                                for (
                                    l = new s(2 * l * l).toRed(this);
                                    0 !== this.pow(l, h).cmp(u);

                                )
                                    l.redIAdd(u);
                                for (
                                    var c = this.pow(l, i),
                                        f = this.pow(t, i.addn(1).iushrn(1)),
                                        d = this.pow(t, i),
                                        p = o;
                                    0 !== d.cmp(a);

                                ) {
                                    for (var m = d, g = 0; 0 !== m.cmp(a); g++)
                                        m = m.redSqr();
                                    n(g < p);
                                    var y = this.pow(
                                        c,
                                        new s(1).iushln(p - g - 1)
                                    );
                                    (f = f.redMul(y)),
                                        (c = y.redSqr()),
                                        (d = d.redMul(c)),
                                        (p = g);
                                }
                                return f;
                            }),
                            (E.prototype.invm = function(t) {
                                var e = t._invmp(this.m);
                                return 0 !== e.negative
                                    ? ((e.negative = 0), this.imod(e).redNeg())
                                    : this.imod(e);
                            }),
                            (E.prototype.pow = function(t, e) {
                                if (e.isZero()) return new s(1).toRed(this);
                                if (0 === e.cmpn(1)) return t.clone();
                                var r = new Array(16);
                                (r[0] = new s(1).toRed(this)), (r[1] = t);
                                for (var n = 2; n < r.length; n++)
                                    r[n] = this.mul(r[n - 1], t);
                                var i = r[0],
                                    o = 0,
                                    a = 0,
                                    u = e.bitLength() % 26;
                                for (
                                    0 === u && (u = 26), n = e.length - 1;
                                    n >= 0;
                                    n--
                                ) {
                                    for (
                                        var h = e.words[n], l = u - 1;
                                        l >= 0;
                                        l--
                                    ) {
                                        var c = (h >> l) & 1;
                                        i !== r[0] && (i = this.sqr(i)),
                                            0 !== c || 0 !== o
                                                ? ((o <<= 1),
                                                  (o |= c),
                                                  (4 == ++a ||
                                                      (0 === n && 0 === l)) &&
                                                      ((i = this.mul(i, r[o])),
                                                      (a = 0),
                                                      (o = 0)))
                                                : (a = 0);
                                    }
                                    u = 26;
                                }
                                return i;
                            }),
                            (E.prototype.convertTo = function(t) {
                                var e = t.umod(this.m);
                                return e === t ? e.clone() : e;
                            }),
                            (E.prototype.convertFrom = function(t) {
                                var e = t.clone();
                                return (e.red = null), e;
                            }),
                            (s.mont = function(t) {
                                return new _(t);
                            }),
                            i(_, E),
                            (_.prototype.convertTo = function(t) {
                                return this.imod(t.ushln(this.shift));
                            }),
                            (_.prototype.convertFrom = function(t) {
                                var e = this.imod(t.mul(this.rinv));
                                return (e.red = null), e;
                            }),
                            (_.prototype.imul = function(t, e) {
                                if (t.isZero() || e.isZero())
                                    return (t.words[0] = 0), (t.length = 1), t;
                                var r = t.imul(e),
                                    n = r
                                        .maskn(this.shift)
                                        .mul(this.minv)
                                        .imaskn(this.shift)
                                        .mul(this.m),
                                    i = r.isub(n).iushrn(this.shift),
                                    s = i;
                                return (
                                    i.cmp(this.m) >= 0
                                        ? (s = i.isub(this.m))
                                        : i.cmpn(0) < 0 && (s = i.iadd(this.m)),
                                    s._forceRed(this)
                                );
                            }),
                            (_.prototype.mul = function(t, e) {
                                if (t.isZero() || e.isZero())
                                    return new s(0)._forceRed(this);
                                var r = t.mul(e),
                                    n = r
                                        .maskn(this.shift)
                                        .mul(this.minv)
                                        .imaskn(this.shift)
                                        .mul(this.m),
                                    i = r.isub(n).iushrn(this.shift),
                                    o = i;
                                return (
                                    i.cmp(this.m) >= 0
                                        ? (o = i.isub(this.m))
                                        : i.cmpn(0) < 0 && (o = i.iadd(this.m)),
                                    o._forceRed(this)
                                );
                            }),
                            (_.prototype.invm = function(t) {
                                return this.imod(
                                    t._invmp(this.m).mul(this.r2)
                                )._forceRed(this);
                            });
                    })((t = r.nmd(t)), this);
                },
                698: t => {
                    'function' == typeof Object.create
                        ? (t.exports = function(t, e) {
                              e &&
                                  ((t.super_ = e),
                                  (t.prototype = Object.create(e.prototype, {
                                      constructor: {
                                          value: t,
                                          enumerable: !1,
                                          writable: !0,
                                          configurable: !0,
                                      },
                                  })));
                          })
                        : (t.exports = function(t, e) {
                              if (e) {
                                  t.super_ = e;
                                  var r = function() {};
                                  (r.prototype = e.prototype),
                                      (t.prototype = new r()),
                                      (t.prototype.constructor = t);
                              }
                          });
                },
                328: (t, e, r) => {
                    r(624), (t.exports = self.fetch.bind(self));
                },
                176: (t, e, r) => {
                    !(function() {
                        'use strict';
                        var e = 'object' == typeof window ? window : {};
                        !e.JS_SHA3_NO_NODE_JS &&
                            'object' == typeof process &&
                            process.versions &&
                            process.versions.node &&
                            (e = r.g);
                        for (
                            var n = !e.JS_SHA3_NO_COMMON_JS && t.exports,
                                i = '0123456789abcdef'.split(''),
                                s = [0, 8, 16, 24],
                                o = [
                                    1,
                                    0,
                                    32898,
                                    0,
                                    32906,
                                    2147483648,
                                    2147516416,
                                    2147483648,
                                    32907,
                                    0,
                                    2147483649,
                                    0,
                                    2147516545,
                                    2147483648,
                                    32777,
                                    2147483648,
                                    138,
                                    0,
                                    136,
                                    0,
                                    2147516425,
                                    0,
                                    2147483658,
                                    0,
                                    2147516555,
                                    0,
                                    139,
                                    2147483648,
                                    32905,
                                    2147483648,
                                    32771,
                                    2147483648,
                                    32770,
                                    2147483648,
                                    128,
                                    2147483648,
                                    32778,
                                    0,
                                    2147483658,
                                    2147483648,
                                    2147516545,
                                    2147483648,
                                    32896,
                                    2147483648,
                                    2147483649,
                                    0,
                                    2147516424,
                                    2147483648,
                                ],
                                a = [224, 256, 384, 512],
                                u = ['hex', 'buffer', 'arrayBuffer', 'array'],
                                h = function(t, e, r) {
                                    return function(n) {
                                        return new b(t, e, t).update(n)[r]();
                                    };
                                },
                                l = function(t, e, r) {
                                    return function(n, i) {
                                        return new b(t, e, i).update(n)[r]();
                                    };
                                },
                                c = function(t, e) {
                                    var r = h(t, e, 'hex');
                                    (r.create = function() {
                                        return new b(t, e, t);
                                    }),
                                        (r.update = function(t) {
                                            return r.create().update(t);
                                        });
                                    for (var n = 0; n < u.length; ++n) {
                                        var i = u[n];
                                        r[i] = h(t, e, i);
                                    }
                                    return r;
                                },
                                f = [
                                    {
                                        name: 'keccak',
                                        padding: [1, 256, 65536, 16777216],
                                        bits: a,
                                        createMethod: c,
                                    },
                                    {
                                        name: 'sha3',
                                        padding: [6, 1536, 393216, 100663296],
                                        bits: a,
                                        createMethod: c,
                                    },
                                    {
                                        name: 'shake',
                                        padding: [31, 7936, 2031616, 520093696],
                                        bits: [128, 256],
                                        createMethod: function(t, e) {
                                            var r = l(t, e, 'hex');
                                            (r.create = function(r) {
                                                return new b(t, e, r);
                                            }),
                                                (r.update = function(t, e) {
                                                    return r
                                                        .create(e)
                                                        .update(t);
                                                });
                                            for (var n = 0; n < u.length; ++n) {
                                                var i = u[n];
                                                r[i] = l(t, e, i);
                                            }
                                            return r;
                                        },
                                    },
                                ],
                                d = {},
                                p = [],
                                m = 0;
                            m < f.length;
                            ++m
                        )
                            for (
                                var g = f[m], y = g.bits, v = 0;
                                v < y.length;
                                ++v
                            ) {
                                var w = g.name + '_' + y[v];
                                p.push(w),
                                    (d[w] = g.createMethod(y[v], g.padding));
                            }
                        function b(t, e, r) {
                            (this.blocks = []),
                                (this.s = []),
                                (this.padding = e),
                                (this.outputBits = r),
                                (this.reset = !0),
                                (this.block = 0),
                                (this.start = 0),
                                (this.blockCount = (1600 - (t << 1)) >> 5),
                                (this.byteCount = this.blockCount << 2),
                                (this.outputBlocks = r >> 5),
                                (this.extraBytes = (31 & r) >> 3);
                            for (var n = 0; n < 50; ++n) this.s[n] = 0;
                        }
                        (b.prototype.update = function(t) {
                            var e = 'string' != typeof t;
                            e &&
                                t.constructor === ArrayBuffer &&
                                (t = new Uint8Array(t));
                            for (
                                var r,
                                    n,
                                    i = t.length,
                                    o = this.blocks,
                                    a = this.byteCount,
                                    u = this.blockCount,
                                    h = 0,
                                    l = this.s;
                                h < i;

                            ) {
                                if (this.reset)
                                    for (
                                        this.reset = !1,
                                            o[0] = this.block,
                                            r = 1;
                                        r < u + 1;
                                        ++r
                                    )
                                        o[r] = 0;
                                if (e)
                                    for (r = this.start; h < i && r < a; ++h)
                                        o[r >> 2] |= t[h] << s[3 & r++];
                                else
                                    for (r = this.start; h < i && r < a; ++h)
                                        (n = t.charCodeAt(h)) < 128
                                            ? (o[r >> 2] |= n << s[3 & r++])
                                            : n < 2048
                                            ? ((o[r >> 2] |=
                                                  (192 | (n >> 6)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | (63 & n)) <<
                                                  s[3 & r++]))
                                            : n < 55296 || n >= 57344
                                            ? ((o[r >> 2] |=
                                                  (224 | (n >> 12)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | ((n >> 6) & 63)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | (63 & n)) <<
                                                  s[3 & r++]))
                                            : ((n =
                                                  65536 +
                                                  (((1023 & n) << 10) |
                                                      (1023 &
                                                          t.charCodeAt(++h)))),
                                              (o[r >> 2] |=
                                                  (240 | (n >> 18)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | ((n >> 12) & 63)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | ((n >> 6) & 63)) <<
                                                  s[3 & r++]),
                                              (o[r >> 2] |=
                                                  (128 | (63 & n)) <<
                                                  s[3 & r++]));
                                if (((this.lastByteIndex = r), r >= a)) {
                                    for (
                                        this.start = r - a,
                                            this.block = o[u],
                                            r = 0;
                                        r < u;
                                        ++r
                                    )
                                        l[r] ^= o[r];
                                    M(l), (this.reset = !0);
                                } else this.start = r;
                            }
                            return this;
                        }),
                            (b.prototype.finalize = function() {
                                var t = this.blocks,
                                    e = this.lastByteIndex,
                                    r = this.blockCount,
                                    n = this.s;
                                if (
                                    ((t[e >> 2] |= this.padding[3 & e]),
                                    this.lastByteIndex === this.byteCount)
                                )
                                    for (t[0] = t[r], e = 1; e < r + 1; ++e)
                                        t[e] = 0;
                                for (t[r - 1] |= 2147483648, e = 0; e < r; ++e)
                                    n[e] ^= t[e];
                                M(n);
                            }),
                            (b.prototype.toString = b.prototype.hex = function() {
                                this.finalize();
                                for (
                                    var t,
                                        e = this.blockCount,
                                        r = this.s,
                                        n = this.outputBlocks,
                                        s = this.extraBytes,
                                        o = 0,
                                        a = 0,
                                        u = '';
                                    a < n;

                                ) {
                                    for (o = 0; o < e && a < n; ++o, ++a)
                                        (t = r[o]),
                                            (u +=
                                                i[(t >> 4) & 15] +
                                                i[15 & t] +
                                                i[(t >> 12) & 15] +
                                                i[(t >> 8) & 15] +
                                                i[(t >> 20) & 15] +
                                                i[(t >> 16) & 15] +
                                                i[(t >> 28) & 15] +
                                                i[(t >> 24) & 15]);
                                    a % e == 0 && (M(r), (o = 0));
                                }
                                return (
                                    s &&
                                        ((t = r[o]),
                                        s > 0 &&
                                            (u += i[(t >> 4) & 15] + i[15 & t]),
                                        s > 1 &&
                                            (u +=
                                                i[(t >> 12) & 15] +
                                                i[(t >> 8) & 15]),
                                        s > 2 &&
                                            (u +=
                                                i[(t >> 20) & 15] +
                                                i[(t >> 16) & 15])),
                                    u
                                );
                            }),
                            (b.prototype.arrayBuffer = function() {
                                this.finalize();
                                var t,
                                    e = this.blockCount,
                                    r = this.s,
                                    n = this.outputBlocks,
                                    i = this.extraBytes,
                                    s = 0,
                                    o = 0,
                                    a = this.outputBits >> 3;
                                t = i
                                    ? new ArrayBuffer((n + 1) << 2)
                                    : new ArrayBuffer(a);
                                for (var u = new Uint32Array(t); o < n; ) {
                                    for (s = 0; s < e && o < n; ++s, ++o)
                                        u[o] = r[s];
                                    o % e == 0 && M(r);
                                }
                                return (
                                    i && ((u[s] = r[s]), (t = t.slice(0, a))), t
                                );
                            }),
                            (b.prototype.buffer = b.prototype.arrayBuffer),
                            (b.prototype.digest = b.prototype.array = function() {
                                this.finalize();
                                for (
                                    var t,
                                        e,
                                        r = this.blockCount,
                                        n = this.s,
                                        i = this.outputBlocks,
                                        s = this.extraBytes,
                                        o = 0,
                                        a = 0,
                                        u = [];
                                    a < i;

                                ) {
                                    for (o = 0; o < r && a < i; ++o, ++a)
                                        (t = a << 2),
                                            (e = n[o]),
                                            (u[t] = 255 & e),
                                            (u[t + 1] = (e >> 8) & 255),
                                            (u[t + 2] = (e >> 16) & 255),
                                            (u[t + 3] = (e >> 24) & 255);
                                    a % r == 0 && M(n);
                                }
                                return (
                                    s &&
                                        ((t = a << 2),
                                        (e = n[o]),
                                        s > 0 && (u[t] = 255 & e),
                                        s > 1 && (u[t + 1] = (e >> 8) & 255),
                                        s > 2 && (u[t + 2] = (e >> 16) & 255)),
                                    u
                                );
                            });
                        var M = function(t) {
                            var e,
                                r,
                                n,
                                i,
                                s,
                                a,
                                u,
                                h,
                                l,
                                c,
                                f,
                                d,
                                p,
                                m,
                                g,
                                y,
                                v,
                                w,
                                b,
                                M,
                                E,
                                _,
                                A,
                                N,
                                O,
                                S,
                                x,
                                P,
                                T,
                                R,
                                k,
                                I,
                                B,
                                C,
                                L,
                                F,
                                U,
                                D,
                                j,
                                z,
                                G,
                                H,
                                $,
                                V,
                                q,
                                W,
                                Z,
                                J,
                                X,
                                K,
                                Y,
                                Q,
                                tt,
                                et,
                                rt,
                                nt,
                                it,
                                st,
                                ot,
                                at,
                                ut,
                                ht,
                                lt;
                            for (n = 0; n < 48; n += 2)
                                (i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40]),
                                    (s = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41]),
                                    (a = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42]),
                                    (u = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43]),
                                    (h = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44]),
                                    (l = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45]),
                                    (c = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46]),
                                    (f = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47]),
                                    (e =
                                        (d =
                                            t[8] ^
                                            t[18] ^
                                            t[28] ^
                                            t[38] ^
                                            t[48]) ^
                                        ((a << 1) | (u >>> 31))),
                                    (r =
                                        (p =
                                            t[9] ^
                                            t[19] ^
                                            t[29] ^
                                            t[39] ^
                                            t[49]) ^
                                        ((u << 1) | (a >>> 31))),
                                    (t[0] ^= e),
                                    (t[1] ^= r),
                                    (t[10] ^= e),
                                    (t[11] ^= r),
                                    (t[20] ^= e),
                                    (t[21] ^= r),
                                    (t[30] ^= e),
                                    (t[31] ^= r),
                                    (t[40] ^= e),
                                    (t[41] ^= r),
                                    (e = i ^ ((h << 1) | (l >>> 31))),
                                    (r = s ^ ((l << 1) | (h >>> 31))),
                                    (t[2] ^= e),
                                    (t[3] ^= r),
                                    (t[12] ^= e),
                                    (t[13] ^= r),
                                    (t[22] ^= e),
                                    (t[23] ^= r),
                                    (t[32] ^= e),
                                    (t[33] ^= r),
                                    (t[42] ^= e),
                                    (t[43] ^= r),
                                    (e = a ^ ((c << 1) | (f >>> 31))),
                                    (r = u ^ ((f << 1) | (c >>> 31))),
                                    (t[4] ^= e),
                                    (t[5] ^= r),
                                    (t[14] ^= e),
                                    (t[15] ^= r),
                                    (t[24] ^= e),
                                    (t[25] ^= r),
                                    (t[34] ^= e),
                                    (t[35] ^= r),
                                    (t[44] ^= e),
                                    (t[45] ^= r),
                                    (e = h ^ ((d << 1) | (p >>> 31))),
                                    (r = l ^ ((p << 1) | (d >>> 31))),
                                    (t[6] ^= e),
                                    (t[7] ^= r),
                                    (t[16] ^= e),
                                    (t[17] ^= r),
                                    (t[26] ^= e),
                                    (t[27] ^= r),
                                    (t[36] ^= e),
                                    (t[37] ^= r),
                                    (t[46] ^= e),
                                    (t[47] ^= r),
                                    (e = c ^ ((i << 1) | (s >>> 31))),
                                    (r = f ^ ((s << 1) | (i >>> 31))),
                                    (t[8] ^= e),
                                    (t[9] ^= r),
                                    (t[18] ^= e),
                                    (t[19] ^= r),
                                    (t[28] ^= e),
                                    (t[29] ^= r),
                                    (t[38] ^= e),
                                    (t[39] ^= r),
                                    (t[48] ^= e),
                                    (t[49] ^= r),
                                    (m = t[0]),
                                    (g = t[1]),
                                    (W = (t[11] << 4) | (t[10] >>> 28)),
                                    (Z = (t[10] << 4) | (t[11] >>> 28)),
                                    (P = (t[20] << 3) | (t[21] >>> 29)),
                                    (T = (t[21] << 3) | (t[20] >>> 29)),
                                    (at = (t[31] << 9) | (t[30] >>> 23)),
                                    (ut = (t[30] << 9) | (t[31] >>> 23)),
                                    (H = (t[40] << 18) | (t[41] >>> 14)),
                                    ($ = (t[41] << 18) | (t[40] >>> 14)),
                                    (C = (t[2] << 1) | (t[3] >>> 31)),
                                    (L = (t[3] << 1) | (t[2] >>> 31)),
                                    (y = (t[13] << 12) | (t[12] >>> 20)),
                                    (v = (t[12] << 12) | (t[13] >>> 20)),
                                    (J = (t[22] << 10) | (t[23] >>> 22)),
                                    (X = (t[23] << 10) | (t[22] >>> 22)),
                                    (R = (t[33] << 13) | (t[32] >>> 19)),
                                    (k = (t[32] << 13) | (t[33] >>> 19)),
                                    (ht = (t[42] << 2) | (t[43] >>> 30)),
                                    (lt = (t[43] << 2) | (t[42] >>> 30)),
                                    (et = (t[5] << 30) | (t[4] >>> 2)),
                                    (rt = (t[4] << 30) | (t[5] >>> 2)),
                                    (F = (t[14] << 6) | (t[15] >>> 26)),
                                    (U = (t[15] << 6) | (t[14] >>> 26)),
                                    (w = (t[25] << 11) | (t[24] >>> 21)),
                                    (b = (t[24] << 11) | (t[25] >>> 21)),
                                    (K = (t[34] << 15) | (t[35] >>> 17)),
                                    (Y = (t[35] << 15) | (t[34] >>> 17)),
                                    (I = (t[45] << 29) | (t[44] >>> 3)),
                                    (B = (t[44] << 29) | (t[45] >>> 3)),
                                    (N = (t[6] << 28) | (t[7] >>> 4)),
                                    (O = (t[7] << 28) | (t[6] >>> 4)),
                                    (nt = (t[17] << 23) | (t[16] >>> 9)),
                                    (it = (t[16] << 23) | (t[17] >>> 9)),
                                    (D = (t[26] << 25) | (t[27] >>> 7)),
                                    (j = (t[27] << 25) | (t[26] >>> 7)),
                                    (M = (t[36] << 21) | (t[37] >>> 11)),
                                    (E = (t[37] << 21) | (t[36] >>> 11)),
                                    (Q = (t[47] << 24) | (t[46] >>> 8)),
                                    (tt = (t[46] << 24) | (t[47] >>> 8)),
                                    (V = (t[8] << 27) | (t[9] >>> 5)),
                                    (q = (t[9] << 27) | (t[8] >>> 5)),
                                    (S = (t[18] << 20) | (t[19] >>> 12)),
                                    (x = (t[19] << 20) | (t[18] >>> 12)),
                                    (st = (t[29] << 7) | (t[28] >>> 25)),
                                    (ot = (t[28] << 7) | (t[29] >>> 25)),
                                    (z = (t[38] << 8) | (t[39] >>> 24)),
                                    (G = (t[39] << 8) | (t[38] >>> 24)),
                                    (_ = (t[48] << 14) | (t[49] >>> 18)),
                                    (A = (t[49] << 14) | (t[48] >>> 18)),
                                    (t[0] = m ^ (~y & w)),
                                    (t[1] = g ^ (~v & b)),
                                    (t[10] = N ^ (~S & P)),
                                    (t[11] = O ^ (~x & T)),
                                    (t[20] = C ^ (~F & D)),
                                    (t[21] = L ^ (~U & j)),
                                    (t[30] = V ^ (~W & J)),
                                    (t[31] = q ^ (~Z & X)),
                                    (t[40] = et ^ (~nt & st)),
                                    (t[41] = rt ^ (~it & ot)),
                                    (t[2] = y ^ (~w & M)),
                                    (t[3] = v ^ (~b & E)),
                                    (t[12] = S ^ (~P & R)),
                                    (t[13] = x ^ (~T & k)),
                                    (t[22] = F ^ (~D & z)),
                                    (t[23] = U ^ (~j & G)),
                                    (t[32] = W ^ (~J & K)),
                                    (t[33] = Z ^ (~X & Y)),
                                    (t[42] = nt ^ (~st & at)),
                                    (t[43] = it ^ (~ot & ut)),
                                    (t[4] = w ^ (~M & _)),
                                    (t[5] = b ^ (~E & A)),
                                    (t[14] = P ^ (~R & I)),
                                    (t[15] = T ^ (~k & B)),
                                    (t[24] = D ^ (~z & H)),
                                    (t[25] = j ^ (~G & $)),
                                    (t[34] = J ^ (~K & Q)),
                                    (t[35] = X ^ (~Y & tt)),
                                    (t[44] = st ^ (~at & ht)),
                                    (t[45] = ot ^ (~ut & lt)),
                                    (t[6] = M ^ (~_ & m)),
                                    (t[7] = E ^ (~A & g)),
                                    (t[16] = R ^ (~I & N)),
                                    (t[17] = k ^ (~B & O)),
                                    (t[26] = z ^ (~H & C)),
                                    (t[27] = G ^ (~$ & L)),
                                    (t[36] = K ^ (~Q & V)),
                                    (t[37] = Y ^ (~tt & q)),
                                    (t[46] = at ^ (~ht & et)),
                                    (t[47] = ut ^ (~lt & rt)),
                                    (t[8] = _ ^ (~m & y)),
                                    (t[9] = A ^ (~g & v)),
                                    (t[18] = I ^ (~N & S)),
                                    (t[19] = B ^ (~O & x)),
                                    (t[28] = H ^ (~C & F)),
                                    (t[29] = $ ^ (~L & U)),
                                    (t[38] = Q ^ (~V & W)),
                                    (t[39] = tt ^ (~q & Z)),
                                    (t[48] = ht ^ (~et & nt)),
                                    (t[49] = lt ^ (~rt & it)),
                                    (t[0] ^= o[n]),
                                    (t[1] ^= o[n + 1]);
                        };
                        if (n) t.exports = d;
                        else for (m = 0; m < p.length; ++m) e[p[m]] = d[p[m]];
                    })();
                },
                349: t => {
                    function e(t, e) {
                        if (!t) throw new Error(e || 'Assertion failed');
                    }
                    (t.exports = e),
                        (e.equal = function(t, e, r) {
                            if (t != e)
                                throw new Error(
                                    r || 'Assertion failed: ' + t + ' != ' + e
                                );
                        });
                },
                16: (t, e, r) => {
                    'use strict';
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.MAX_OUT_RATIO = e.MAX_IN_RATIO = e.TWOBONE = e.BONE = void 0),
                        (e.scale = function(t, e) {
                            const r = new n.BigNumber(e.toString()),
                                i = new n.BigNumber(10).pow(r);
                            return t.times(i);
                        }),
                        (e.bnum = function(t) {
                            return new n.BigNumber(t.toString());
                        }),
                        (e.calcOutGivenIn = function(t, r, n, i, a, u) {
                            let h = o(r, i),
                                c = e.BONE.minus(u);
                            c = s(a, c);
                            let f = l(o(t, t.plus(c)), h);
                            return s(n, e.BONE.minus(f));
                        }),
                        (e.calcInGivenOut = function(t, r, n, i, a, u) {
                            let h = o(i, r),
                                c = n.minus(a),
                                f = l(o(n, c), h);
                            f = f.minus(e.BONE);
                            let d = e.BONE.minus(u);
                            return (d = o(s(t, f), d)), d;
                        }),
                        (e.calcSpotPrice = function(t, r, n, i, a) {
                            const u = o(t, r),
                                l = o(n, i);
                            return s(o(u, l), o(e.BONE, h(e.BONE, a).res));
                        }),
                        (e.bmul = s),
                        (e.bdiv = o),
                        (e.btoi = a),
                        (e.bfloor = u),
                        (e.bsubSign = h),
                        (e.bpow = l);
                    const n = r(365);
                    (e.BONE = new n.BigNumber(10).pow(18)),
                        (e.TWOBONE = e.BONE.times(new n.BigNumber(2)));
                    const i = e.BONE.idiv(new n.BigNumber(10).pow(10));
                    function s(t, r) {
                        return t
                            .times(r)
                            .plus(e.BONE.div(new n.BigNumber(2)))
                            .idiv(e.BONE);
                    }
                    function o(t, r) {
                        return t
                            .times(e.BONE)
                            .plus(r.div(new n.BigNumber(2)))
                            .idiv(r);
                    }
                    function a(t) {
                        return t.idiv(e.BONE);
                    }
                    function u(t) {
                        return a(t).times(e.BONE);
                    }
                    function h(t, e) {
                        return t.gte(e)
                            ? { res: t.minus(e), bool: !1 }
                            : { res: e.minus(t), bool: !0 };
                    }
                    function l(t, r) {
                        let l = u(r),
                            c = r.minus(l),
                            f = (function(t, r) {
                                let i = r
                                    .modulo(new n.BigNumber(2))
                                    .eq(new n.BigNumber(0))
                                    ? e.BONE
                                    : t;
                                for (
                                    r = r.idiv(new n.BigNumber(2));
                                    !r.eq(new n.BigNumber(0));
                                    r = r.idiv(new n.BigNumber(2))
                                )
                                    (t = s(t, t)),
                                        r
                                            .modulo(new n.BigNumber(2))
                                            .eq(new n.BigNumber(0)) ||
                                            (i = s(i, t));
                                return i;
                            })(t, a(l));
                        if (c.eq(new n.BigNumber(0))) return f;
                        let d = (function(t, r, i) {
                            let a = r,
                                { res: u, bool: l } = h(t, e.BONE),
                                c = e.BONE,
                                f = c,
                                d = !1;
                            for (let t = 1; c.gte(i); t++) {
                                let r = new n.BigNumber(t).times(e.BONE),
                                    { res: i, bool: p } = h(a, r.minus(e.BONE));
                                if (
                                    ((c = s(c, s(i, u))),
                                    (c = o(c, r)),
                                    c.eq(new n.BigNumber(0)))
                                )
                                    break;
                                l && (d = !d),
                                    p && (d = !d),
                                    (f = d ? f.minus(c) : f.plus(c));
                            }
                            return f;
                        })(t, c, i);
                        return s(f, d);
                    }
                    (e.MAX_IN_RATIO = e.BONE.times(
                        new n.BigNumber(0.499999999999999)
                    )),
                        (e.MAX_OUT_RATIO = e.BONE.times(
                            new n.BigNumber(0.333333333333333)
                        ));
                },
                418: function(t, e, r) {
                    'use strict';
                    var n =
                        (this && this.__awaiter) ||
                        function(t, e, r, n) {
                            return new (r || (r = Promise))(function(i, s) {
                                function o(t) {
                                    try {
                                        u(n.next(t));
                                    } catch (t) {
                                        s(t);
                                    }
                                }
                                function a(t) {
                                    try {
                                        u(n.throw(t));
                                    } catch (t) {
                                        s(t);
                                    }
                                }
                                function u(t) {
                                    var e;
                                    t.done
                                        ? i(t.value)
                                        : ((e = t.value),
                                          e instanceof r
                                              ? e
                                              : new r(function(t) {
                                                    t(e);
                                                })).then(o, a);
                                }
                                u((n = n.apply(t, e || [])).next());
                            });
                        };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.getAddress = c),
                        (e.getOnChainReserves = f),
                        (e.getTokenWeiPrice = d),
                        (e.calculateTotalSwapCost = p),
                        (e.getCostOutputToken = function(t, e, r, i) {
                            return n(this, arguments, void 0, function*(
                                t,
                                e,
                                r,
                                n,
                                i = void 0
                            ) {
                                if (
                                    (i || (i = (yield n.getNetwork()).chainId),
                                    1 !== i)
                                )
                                    return new a.BigNumber(0);
                                let s = new a.BigNumber(0);
                                try {
                                    s = yield d(t, n);
                                } catch (t) {
                                    console.log(
                                        'Error Getting Token Price. Defaulting to 0.'
                                    );
                                }
                                return p(s, r, e);
                            });
                        });
                    const i = r(351),
                        s = r(616),
                        o = r(360),
                        a = r(365),
                        u = r(16),
                        h = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',
                        l =
                            '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f';
                    function c(t, e) {
                        const r =
                            t.toLowerCase() < e.toLowerCase() ? [t, e] : [e, t];
                        return (0, i.getCreate2Address)(
                            h,
                            (0, o.keccak256)(
                                ['bytes'],
                                [
                                    (0, o.pack)(
                                        ['address', 'address'],
                                        [r[0], r[1]]
                                    ),
                                ]
                            ),
                            l
                        );
                    }
                    function f(t, e) {
                        return n(this, void 0, void 0, function*() {
                            const n = r(859),
                                i = new s.Contract(t, n, e);
                            let [o, a, u] = yield i.getReserves();
                            return [o, a];
                        });
                    }
                    function d(t, e) {
                        return n(this, void 0, void 0, function*() {
                            const r =
                                '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2';
                            if (t.toLowerCase() === r.toLowerCase())
                                return new a.BigNumber(u.BONE);
                            let n = c(r, t),
                                [i, s] = yield f(n, e);
                            const o = new a.BigNumber(i.toString()),
                                h = new a.BigNumber(s.toString());
                            return o.div(h).times(u.BONE);
                        });
                    }
                    function p(t, e, r) {
                        return r
                            .times(e)
                            .times(t)
                            .div(u.BONE);
                    }
                },
                673: function(t, e, r) {
                    'use strict';
                    var n =
                        (this && this.__importDefault) ||
                        function(t) {
                            return t && t.__esModule ? t : { default: t };
                        };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.formatSubgraphPools = e.parsePoolPairData = e.parsePoolData = void 0),
                        (e.getLimitAmountSwap = u),
                        (e.getLimitAmountSwapPath = function(t, e, r, n) {
                            let s = e.swaps;
                            if (1 == s.length)
                                return u(
                                    n[
                                        `${s[0].pool}${s[0].tokenIn}${s[0].tokenOut}`
                                    ].poolPairData,
                                    r
                                );
                            if (2 == s.length) {
                                let t = `${s[0].pool}${s[0].tokenIn}${s[0].tokenOut}`,
                                    e = n[t];
                                t = `${s[1].pool}${s[1].tokenIn}${s[1].tokenOut}`;
                                let a = n[t];
                                return 'swapExactIn' === r
                                    ? i.BigNumber.min(
                                          u(e.poolPairData, r),
                                          (0, o.bmul)(
                                              u(a.poolPairData, r),
                                              e.sp
                                          )
                                      )
                                    : i.BigNumber.min(
                                          u(a.poolPairData, r),
                                          (0, o.bdiv)(
                                              u(e.poolPairData, r),
                                              a.sp
                                          )
                                      );
                            }
                            throw new Error(
                                'Path with more than 2 swaps not supported'
                            );
                        }),
                        (e.getSpotPricePath = function(t, e, r) {
                            let n = e.swaps;
                            if (1 == n.length)
                                return r[
                                    `${n[0].pool}${n[0].tokenIn}${n[0].tokenOut}`
                                ].sp;
                            if (2 == n.length) {
                                let t = `${n[0].pool}${n[0].tokenIn}${n[0].tokenOut}`,
                                    e = r[t];
                                t = `${n[1].pool}${n[1].tokenIn}${n[1].tokenOut}`;
                                let i = r[t];
                                return (0, o.bmul)(e.sp, i.sp);
                            }
                            throw new Error(
                                'Path with more than 2 swaps not supported'
                            );
                        }),
                        (e.getSpotPrice = function(t) {
                            let e = (0, o.bdiv)(t.balanceIn, t.weightIn),
                                r = (0, o.bdiv)(t.balanceOut, t.weightOut);
                            return r.isEqualTo((0, o.bnum)(0))
                                ? (0, o.bnum)(0)
                                : (0, o.bdiv)(
                                      (0, o.bdiv)(e, r),
                                      o.BONE.minus(t.swapFee)
                                  );
                        }),
                        (e.getSlippageLinearizedSpotPriceAfterSwapPath = function(
                            t,
                            e,
                            r,
                            n
                        ) {
                            let i = e.swaps;
                            if (1 == i.length)
                                return h(
                                    n[
                                        `${i[0].pool}${i[0].tokenIn}${i[0].tokenOut}`
                                    ].poolPairData,
                                    r
                                );
                            if (2 == i.length) {
                                let t = `${i[0].pool}${i[0].tokenIn}${i[0].tokenOut}`,
                                    e = n[t].poolPairData;
                                t = `${i[1].pool}${i[1].tokenIn}${i[1].tokenOut}`;
                                let s = n[t].poolPairData;
                                if (
                                    e.balanceIn.isEqualTo((0, o.bnum)(0)) ||
                                    s.balanceIn.isEqualTo((0, o.bnum)(0))
                                )
                                    return (0, o.bnum)(0);
                                {
                                    let t = (0, o.bmul)(
                                            (0, o.bmul)(
                                                (0, o.bmul)(
                                                    o.BONE.minus(e.swapFee),
                                                    o.BONE.minus(s.swapFee)
                                                ),
                                                e.balanceOut
                                            ),
                                            (0, o.bmul)(e.weightIn, s.weightIn)
                                        ),
                                        n = (0, o.bmul)(
                                            (0, o.bmul)(
                                                e.balanceOut.plus(s.balanceIn),
                                                o.BONE.minus(e.swapFee)
                                            ),
                                            (0, o.bmul)(e.weightIn, s.weightOut)
                                        ),
                                        i = (0, o.bmul)(
                                            s.balanceIn,
                                            (0, o.bmul)(
                                                e.weightOut,
                                                s.weightOut
                                            )
                                        ),
                                        a = t.plus(n).plus(i);
                                    if ('swapExactIn' === r) {
                                        let t = (0, o.bmul)(
                                                e.balanceIn,
                                                e.weightOut
                                            ),
                                            r = (0, o.bmul)(
                                                s.balanceIn,
                                                s.weightOut
                                            );
                                        return (0, o.bdiv)(
                                            (0, o.bdiv)(a, t),
                                            r
                                        );
                                    }
                                    {
                                        let t = (0, o.bmul)(
                                                o.BONE.minus(e.swapFee),
                                                (0, o.bmul)(
                                                    e.balanceOut,
                                                    e.weightIn
                                                )
                                            ),
                                            r = (0, o.bmul)(
                                                o.BONE.minus(s.swapFee),
                                                (0, o.bmul)(
                                                    s.balanceOut,
                                                    s.weightIn
                                                )
                                            );
                                        return (0, o.bdiv)(
                                            (0, o.bdiv)(a, t),
                                            r
                                        );
                                    }
                                }
                            }
                            throw new Error(
                                'Path with more than 2 swaps not supported'
                            );
                        }),
                        (e.getSlippageLinearizedSpotPriceAfterSwap = h),
                        (e.getReturnAmountSwapPath = function(t, r, n, i) {
                            let s = r.swaps;
                            if (1 == s.length) {
                                let r = s[0],
                                    o = t[r.pool];
                                return l(
                                    t,
                                    (0, e.parsePoolPairData)(
                                        o,
                                        r.tokenIn,
                                        r.tokenOut
                                    ),
                                    n,
                                    i
                                );
                            }
                            if (2 == s.length) {
                                let r = s[0],
                                    o = t[r.pool],
                                    a = (0, e.parsePoolPairData)(
                                        o,
                                        r.tokenIn,
                                        r.tokenOut
                                    ),
                                    u = s[1],
                                    h = t[u.pool],
                                    c = (0, e.parsePoolPairData)(
                                        h,
                                        u.tokenIn,
                                        u.tokenOut
                                    );
                                if ('swapExactIn' === n) {
                                    let e = l(t, a, n, i);
                                    return l(t, c, n, e);
                                }
                                {
                                    let e = l(t, c, n, i);
                                    return l(t, a, n, e);
                                }
                            }
                            throw new Error(
                                'Path with more than 2 swaps not supported'
                            );
                        }),
                        (e.getReturnAmountSwap = l),
                        (e.updateTokenBalanceForPool = c),
                        (e.getNormalizedLiquidity = f),
                        (e.filterPools = function(
                            t,
                            e,
                            r,
                            n,
                            i = { isOverRide: !1, disabledTokens: [] }
                        ) {
                            let s = {},
                                o = {},
                                u = {},
                                h = new Set(),
                                l = new Set(),
                                c = a.default.tokens;
                            i.isOverRide && (c = i.disabledTokens),
                                t.forEach(t => {
                                    let i = new Set(t.tokensList);
                                    if (
                                        (c.forEach(t => i.delete(t.address)),
                                        i.has(e) && i.has(r))
                                    )
                                        s[t.id] = t;
                                    else if (n > 1) {
                                        let n = i.has(e),
                                            s = i.has(r);
                                        n && !s
                                            ? ((h = new Set([...h, ...i])),
                                              (o[t.id] = t))
                                            : !n &&
                                              s &&
                                              ((l = new Set([...l, ...i])),
                                              (u[t.id] = t));
                                    }
                                });
                            const f = [...[...h].filter(t => l.has(t))];
                            return [s, f, o, u];
                        }),
                        (e.sortPoolsMostLiquid = function(t, r, n, i, s) {
                            let a = [],
                                u = [];
                            for (let h = 0; h < n.length; h++) {
                                let l,
                                    c = (0, o.bnum)(0);
                                for (let r in i)
                                    if (new Set(i[r].tokensList).has(n[h])) {
                                        let s = f(
                                            (0, e.parsePoolPairData)(
                                                i[r],
                                                t,
                                                n[h].toString()
                                            )
                                        );
                                        s.isGreaterThanOrEqualTo(c) &&
                                            ((c = s), (l = r));
                                    }
                                a[h] = i[l];
                                let d,
                                    p = (0, o.bnum)(0);
                                for (let t in s)
                                    if (new Set(s[t].tokensList).has(n[h])) {
                                        let i = f(
                                            (0, e.parsePoolPairData)(
                                                s[t],
                                                n[h].toString(),
                                                r
                                            )
                                        );
                                        i.isGreaterThanOrEqualTo(p) &&
                                            ((p = i), (d = t));
                                    }
                                u[h] = s[d];
                            }
                            return [a, u];
                        }),
                        (e.getMarketSpotPrice = function(t) {
                            if (0 === t.length) return (0, o.bnum)(0);
                            let e = (0, o.bnum)(t[0].slippage),
                                r = (0, o.bnum)(t[0].spotPrice);
                            for (let n = 1; n < t.length; n++) {
                                let i = (0, o.bnum)(t[n].slippage);
                                (i.lt(e) || e.eq(0)) &&
                                    ((e = i),
                                    (r = (0, o.bnum)(t[n].spotPrice)));
                            }
                            return r;
                        });
                    const i = r(365),
                        s = r(351),
                        o = r(16),
                        a = n(r(626));
                    function u(t, e) {
                        return 'swapExactIn' === e
                            ? (0, o.bmul)(t.balanceIn, o.MAX_IN_RATIO)
                            : (0, o.bmul)(t.balanceOut, o.MAX_OUT_RATIO);
                    }
                    function h(t, e) {
                        let {
                            weightIn: r,
                            weightOut: n,
                            balanceIn: i,
                            balanceOut: s,
                            swapFee: a,
                        } = t;
                        return 'swapExactIn' === e
                            ? i.isEqualTo((0, o.bnum)(0))
                                ? (0, o.bnum)(0)
                                : (0, o.bdiv)(
                                      (0, o.bmul)(
                                          o.BONE.minus(a),
                                          (0, o.bdiv)(r, n)
                                      ).plus(o.BONE),
                                      i
                                  )
                            : s.isEqualTo((0, o.bnum)(0))
                            ? (0, o.bnum)(0)
                            : (0, o.bdiv)(
                                  (0, o.bdiv)(
                                      n,
                                      (0, o.bmul)(o.BONE.minus(a), r)
                                  ).plus(o.BONE),
                                  s
                              );
                    }
                    function l(t, e, r, n) {
                        let i,
                            {
                                weightIn: s,
                                weightOut: a,
                                balanceIn: u,
                                balanceOut: h,
                                swapFee: l,
                                tokenIn: f,
                                tokenOut: d,
                            } = e;
                        return 'swapExactIn' === r
                            ? u.isEqualTo((0, o.bnum)(0))
                                ? (0, o.bnum)(0)
                                : ((i = (0, o.calcOutGivenIn)(
                                      u,
                                      s,
                                      h,
                                      a,
                                      n,
                                      l
                                  )),
                                  (t[e.id] = c(t[e.id], f, u.plus(n))),
                                  (t[e.id] = c(t[e.id], d, h.minus(i))),
                                  i)
                            : h.isEqualTo((0, o.bnum)(0)) || n.times(3).gte(h)
                            ? (0, o.bnum)(0)
                            : ((i = (0, o.calcInGivenOut)(u, s, h, a, n, l)),
                              (t[e.id] = c(t[e.id], f, u.plus(i))),
                              (t[e.id] = c(t[e.id], d, h.minus(n))),
                              i);
                    }
                    function c(t, e, r) {
                        return (
                            (t.tokens.find(t => t.address === e).balance = r), t
                        );
                    }
                    function f(t) {
                        let {
                            weightIn: e,
                            weightOut: r,
                            balanceIn: n,
                            balanceOut: i,
                            swapFee: s,
                        } = t;
                        return (0, o.bdiv)((0, o.bmul)(i, e), e.plus(r));
                    }
                    (e.parsePoolData = (t, e, r, n = [], i = [], s = []) => {
                        let o = [],
                            a = {};
                        for (let n in t) {
                            let i = t[n];
                            a[n] = i;
                            let s = { pool: i.id, tokenIn: e, tokenOut: r },
                                u = { id: i.id, swaps: [s] };
                            o.push(u);
                        }
                        for (let t = 0; t < s.length; t++) {
                            (a[n[t].id] = n[t]), (a[i[t].id] = i[t]);
                            let u = {
                                    pool: n[t].id,
                                    tokenIn: e,
                                    tokenOut: s[t],
                                },
                                h = {
                                    pool: i[t].id,
                                    tokenIn: s[t],
                                    tokenOut: r,
                                },
                                l = { id: n[t].id + i[t].id, swaps: [u, h] };
                            o.push(l);
                        }
                        return [a, o];
                    }),
                        (e.parsePoolPairData = (t, e, r) => {
                            let n = t.tokens.find(
                                    t =>
                                        (0, s.getAddress)(t.address) ===
                                        (0, s.getAddress)(e)
                                ),
                                i = t.tokens.find(
                                    t =>
                                        (0, s.getAddress)(t.address) ===
                                        (0, s.getAddress)(r)
                                );
                            return {
                                id: t.id,
                                tokenIn: e,
                                tokenOut: r,
                                decimalsIn: n.decimals,
                                decimalsOut: i.decimals,
                                balanceIn: (0, o.bnum)(n.balance),
                                balanceOut: (0, o.bnum)(i.balance),
                                weightIn: (0, o.scale)(
                                    (0, o.bnum)(n.denormWeight).div(
                                        (0, o.bnum)(t.totalWeight)
                                    ),
                                    18
                                ),
                                weightOut: (0, o.scale)(
                                    (0, o.bnum)(i.denormWeight).div(
                                        (0, o.bnum)(t.totalWeight)
                                    ),
                                    18
                                ),
                                swapFee: (0, o.bnum)(t.swapFee),
                            };
                        }),
                        (e.formatSubgraphPools = t => {
                            for (let e of t.pools)
                                (e.swapFee = (0, o.scale)(
                                    (0, o.bnum)(e.swapFee),
                                    18
                                )),
                                    (e.totalWeight = (0, o.scale)(
                                        (0, o.bnum)(e.totalWeight),
                                        18
                                    )),
                                    e.tokens.forEach(t => {
                                        (t.balance = (0, o.scale)(
                                            (0, o.bnum)(t.balance),
                                            t.decimals
                                        )),
                                            (t.denormWeight = (0, o.scale)(
                                                (0, o.bnum)(t.denormWeight),
                                                18
                                            ));
                                    });
                        });
                },
                156: function(t, e, r) {
                    'use strict';
                    var n =
                            (this && this.__createBinding) ||
                            (Object.create
                                ? function(t, e, r, n) {
                                      void 0 === n && (n = r);
                                      var i = Object.getOwnPropertyDescriptor(
                                          e,
                                          r
                                      );
                                      (i &&
                                          !('get' in i
                                              ? !e.__esModule
                                              : i.writable ||
                                                i.configurable)) ||
                                          (i = {
                                              enumerable: !0,
                                              get: function() {
                                                  return e[r];
                                              },
                                          }),
                                          Object.defineProperty(t, n, i);
                                  }
                                : function(t, e, r, n) {
                                      void 0 === n && (n = r), (t[n] = e[r]);
                                  }),
                        i =
                            (this && this.__setModuleDefault) ||
                            (Object.create
                                ? function(t, e) {
                                      Object.defineProperty(t, 'default', {
                                          enumerable: !0,
                                          value: e,
                                      });
                                  }
                                : function(t, e) {
                                      t.default = e;
                                  }),
                        s =
                            (this && this.__importStar) ||
                            function(t) {
                                if (t && t.__esModule) return t;
                                var e = {};
                                if (null != t)
                                    for (var r in t)
                                        'default' !== r &&
                                            Object.prototype.hasOwnProperty.call(
                                                t,
                                                r
                                            ) &&
                                            n(e, t, r);
                                return i(e, t), e;
                            };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.SOR = e.POOLS = e.getCostOutputToken = e.bmath = e.getAllPoolDataOnChain = e.getMarketSpotPrice = e.sortPoolsMostLiquid = e.filterPools = e.formatSubgraphPools = e.parsePoolData = e.processEpsOfInterestMultiHop = e.processPaths = e.smartOrderRouterMultiHopEpsOfInterest = void 0);
                    var o = r(656);
                    Object.defineProperty(
                        e,
                        'smartOrderRouterMultiHopEpsOfInterest',
                        {
                            enumerable: !0,
                            get: function() {
                                return o.smartOrderRouterMultiHopEpsOfInterest;
                            },
                        }
                    ),
                        Object.defineProperty(e, 'processPaths', {
                            enumerable: !0,
                            get: function() {
                                return o.processPaths;
                            },
                        }),
                        Object.defineProperty(
                            e,
                            'processEpsOfInterestMultiHop',
                            {
                                enumerable: !0,
                                get: function() {
                                    return o.processEpsOfInterestMultiHop;
                                },
                            }
                        );
                    var a = r(673);
                    Object.defineProperty(e, 'parsePoolData', {
                        enumerable: !0,
                        get: function() {
                            return a.parsePoolData;
                        },
                    }),
                        Object.defineProperty(e, 'formatSubgraphPools', {
                            enumerable: !0,
                            get: function() {
                                return a.formatSubgraphPools;
                            },
                        }),
                        Object.defineProperty(e, 'filterPools', {
                            enumerable: !0,
                            get: function() {
                                return a.filterPools;
                            },
                        }),
                        Object.defineProperty(e, 'sortPoolsMostLiquid', {
                            enumerable: !0,
                            get: function() {
                                return a.sortPoolsMostLiquid;
                            },
                        }),
                        Object.defineProperty(e, 'getMarketSpotPrice', {
                            enumerable: !0,
                            get: function() {
                                return a.getMarketSpotPrice;
                            },
                        });
                    var u = r(969);
                    Object.defineProperty(e, 'getAllPoolDataOnChain', {
                        enumerable: !0,
                        get: function() {
                            return u.getAllPoolDataOnChain;
                        },
                    });
                    const h = s(r(16));
                    e.bmath = h;
                    var l = r(418);
                    Object.defineProperty(e, 'getCostOutputToken', {
                        enumerable: !0,
                        get: function() {
                            return l.getCostOutputToken;
                        },
                    });
                    var c = r(707);
                    Object.defineProperty(e, 'POOLS', {
                        enumerable: !0,
                        get: function() {
                            return c.POOLS;
                        },
                    });
                    var f = r(524);
                    Object.defineProperty(e, 'SOR', {
                        enumerable: !0,
                        get: function() {
                            return f.SOR;
                        },
                    });
                },
                969: function(t, e, r) {
                    'use strict';
                    var n =
                            (this && this.__createBinding) ||
                            (Object.create
                                ? function(t, e, r, n) {
                                      void 0 === n && (n = r);
                                      var i = Object.getOwnPropertyDescriptor(
                                          e,
                                          r
                                      );
                                      (i &&
                                          !('get' in i
                                              ? !e.__esModule
                                              : i.writable ||
                                                i.configurable)) ||
                                          (i = {
                                              enumerable: !0,
                                              get: function() {
                                                  return e[r];
                                              },
                                          }),
                                          Object.defineProperty(t, n, i);
                                  }
                                : function(t, e, r, n) {
                                      void 0 === n && (n = r), (t[n] = e[r]);
                                  }),
                        i =
                            (this && this.__setModuleDefault) ||
                            (Object.create
                                ? function(t, e) {
                                      Object.defineProperty(t, 'default', {
                                          enumerable: !0,
                                          value: e,
                                      });
                                  }
                                : function(t, e) {
                                      t.default = e;
                                  }),
                        s =
                            (this && this.__importStar) ||
                            function(t) {
                                if (t && t.__esModule) return t;
                                var e = {};
                                if (null != t)
                                    for (var r in t)
                                        'default' !== r &&
                                            Object.prototype.hasOwnProperty.call(
                                                t,
                                                r
                                            ) &&
                                            n(e, t, r);
                                return i(e, t), e;
                            },
                        o =
                            (this && this.__awaiter) ||
                            function(t, e, r, n) {
                                return new (r || (r = Promise))(function(i, s) {
                                    function o(t) {
                                        try {
                                            u(n.next(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function a(t) {
                                        try {
                                            u(n.throw(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function u(t) {
                                        var e;
                                        t.done
                                            ? i(t.value)
                                            : ((e = t.value),
                                              e instanceof r
                                                  ? e
                                                  : new r(function(t) {
                                                        t(e);
                                                    })).then(o, a);
                                    }
                                    u((n = n.apply(t, e || [])).next());
                                });
                            };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.getAllPoolDataOnChain = function(t, e, n) {
                            return o(this, void 0, void 0, function*() {
                                if (0 === t.pools.length)
                                    throw Error('There are no pools.');
                                const i = r(906),
                                    s = new a.Contract(e, i, n);
                                let o = [];
                                for (let e = 0; e < t.pools.length; e++) {
                                    let r = t.pools[e];
                                    o.push([r.id]),
                                        r.tokens.forEach(t => {
                                            o[e].push(t.address);
                                        });
                                }
                                const l = h.defaultAbiCoder.encode(
                                    ['address[][]'],
                                    [o]
                                );
                                let c = yield s.getPoolInfo(l),
                                    f = 0,
                                    d = { pools: [] };
                                for (let e = 0; e < t.pools.length; e++) {
                                    let r = [],
                                        n = {
                                            id: t.pools[e].id,
                                            swapFee: u.scale(
                                                u.bnum(t.pools[e].swapFee),
                                                18
                                            ),
                                            totalWeight: u.scale(
                                                u.bnum(t.pools[e].totalWeight),
                                                18
                                            ),
                                            tokens: r,
                                            tokensList: t.pools[e].tokensList,
                                        };
                                    t.pools[e].tokens.forEach(t => {
                                        let e = u.bnum(c[f]);
                                        f++,
                                            n.tokens.push({
                                                address: t.address,
                                                balance: e,
                                                decimals: Number(t.decimals),
                                                denormWeight: u.scale(
                                                    u.bnum(t.denormWeight),
                                                    18
                                                ),
                                            });
                                    }),
                                        d.pools.push(n);
                                }
                                return d;
                            });
                        });
                    const a = r(616),
                        u = s(r(16)),
                        h = r(535);
                },
                707: function(t, e, r) {
                    'use strict';
                    var n =
                            (this && this.__createBinding) ||
                            (Object.create
                                ? function(t, e, r, n) {
                                      void 0 === n && (n = r);
                                      var i = Object.getOwnPropertyDescriptor(
                                          e,
                                          r
                                      );
                                      (i &&
                                          !('get' in i
                                              ? !e.__esModule
                                              : i.writable ||
                                                i.configurable)) ||
                                          (i = {
                                              enumerable: !0,
                                              get: function() {
                                                  return e[r];
                                              },
                                          }),
                                          Object.defineProperty(t, n, i);
                                  }
                                : function(t, e, r, n) {
                                      void 0 === n && (n = r), (t[n] = e[r]);
                                  }),
                        i =
                            (this && this.__setModuleDefault) ||
                            (Object.create
                                ? function(t, e) {
                                      Object.defineProperty(t, 'default', {
                                          enumerable: !0,
                                          value: e,
                                      });
                                  }
                                : function(t, e) {
                                      t.default = e;
                                  }),
                        s =
                            (this && this.__importStar) ||
                            function(t) {
                                if (t && t.__esModule) return t;
                                var e = {};
                                if (null != t)
                                    for (var r in t)
                                        'default' !== r &&
                                            Object.prototype.hasOwnProperty.call(
                                                t,
                                                r
                                            ) &&
                                            n(e, t, r);
                                return i(e, t), e;
                            },
                        o =
                            (this && this.__awaiter) ||
                            function(t, e, r, n) {
                                return new (r || (r = Promise))(function(i, s) {
                                    function o(t) {
                                        try {
                                            u(n.next(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function a(t) {
                                        try {
                                            u(n.throw(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function u(t) {
                                        var e;
                                        t.done
                                            ? i(t.value)
                                            : ((e = t.value),
                                              e instanceof r
                                                  ? e
                                                  : new r(function(t) {
                                                        t(e);
                                                    })).then(o, a);
                                    }
                                    u((n = n.apply(t, e || [])).next());
                                });
                            },
                        a =
                            (this && this.__importDefault) ||
                            function(t) {
                                return t && t.__esModule ? t : { default: t };
                            };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.POOLS = void 0);
                    const u = a(r(328)),
                        h = s(r(16));
                    e.POOLS = class {
                        getAllPublicSwapPools(t) {
                            return o(this, void 0, void 0, function*() {
                                return (yield (0, u.default)(t)).json();
                            });
                        }
                        formatPoolsBigNumber(t) {
                            return o(this, void 0, void 0, function*() {
                                let e = { pools: [] };
                                for (let r = 0; r < t.pools.length; r++) {
                                    let n = [],
                                        i = {
                                            id: t.pools[r].id,
                                            swapFee: h.scale(
                                                h.bnum(t.pools[r].swapFee),
                                                18
                                            ),
                                            totalWeight: h.scale(
                                                h.bnum(t.pools[r].totalWeight),
                                                18
                                            ),
                                            tokens: n,
                                            tokensList: t.pools[r].tokensList,
                                        };
                                    t.pools[r].tokens.forEach(t => {
                                        let e = Number(t.decimals);
                                        i.tokens.push({
                                            address: t.address,
                                            balance: h.scale(
                                                h.bnum(t.balance),
                                                e
                                            ),
                                            decimals: e,
                                            denormWeight: h.scale(
                                                h.bnum(t.denormWeight),
                                                18
                                            ),
                                        });
                                    }),
                                        e.pools.push(i);
                                }
                                return e;
                            });
                        }
                    };
                },
                656: (t, e, r) => {
                    'use strict';
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.calcTotalReturn = e.smartOrderRouterMultiHopEpsOfInterest = e.MAX_UINT = void 0),
                        (e.processPaths = function(t, e, r) {
                            let i = {};
                            return (
                                t.forEach(t => {
                                    let s = t.swaps;
                                    if (1 == s.length) {
                                        let t = s[0],
                                            r = `${t.pool}${t.tokenIn}${t.tokenOut}`;
                                        if (void 0 === i[r]) {
                                            let s = e[t.pool],
                                                o = (0, n.parsePoolPairData)(
                                                    s,
                                                    t.tokenIn,
                                                    t.tokenOut
                                                ),
                                                a = (0, n.getSpotPrice)(o);
                                            i[r] = { poolPairData: o, sp: a };
                                        }
                                    } else if (2 == s.length) {
                                        let t = s[0],
                                            r = `${t.pool}${t.tokenIn}${t.tokenOut}`;
                                        if (void 0 === i[r]) {
                                            let s = e[t.pool],
                                                o = (0, n.parsePoolPairData)(
                                                    s,
                                                    t.tokenIn,
                                                    t.tokenOut
                                                ),
                                                a = (0, n.getSpotPrice)(o);
                                            i[r] = { poolPairData: o, sp: a };
                                        }
                                        let o = s[1];
                                        if (
                                            ((r = `${o.pool}${o.tokenIn}${o.tokenOut}`),
                                            void 0 === i[r])
                                        ) {
                                            let t = e[o.pool],
                                                s = (0, n.parsePoolPairData)(
                                                    t,
                                                    o.tokenIn,
                                                    o.tokenOut
                                                ),
                                                a = (0, n.getSpotPrice)(s);
                                            i[r] = { poolPairData: s, sp: a };
                                        }
                                    }
                                    (t.spotPrice = (0, n.getSpotPricePath)(
                                        e,
                                        t,
                                        i
                                    )),
                                        (t.slippage = (0,
                                        n.getSlippageLinearizedSpotPriceAfterSwapPath)(
                                            e,
                                            t,
                                            r,
                                            i
                                        )),
                                        (t.limitAmount = (0,
                                        n.getLimitAmountSwapPath)(e, t, r, i));
                                }),
                                t.sort((t, e) =>
                                    t.spotPrice.minus(e.spotPrice).toNumber()
                                )
                            );
                        }),
                        (e.processEpsOfInterestMultiHop = function(t, e, r) {
                            let n = (function(t, e) {
                                let r = [];
                                return (
                                    t.forEach((e, n) => {
                                        let s = {};
                                        (s.price = e.spotPrice),
                                            (s.id = e.id),
                                            r.push(s),
                                            (s = {}),
                                            (s.price = e.spotPrice.plus(
                                                (0, i.bmul)(
                                                    (0, i.bmul)(
                                                        e.limitAmount,
                                                        e.slippage
                                                    ),
                                                    e.spotPrice
                                                )
                                            )),
                                            (s.maxAmount = e.id),
                                            r.push(s),
                                            (e.slippagePriceFactor = (0,
                                            i.bmul)(e.slippage, e.spotPrice));
                                        for (let s = 0; s < n; s++) {
                                            let n = t[s],
                                                o = n.slippagePriceFactor;
                                            if (
                                                e.slippagePriceFactor.isLessThan(
                                                    o
                                                )
                                            ) {
                                                let t = (0, i.bdiv)(
                                                    e.spotPrice.minus(
                                                        n.spotPrice
                                                    ),
                                                    o.minus(
                                                        e.slippagePriceFactor
                                                    )
                                                );
                                                if (
                                                    t.isLessThan(
                                                        e.limitAmount
                                                    ) &&
                                                    t.isLessThan(n.limitAmount)
                                                ) {
                                                    let s = {};
                                                    (s.price = e.spotPrice.plus(
                                                        (0, i.bmul)(
                                                            t,
                                                            e.slippagePriceFactor
                                                        )
                                                    )),
                                                        (s.swap = [n.id, e.id]),
                                                        r.push(s);
                                                }
                                                if (
                                                    n.limitAmount.isLessThan(
                                                        e.limitAmount
                                                    ) &&
                                                    n.limitAmount.isLessThan(t)
                                                ) {
                                                    let t = {};
                                                    (t.price = e.spotPrice.plus(
                                                        (0, i.bmul)(
                                                            n.limitAmount,
                                                            e.slippagePriceFactor
                                                        )
                                                    )),
                                                        (t.swap = [n.id, e.id]),
                                                        r.push(t);
                                                }
                                                if (
                                                    e.limitAmount.isLessThan(
                                                        n.limitAmount
                                                    ) &&
                                                    t.isLessThan(e.limitAmount)
                                                ) {
                                                    let t = {};
                                                    (t.price = n.spotPrice.plus(
                                                        (0, i.bmul)(
                                                            e.limitAmount,
                                                            o
                                                        )
                                                    )),
                                                        (t.swap = [e.id, n.id]),
                                                        r.push(t);
                                                }
                                            } else if (
                                                n.limitAmount.isLessThan(
                                                    e.limitAmount
                                                )
                                            ) {
                                                let t = {};
                                                (t.price = e.spotPrice.plus(
                                                    (0, i.bmul)(
                                                        n.limitAmount,
                                                        e.slippagePriceFactor
                                                    )
                                                )),
                                                    (t.swap = [n.id, e.id]),
                                                    r.push(t);
                                            }
                                        }
                                    }),
                                    r
                                );
                            })(t);
                            return (
                                (n = n.sort((t, e) =>
                                    t.price.minus(e.price).toNumber()
                                )),
                                (n = (function(t, e) {
                                    let r = [];
                                    return (
                                        t.forEach((n, i) => {
                                            if (null != n.id)
                                                r.length < e && r.push(n.id);
                                            else if (n.swap) {
                                                let t = r.indexOf(n.swap[0]),
                                                    e = r.indexOf(n.swap[1]);
                                                if (-1 != t)
                                                    if (-1 != e) {
                                                        if (t < e) {
                                                            let n = r[t],
                                                                i = r[e];
                                                            (r[t] = i),
                                                                (r[e] = n);
                                                        }
                                                    } else r[t] = n.swap[1];
                                            } else
                                                n.maxAmount ||
                                                    (console.log(n),
                                                    console.error(
                                                        'ERROR: poolID or swap not found in pricesOfInterest'
                                                    ));
                                            t[i].bestPathsIds = r.slice();
                                        }),
                                        t
                                    );
                                })(n, r)),
                                n.forEach(e => {
                                    let r = e.bestPathsIds,
                                        n = e.price;
                                    e.amounts = (function(t, e, r) {
                                        let n = [];
                                        return (
                                            e.forEach((e, s) => {
                                                let o = t.find(t => t.id === e),
                                                    a = (0, i.bdiv)(
                                                        r.minus(o.spotPrice),
                                                        o.slippagePriceFactor
                                                    );
                                                a.isNaN() &&
                                                    (a = (0, i.bnum)(0)),
                                                    o.limitAmount.isLessThan(
                                                        a
                                                    ) && (a = o.limitAmount),
                                                    n.push(a);
                                            }),
                                            n
                                        );
                                    })(t, r, n);
                                }),
                                n
                            );
                        });
                    const n = r(673),
                        i = r(16),
                        s = r(365),
                        o = r(60);
                    e.MAX_UINT = o.MaxUint256;
                    const a = e.MAX_UINT,
                        u = e.MAX_UINT;
                    function h(t, e, r) {
                        let n = [];
                        e[e.length - 1].isEqualTo(new s.BigNumber(0)) &&
                            e.pop(),
                            e.forEach((e, r) => {
                                let i = e.minus(t[r]);
                                n.push(i);
                            });
                        let o = t.reduce((t, e) => t.plus(e)),
                            a = e.reduce((t, e) => t.plus(e)).minus(o),
                            u = [];
                        n.forEach((t, e) => {
                            let n = (0, i.bdiv)(r.minus(o), a),
                                s = (0, i.bmul)(n, t);
                            u.push(s);
                        });
                        let h = [];
                        return (
                            t.forEach((t, e) => {
                                let r = t.plus(u[e]);
                                h.push(r);
                            }),
                            h
                        );
                    }
                    (e.smartOrderRouterMultiHopEpsOfInterest = (
                        t,
                        r,
                        o,
                        l,
                        c,
                        f,
                        d
                    ) => {
                        let p,
                            m,
                            g,
                            y,
                            v,
                            w = new s.BigNumber(0),
                            b = new s.BigNumber(0),
                            M = !0,
                            E = [],
                            _ = r.length + 1;
                        for (let n = 1; n <= _; n++) {
                            let a, u, _;
                            m = 0;
                            for (let t = 0; t < d.length; t++)
                                if (0 !== t) {
                                    if (
                                        d[t].amounts
                                            .slice(0, n)
                                            .reduce((t, e) => t.plus(e))
                                            .isGreaterThan(l)
                                    ) {
                                        (p = a.bestPathsIds.slice(0, n)),
                                            (u = a.amounts.slice(0, n)),
                                            (_ = d[t].amounts.slice(0, n)),
                                            (v = h(u, _, l)),
                                            (M = !1);
                                        break;
                                    }
                                    a = d[t];
                                } else a = d[t];
                            M && ((p = []), (v = [])),
                                (m = (0, e.calcTotalReturn)(t, r, o, p, v));
                            let A = 0;
                            p.forEach((t, e) => {
                                const n = r.find(e => e.id === t);
                                A += n.swaps.length;
                            });
                            let N = !1;
                            if (
                                (A <= c &&
                                    ('swapExactIn' === o
                                        ? ((g = m.minus(
                                              (0, i.bmul)(
                                                  new s.BigNumber(A).times(
                                                      i.BONE
                                                  ),
                                                  f
                                              )
                                          )),
                                          (N = g.isGreaterThan(b) || 1 === n))
                                        : ((g = m.plus(
                                              (0, i.bmul)(
                                                  new s.BigNumber(A).times(
                                                      i.BONE
                                                  ),
                                                  f
                                              )
                                          )),
                                          (N = g.isLessThan(b) || 1 === n))),
                                !0 !== N)
                            )
                                break;
                            (E = v), (y = p), (w = m), (b = g);
                        }
                        let A,
                            N = [],
                            O = new s.BigNumber(0),
                            S = new s.BigNumber(0);
                        return (
                            E.forEach((e, i) => {
                                O = O.plus(e);
                                const s = r.find(t => t.id === y[i]);
                                if (!s)
                                    throw new Error(
                                        '[Invariant] No pool found for selected pool index' +
                                            y[i]
                                    );
                                if (
                                    (0 == i && (A = s.swaps.length),
                                    1 == s.swaps.length)
                                ) {
                                    let t = {
                                        pool: s.swaps[0].pool,
                                        tokenIn: s.swaps[0].tokenIn,
                                        tokenOut: s.swaps[0].tokenOut,
                                        swapAmount: e.toString(),
                                        limitReturnAmount:
                                            'swapExactIn' === o
                                                ? (0).toString()
                                                : a.toString(),
                                        maxPrice: u.toString(),
                                    };
                                    N.push([t]);
                                } else {
                                    let r = s.swaps[0],
                                        i = t[r.pool],
                                        h = (0, n.parsePoolPairData)(
                                            i,
                                            r.tokenIn,
                                            r.tokenOut
                                        ),
                                        l = s.swaps[1],
                                        c = t[l.pool],
                                        f = (0, n.parsePoolPairData)(
                                            c,
                                            l.tokenIn,
                                            l.tokenOut
                                        ),
                                        d = {
                                            pool: s.swaps[0].pool,
                                            tokenIn: s.swaps[0].tokenIn,
                                            tokenOut: s.swaps[0].tokenOut,
                                            swapAmount:
                                                'swapExactIn' === o
                                                    ? e.toString()
                                                    : (0,
                                                      n.getReturnAmountSwap)(
                                                          t,
                                                          f,
                                                          o,
                                                          e
                                                      ).toString(),
                                            limitReturnAmount:
                                                'swapExactIn' === o
                                                    ? (0).toString()
                                                    : a.toString(),
                                            maxPrice: u.toString(),
                                        },
                                        p = {
                                            pool: s.swaps[1].pool,
                                            tokenIn: s.swaps[1].tokenIn,
                                            tokenOut: s.swaps[1].tokenOut,
                                            swapAmount:
                                                'swapExactIn' === o
                                                    ? (0,
                                                      n.getReturnAmountSwap)(
                                                          t,
                                                          h,
                                                          o,
                                                          e
                                                      ).toString()
                                                    : e.toString(),
                                            limitReturnAmount:
                                                'swapExactIn' === o
                                                    ? (0).toString()
                                                    : a.toString(),
                                            maxPrice: u.toString(),
                                        };
                                    N.push([d, p]);
                                }
                                (0, n.getReturnAmountSwapPath)(t, s, o, e);
                            }),
                            N.length > 0 &&
                                ((S = l.minus(O)),
                                'swapExactIn' === o || 1 == A
                                    ? (N[0][0].swapAmount = new s.BigNumber(
                                          N[0][0].swapAmount
                                      )
                                          .plus(S)
                                          .toString())
                                    : (N[0][1].swapAmount = new s.BigNumber(
                                          N[0][1].swapAmount
                                      )
                                          .plus(S)
                                          .toString())),
                            [N, w]
                        );
                    }),
                        (e.calcTotalReturn = (t, e, r, i, o) => {
                            let a,
                                u = new s.BigNumber(0),
                                h = JSON.parse(JSON.stringify(t));
                            return (
                                i.forEach((t, i) => {
                                    (a = e.find(e => e.id === t)),
                                        (u = u.plus(
                                            (0, n.getReturnAmountSwapPath)(
                                                h,
                                                a,
                                                r,
                                                o[i]
                                            )
                                        ));
                                }),
                                u
                            );
                        });
                },
                365: (t, e, r) => {
                    'use strict';
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.BigNumber = void 0);
                    const n = r(594);
                    Object.defineProperty(e, 'BigNumber', {
                        enumerable: !0,
                        get: function() {
                            return n.BigNumber;
                        },
                    }),
                        n.BigNumber.config({
                            EXPONENTIAL_AT: [-100, 100],
                            ROUNDING_MODE: 1,
                            DECIMAL_PLACES: 18,
                        });
                },
                524: function(t, e, r) {
                    'use strict';
                    var n =
                            (this && this.__createBinding) ||
                            (Object.create
                                ? function(t, e, r, n) {
                                      void 0 === n && (n = r);
                                      var i = Object.getOwnPropertyDescriptor(
                                          e,
                                          r
                                      );
                                      (i &&
                                          !('get' in i
                                              ? !e.__esModule
                                              : i.writable ||
                                                i.configurable)) ||
                                          (i = {
                                              enumerable: !0,
                                              get: function() {
                                                  return e[r];
                                              },
                                          }),
                                          Object.defineProperty(t, n, i);
                                  }
                                : function(t, e, r, n) {
                                      void 0 === n && (n = r), (t[n] = e[r]);
                                  }),
                        i =
                            (this && this.__setModuleDefault) ||
                            (Object.create
                                ? function(t, e) {
                                      Object.defineProperty(t, 'default', {
                                          enumerable: !0,
                                          value: e,
                                      });
                                  }
                                : function(t, e) {
                                      t.default = e;
                                  }),
                        s =
                            (this && this.__importStar) ||
                            function(t) {
                                if (t && t.__esModule) return t;
                                var e = {};
                                if (null != t)
                                    for (var r in t)
                                        'default' !== r &&
                                            Object.prototype.hasOwnProperty.call(
                                                t,
                                                r
                                            ) &&
                                            n(e, t, r);
                                return i(e, t), e;
                            },
                        o =
                            (this && this.__awaiter) ||
                            function(t, e, r, n) {
                                return new (r || (r = Promise))(function(i, s) {
                                    function o(t) {
                                        try {
                                            u(n.next(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function a(t) {
                                        try {
                                            u(n.throw(t));
                                        } catch (t) {
                                            s(t);
                                        }
                                    }
                                    function u(t) {
                                        var e;
                                        t.done
                                            ? i(t.value)
                                            : ((e = t.value),
                                              e instanceof r
                                                  ? e
                                                  : new r(function(t) {
                                                        t(e);
                                                    })).then(o, a);
                                    }
                                    u((n = n.apply(t, e || [])).next());
                                });
                            };
                    Object.defineProperty(e, '__esModule', { value: !0 }),
                        (e.SOR = void 0);
                    const a = r(365),
                        u = r(16),
                        h = s(r(156));
                    e.SOR = class {
                        constructor(t, e, r, n, i) {
                            (this.swapCost = new a.BigNumber('100000')),
                                (this.tokenCost = {}),
                                (this.onChainCache = { pools: [] }),
                                (this.poolsForPairsCache = {}),
                                (this.processedDataCache = {}),
                                (this.isAllFetched = !1),
                                (this.MULTIADDR = {
                                    1: '0x514053acec7177e277b947b1ebb5c08ab4c4580e',
                                    42: '0x71c7f1086aFca7Aa1B0D4d73cfa77979d10D3210',
                                    11155111: '0x68bC5D0b375Ff249bCB23324d4cC4637bC23E364',
                                }),
                                (this.provider = t),
                                (this.gasPrice = e),
                                (this.maxPools = r),
                                (this.chainId = n),
                                (this.poolsUrl = i),
                                (this.pools = new h.POOLS());
                        }
                        setCostOutputToken(t) {
                            return o(this, arguments, void 0, function*(
                                t,
                                e = null
                            ) {
                                if (((t = t.toLowerCase()), null === e)) {
                                    const e = yield h.getCostOutputToken(
                                        t,
                                        this.gasPrice,
                                        this.swapCost,
                                        this.provider,
                                        this.chainId
                                    );
                                    this.tokenCost[t] = e;
                                } else this.tokenCost[t] = e;
                            });
                        }
                        fetchPools() {
                            return o(this, void 0, void 0, function*() {
                                try {
                                    let t = yield this.pools.getAllPublicSwapPools(
                                            this.poolsUrl
                                        ),
                                        e = JSON.stringify(this.onChainCache);
                                    return (
                                        (this.onChainCache = yield this.fetchOnChainPools(
                                            t
                                        )),
                                        e !==
                                            JSON.stringify(this.onChainCache) &&
                                            (this.processedDataCache = {}),
                                        (this.isAllFetched = !0),
                                        !0
                                    );
                                } catch (t) {
                                    return (
                                        (this.isAllFetched = !1),
                                        (this.onChainCache = { pools: [] }),
                                        (this.processedDataCache = {}),
                                        console.error(
                                            `Error: fetchPools(): ${t.message}`
                                        ),
                                        !1
                                    );
                                }
                            });
                        }
                        fetchOnChainPools(t) {
                            return o(this, void 0, void 0, function*() {
                                if (0 === t.pools.length)
                                    return (
                                        console.error(
                                            'ERROR: No Pools To Fetch.'
                                        ),
                                        { pools: [] }
                                    );
                                return (
                                    (yield h.getAllPoolDataOnChain(
                                        t,
                                        this.MULTIADDR[this.chainId],
                                        this.provider
                                    )) || { pools: [] }
                                );
                            });
                        }
                        getSwaps(t, e, r, n) {
                            return o(this, void 0, void 0, function*() {
                                let i, s, o;
                                if (
                                    ((t = t.toLowerCase()),
                                    (e = e.toLowerCase()),
                                    this.isAllFetched)
                                )
                                    [i, s, o] = yield this.processSwaps(
                                        t,
                                        e,
                                        r,
                                        n,
                                        this.onChainCache
                                    );
                                else {
                                    if (
                                        !this.poolsForPairsCache[
                                            this.createKey(t, e)
                                        ]
                                    )
                                        return [
                                            [[]],
                                            (0, u.bnum)(0),
                                            (0, u.bnum)(0),
                                        ];
                                    [i, s, o] = yield this.processSwaps(
                                        t,
                                        e,
                                        r,
                                        n,
                                        this.poolsForPairsCache[
                                            this.createKey(t, e)
                                        ],
                                        !1
                                    );
                                }
                                return [i, s, o];
                            });
                        }
                        processSwaps(t, e, r, n, i) {
                            return o(this, arguments, void 0, function*(
                                t,
                                e,
                                r,
                                n,
                                i,
                                s = !0
                            ) {
                                if (0 === i.pools.length)
                                    return [
                                        [[]],
                                        (0, u.bnum)(0),
                                        (0, u.bnum)(0),
                                    ];
                                let o,
                                    l,
                                    c,
                                    f,
                                    d = this.processedDataCache[`${t}${e}${r}`];
                                if (s && d)
                                    (o = d.pools),
                                        (l = d.paths),
                                        (c = d.epsOfInterest),
                                        (f = d.marketSp);
                                else {
                                    let n,
                                        a = JSON.parse(JSON.stringify(i));
                                    ([o, n] = this.processPairPools(t, e, a)),
                                        ([l, c, f] = this.processPathsAndPrices(
                                            n,
                                            o,
                                            r
                                        )),
                                        s &&
                                            (this.processedDataCache[
                                                `${t}${e}${r}`
                                            ] = {
                                                pools: o,
                                                paths: l,
                                                epsOfInterest: c,
                                                marketSp: f,
                                            });
                                }
                                let p,
                                    m,
                                    g = this.tokenCost[e];
                                return (
                                    void 0 === g && (g = new a.BigNumber(0)),
                                    ([
                                        p,
                                        m,
                                    ] = h.smartOrderRouterMultiHopEpsOfInterest(
                                        JSON.parse(JSON.stringify(o)),
                                        l,
                                        r,
                                        n,
                                        this.maxPools,
                                        g,
                                        c
                                    )),
                                    [p, m, f]
                                );
                            });
                        }
                        fetchFilteredPairPools(t, e) {
                            return o(this, void 0, void 0, function*() {
                                (t = t.toLowerCase()), (e = e.toLowerCase());
                                try {
                                    let r,
                                        n,
                                        i,
                                        s,
                                        o,
                                        l,
                                        c = yield this.pools.getAllPublicSwapPools(
                                            this.poolsUrl
                                        ),
                                        f = yield this.pools.formatPoolsBigNumber(
                                            c
                                        ),
                                        d = 0,
                                        p = 0;
                                    for (let r = 0; r < f.pools.length; r++) {
                                        for (
                                            let n = 0;
                                            n < f.pools[r].tokens.length;
                                            n++
                                        )
                                            if (
                                                f.pools[r].tokens[n].address ===
                                                t
                                            ) {
                                                if (
                                                    ((d = Number(
                                                        f.pools[r].tokens[n]
                                                            .decimals
                                                    )),
                                                    d > 0 && p > 0)
                                                )
                                                    break;
                                            } else if (
                                                f.pools[r].tokens[n].address ===
                                                    e &&
                                                ((p = Number(
                                                    f.pools[r].tokens[n]
                                                        .decimals
                                                )),
                                                d > 0 && p > 0)
                                            )
                                                break;
                                        if (d > 0 && p > 0) break;
                                    }
                                    ([r, n] = this.processPairPools(t, e, f)),
                                        ([i, s] = this.processPathsAndPrices(
                                            JSON.parse(JSON.stringify(n)),
                                            r,
                                            'swapExactIn'
                                        )),
                                        ([o, l] = this.processPathsAndPrices(
                                            n,
                                            r,
                                            'swapExactOut'
                                        ));
                                    let m = this.tokenCost[e];
                                    void 0 === m && (m = new a.BigNumber(0));
                                    let g = [];
                                    [
                                        (0, u.bnum)('0.01'),
                                        (0, u.bnum)('0.1'),
                                        (0, u.bnum)('1'),
                                        (0, u.bnum)('10'),
                                        (0, u.bnum)('100'),
                                        (0, u.bnum)('1000'),
                                    ].forEach(t => {
                                        let e,
                                            n,
                                            a = (0, u.scale)(t, d),
                                            c = a;
                                        d !== p && (c = (0, u.scale)(t, p)),
                                            ([
                                                e,
                                                n,
                                            ] = h.smartOrderRouterMultiHopEpsOfInterest(
                                                JSON.parse(JSON.stringify(r)),
                                                i,
                                                'swapExactIn',
                                                a,
                                                this.maxPools,
                                                m,
                                                s
                                            )),
                                            g.push(e),
                                            ([
                                                e,
                                                n,
                                            ] = h.smartOrderRouterMultiHopEpsOfInterest(
                                                JSON.parse(JSON.stringify(r)),
                                                o,
                                                'swapExactOut',
                                                c,
                                                this.maxPools,
                                                m,
                                                l
                                            )),
                                            g.push(e);
                                    });
                                    let y = [];
                                    g.forEach(t => {
                                        t.forEach(t => {
                                            t.forEach(t => {
                                                y.includes(t.pool) ||
                                                    y.push(t.pool);
                                            });
                                        });
                                    });
                                    let v = [];
                                    for (let t = 0; t < c.pools.length; t++) {
                                        let e = y.indexOf(c.pools[t].id);
                                        if (
                                            e > -1 &&
                                            (y.splice(e, 1),
                                            v.push(c.pools[t]),
                                            0 === y.length)
                                        )
                                            break;
                                    }
                                    let w = { pools: [] };
                                    return (
                                        0 !== v.length &&
                                            (w = yield h.getAllPoolDataOnChain(
                                                { pools: v },
                                                this.MULTIADDR[this.chainId],
                                                this.provider
                                            )),
                                        (this.poolsForPairsCache[
                                            this.createKey(t, e)
                                        ] = w),
                                        !0
                                    );
                                } catch (r) {
                                    return (
                                        console.error(
                                            `Error: fetchFilteredPairPools(): ${r.message}`
                                        ),
                                        (this.poolsForPairsCache[
                                            this.createKey(t, e)
                                        ] = { pools: [] }),
                                        !1
                                    );
                                }
                            });
                        }
                        processPairPools(t, e, r) {
                            let n, i, s, o, a, u, l, c;
                            return (
                                ([n, i, s, o] = h.filterPools(
                                    r.pools,
                                    t,
                                    e,
                                    this.maxPools
                                )),
                                ([a, u] = h.sortPoolsMostLiquid(t, e, i, s, o)),
                                ([c, l] = h.parsePoolData(n, t, e, a, u, i)),
                                [c, l]
                            );
                        }
                        processPathsAndPrices(t, e, r) {
                            const n = h.processPaths(t, e, r),
                                i = h.getMarketSpotPrice(n);
                            return [
                                n,
                                h.processEpsOfInterestMultiHop(
                                    n,
                                    r,
                                    this.maxPools
                                ),
                                i,
                            ];
                        }
                        createKey(t, e) {
                            return t < e ? `${t}${e}` : `${e}${t}`;
                        }
                        hasDataForPair(t, e) {
                            return (
                                (t = t.toLowerCase()),
                                (e = e.toLowerCase()),
                                !(
                                    !this.isAllFetched &&
                                    !this.poolsForPairsCache[
                                        this.createKey(t, e)
                                    ]
                                )
                            );
                        }
                    };
                },
                624: (t, e, r) => {
                    'use strict';
                    r.r(e),
                        r.d(e, {
                            DOMException: () => b,
                            Headers: () => h,
                            Request: () => g,
                            Response: () => v,
                            fetch: () => M,
                        });
                    var n = {
                        searchParams: 'URLSearchParams' in self,
                        iterable: 'Symbol' in self && 'iterator' in Symbol,
                        blob:
                            'FileReader' in self &&
                            'Blob' in self &&
                            (function() {
                                try {
                                    return new Blob(), !0;
                                } catch (t) {
                                    return !1;
                                }
                            })(),
                        formData: 'FormData' in self,
                        arrayBuffer: 'ArrayBuffer' in self,
                    };
                    if (n.arrayBuffer)
                        var i = [
                                '[object Int8Array]',
                                '[object Uint8Array]',
                                '[object Uint8ClampedArray]',
                                '[object Int16Array]',
                                '[object Uint16Array]',
                                '[object Int32Array]',
                                '[object Uint32Array]',
                                '[object Float32Array]',
                                '[object Float64Array]',
                            ],
                            s =
                                ArrayBuffer.isView ||
                                function(t) {
                                    return (
                                        t &&
                                        i.indexOf(
                                            Object.prototype.toString.call(t)
                                        ) > -1
                                    );
                                };
                    function o(t) {
                        if (
                            ('string' != typeof t && (t = String(t)),
                            /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t))
                        )
                            throw new TypeError(
                                'Invalid character in header field name'
                            );
                        return t.toLowerCase();
                    }
                    function a(t) {
                        return 'string' != typeof t && (t = String(t)), t;
                    }
                    function u(t) {
                        var e = {
                            next: function() {
                                var e = t.shift();
                                return { done: void 0 === e, value: e };
                            },
                        };
                        return (
                            n.iterable &&
                                (e[Symbol.iterator] = function() {
                                    return e;
                                }),
                            e
                        );
                    }
                    function h(t) {
                        (this.map = {}),
                            t instanceof h
                                ? t.forEach(function(t, e) {
                                      this.append(e, t);
                                  }, this)
                                : Array.isArray(t)
                                ? t.forEach(function(t) {
                                      this.append(t[0], t[1]);
                                  }, this)
                                : t &&
                                  Object.getOwnPropertyNames(t).forEach(
                                      function(e) {
                                          this.append(e, t[e]);
                                      },
                                      this
                                  );
                    }
                    function l(t) {
                        if (t.bodyUsed)
                            return Promise.reject(
                                new TypeError('Already read')
                            );
                        t.bodyUsed = !0;
                    }
                    function c(t) {
                        return new Promise(function(e, r) {
                            (t.onload = function() {
                                e(t.result);
                            }),
                                (t.onerror = function() {
                                    r(t.error);
                                });
                        });
                    }
                    function f(t) {
                        var e = new FileReader(),
                            r = c(e);
                        return e.readAsArrayBuffer(t), r;
                    }
                    function d(t) {
                        if (t.slice) return t.slice(0);
                        var e = new Uint8Array(t.byteLength);
                        return e.set(new Uint8Array(t)), e.buffer;
                    }
                    function p() {
                        return (
                            (this.bodyUsed = !1),
                            (this._initBody = function(t) {
                                var e;
                                (this._bodyInit = t),
                                    t
                                        ? 'string' == typeof t
                                            ? (this._bodyText = t)
                                            : n.blob &&
                                              Blob.prototype.isPrototypeOf(t)
                                            ? (this._bodyBlob = t)
                                            : n.formData &&
                                              FormData.prototype.isPrototypeOf(
                                                  t
                                              )
                                            ? (this._bodyFormData = t)
                                            : n.searchParams &&
                                              URLSearchParams.prototype.isPrototypeOf(
                                                  t
                                              )
                                            ? (this._bodyText = t.toString())
                                            : n.arrayBuffer &&
                                              n.blob &&
                                              (e = t) &&
                                              DataView.prototype.isPrototypeOf(
                                                  e
                                              )
                                            ? ((this._bodyArrayBuffer = d(
                                                  t.buffer
                                              )),
                                              (this._bodyInit = new Blob([
                                                  this._bodyArrayBuffer,
                                              ])))
                                            : n.arrayBuffer &&
                                              (ArrayBuffer.prototype.isPrototypeOf(
                                                  t
                                              ) ||
                                                  s(t))
                                            ? (this._bodyArrayBuffer = d(t))
                                            : (this._bodyText = t = Object.prototype.toString.call(
                                                  t
                                              ))
                                        : (this._bodyText = ''),
                                    this.headers.get('content-type') ||
                                        ('string' == typeof t
                                            ? this.headers.set(
                                                  'content-type',
                                                  'text/plain;charset=UTF-8'
                                              )
                                            : this._bodyBlob &&
                                              this._bodyBlob.type
                                            ? this.headers.set(
                                                  'content-type',
                                                  this._bodyBlob.type
                                              )
                                            : n.searchParams &&
                                              URLSearchParams.prototype.isPrototypeOf(
                                                  t
                                              ) &&
                                              this.headers.set(
                                                  'content-type',
                                                  'application/x-www-form-urlencoded;charset=UTF-8'
                                              ));
                            }),
                            n.blob &&
                                ((this.blob = function() {
                                    var t = l(this);
                                    if (t) return t;
                                    if (this._bodyBlob)
                                        return Promise.resolve(this._bodyBlob);
                                    if (this._bodyArrayBuffer)
                                        return Promise.resolve(
                                            new Blob([this._bodyArrayBuffer])
                                        );
                                    if (this._bodyFormData)
                                        throw new Error(
                                            'could not read FormData body as blob'
                                        );
                                    return Promise.resolve(
                                        new Blob([this._bodyText])
                                    );
                                }),
                                (this.arrayBuffer = function() {
                                    return this._bodyArrayBuffer
                                        ? l(this) ||
                                              Promise.resolve(
                                                  this._bodyArrayBuffer
                                              )
                                        : this.blob().then(f);
                                })),
                            (this.text = function() {
                                var t,
                                    e,
                                    r,
                                    n = l(this);
                                if (n) return n;
                                if (this._bodyBlob)
                                    return (
                                        (t = this._bodyBlob),
                                        (r = c((e = new FileReader()))),
                                        e.readAsText(t),
                                        r
                                    );
                                if (this._bodyArrayBuffer)
                                    return Promise.resolve(
                                        (function(t) {
                                            for (
                                                var e = new Uint8Array(t),
                                                    r = new Array(e.length),
                                                    n = 0;
                                                n < e.length;
                                                n++
                                            )
                                                r[n] = String.fromCharCode(
                                                    e[n]
                                                );
                                            return r.join('');
                                        })(this._bodyArrayBuffer)
                                    );
                                if (this._bodyFormData)
                                    throw new Error(
                                        'could not read FormData body as text'
                                    );
                                return Promise.resolve(this._bodyText);
                            }),
                            n.formData &&
                                (this.formData = function() {
                                    return this.text().then(y);
                                }),
                            (this.json = function() {
                                return this.text().then(JSON.parse);
                            }),
                            this
                        );
                    }
                    (h.prototype.append = function(t, e) {
                        (t = o(t)), (e = a(e));
                        var r = this.map[t];
                        this.map[t] = r ? r + ', ' + e : e;
                    }),
                        (h.prototype.delete = function(t) {
                            delete this.map[o(t)];
                        }),
                        (h.prototype.get = function(t) {
                            return (t = o(t)), this.has(t) ? this.map[t] : null;
                        }),
                        (h.prototype.has = function(t) {
                            return this.map.hasOwnProperty(o(t));
                        }),
                        (h.prototype.set = function(t, e) {
                            this.map[o(t)] = a(e);
                        }),
                        (h.prototype.forEach = function(t, e) {
                            for (var r in this.map)
                                this.map.hasOwnProperty(r) &&
                                    t.call(e, this.map[r], r, this);
                        }),
                        (h.prototype.keys = function() {
                            var t = [];
                            return (
                                this.forEach(function(e, r) {
                                    t.push(r);
                                }),
                                u(t)
                            );
                        }),
                        (h.prototype.values = function() {
                            var t = [];
                            return (
                                this.forEach(function(e) {
                                    t.push(e);
                                }),
                                u(t)
                            );
                        }),
                        (h.prototype.entries = function() {
                            var t = [];
                            return (
                                this.forEach(function(e, r) {
                                    t.push([r, e]);
                                }),
                                u(t)
                            );
                        }),
                        n.iterable &&
                            (h.prototype[Symbol.iterator] =
                                h.prototype.entries);
                    var m = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];
                    function g(t, e) {
                        var r,
                            n,
                            i = (e = e || {}).body;
                        if (t instanceof g) {
                            if (t.bodyUsed) throw new TypeError('Already read');
                            (this.url = t.url),
                                (this.credentials = t.credentials),
                                e.headers || (this.headers = new h(t.headers)),
                                (this.method = t.method),
                                (this.mode = t.mode),
                                (this.signal = t.signal),
                                i ||
                                    null == t._bodyInit ||
                                    ((i = t._bodyInit), (t.bodyUsed = !0));
                        } else this.url = String(t);
                        if (
                            ((this.credentials =
                                e.credentials ||
                                this.credentials ||
                                'same-origin'),
                            (!e.headers && this.headers) ||
                                (this.headers = new h(e.headers)),
                            (this.method =
                                ((n = (r =
                                    e.method ||
                                    this.method ||
                                    'GET').toUpperCase()),
                                m.indexOf(n) > -1 ? n : r)),
                            (this.mode = e.mode || this.mode || null),
                            (this.signal = e.signal || this.signal),
                            (this.referrer = null),
                            ('GET' === this.method || 'HEAD' === this.method) &&
                                i)
                        )
                            throw new TypeError(
                                'Body not allowed for GET or HEAD requests'
                            );
                        this._initBody(i);
                    }
                    function y(t) {
                        var e = new FormData();
                        return (
                            t
                                .trim()
                                .split('&')
                                .forEach(function(t) {
                                    if (t) {
                                        var r = t.split('='),
                                            n = r.shift().replace(/\+/g, ' '),
                                            i = r.join('=').replace(/\+/g, ' ');
                                        e.append(
                                            decodeURIComponent(n),
                                            decodeURIComponent(i)
                                        );
                                    }
                                }),
                            e
                        );
                    }
                    function v(t, e) {
                        e || (e = {}),
                            (this.type = 'default'),
                            (this.status =
                                void 0 === e.status ? 200 : e.status),
                            (this.ok = this.status >= 200 && this.status < 300),
                            (this.statusText =
                                'statusText' in e ? e.statusText : 'OK'),
                            (this.headers = new h(e.headers)),
                            (this.url = e.url || ''),
                            this._initBody(t);
                    }
                    (g.prototype.clone = function() {
                        return new g(this, { body: this._bodyInit });
                    }),
                        p.call(g.prototype),
                        p.call(v.prototype),
                        (v.prototype.clone = function() {
                            return new v(this._bodyInit, {
                                status: this.status,
                                statusText: this.statusText,
                                headers: new h(this.headers),
                                url: this.url,
                            });
                        }),
                        (v.error = function() {
                            var t = new v(null, { status: 0, statusText: '' });
                            return (t.type = 'error'), t;
                        });
                    var w = [301, 302, 303, 307, 308];
                    v.redirect = function(t, e) {
                        if (-1 === w.indexOf(e))
                            throw new RangeError('Invalid status code');
                        return new v(null, {
                            status: e,
                            headers: { location: t },
                        });
                    };
                    var b = self.DOMException;
                    try {
                        new b();
                    } catch (t) {
                        ((b = function(t, e) {
                            (this.message = t), (this.name = e);
                            var r = Error(t);
                            this.stack = r.stack;
                        }).prototype = Object.create(Error.prototype)),
                            (b.prototype.constructor = b);
                    }
                    function M(t, e) {
                        return new Promise(function(r, i) {
                            var s = new g(t, e);
                            if (s.signal && s.signal.aborted)
                                return i(new b('Aborted', 'AbortError'));
                            var o = new XMLHttpRequest();
                            function a() {
                                o.abort();
                            }
                            (o.onload = function() {
                                var t,
                                    e,
                                    n = {
                                        status: o.status,
                                        statusText: o.statusText,
                                        headers:
                                            ((t =
                                                o.getAllResponseHeaders() ||
                                                ''),
                                            (e = new h()),
                                            t
                                                .replace(/\r?\n[\t ]+/g, ' ')
                                                .split(/\r?\n/)
                                                .forEach(function(t) {
                                                    var r = t.split(':'),
                                                        n = r.shift().trim();
                                                    if (n) {
                                                        var i = r
                                                            .join(':')
                                                            .trim();
                                                        e.append(n, i);
                                                    }
                                                }),
                                            e),
                                    };
                                n.url =
                                    'responseURL' in o
                                        ? o.responseURL
                                        : n.headers.get('X-Request-URL');
                                var i =
                                    'response' in o
                                        ? o.response
                                        : o.responseText;
                                r(new v(i, n));
                            }),
                                (o.onerror = function() {
                                    i(new TypeError('Network request failed'));
                                }),
                                (o.ontimeout = function() {
                                    i(new TypeError('Network request failed'));
                                }),
                                (o.onabort = function() {
                                    i(new b('Aborted', 'AbortError'));
                                }),
                                o.open(s.method, s.url, !0),
                                'include' === s.credentials
                                    ? (o.withCredentials = !0)
                                    : 'omit' === s.credentials &&
                                      (o.withCredentials = !1),
                                'responseType' in o &&
                                    n.blob &&
                                    (o.responseType = 'blob'),
                                s.headers.forEach(function(t, e) {
                                    o.setRequestHeader(e, t);
                                }),
                                s.signal &&
                                    (s.signal.addEventListener('abort', a),
                                    (o.onreadystatechange = function() {
                                        4 === o.readyState &&
                                            s.signal.removeEventListener(
                                                'abort',
                                                a
                                            );
                                    })),
                                o.send(
                                    void 0 === s._bodyInit ? null : s._bodyInit
                                );
                        });
                    }
                    (M.polyfill = !0),
                        self.fetch ||
                            ((self.fetch = M),
                            (self.Headers = h),
                            (self.Request = g),
                            (self.Response = v));
                },
                555: () => {},
                790: () => {},
                859: t => {
                    'use strict';
                    t.exports = JSON.parse(
                        '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"_reserve0","type":"uint112"},{"internalType":"uint112","name":"_reserve1","type":"uint112"},{"internalType":"uint32","name":"_blockTimestampLast","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"sync","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
                    );
                },
                906: t => {
                    'use strict';
                    t.exports = JSON.parse(
                        '[{"inputs":[{"internalType":"bytes","name":"encodedData","type":"bytes"}],"name":"getPoolInfo","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}]'
                    );
                },
                626: t => {
                    'use strict';
                    t.exports = JSON.parse(
                        '{"tokens":[{"address":"0x985dd3d42de1e256d09e1c10f112bccb8015ad41","symbol":"OCEAN"},{"address":"0x7afebbb46fdb47ed17b22ed075cde2447694fb9e","symbol":"OCEAN2"}]}'
                    );
                },
            },
            e = {};
        function r(n) {
            var i = e[n];
            if (void 0 !== i) return i.exports;
            var s = (e[n] = { id: n, loaded: !1, exports: {} });
            return (
                t[n].call(s.exports, s, s.exports, r),
                (s.loaded = !0),
                s.exports
            );
        }
        return (
            (r.amdO = {}),
            (r.n = t => {
                var e = t && t.__esModule ? () => t.default : () => t;
                return r.d(e, { a: e }), e;
            }),
            (r.d = (t, e) => {
                for (var n in e)
                    r.o(e, n) &&
                        !r.o(t, n) &&
                        Object.defineProperty(t, n, {
                            enumerable: !0,
                            get: e[n],
                        });
            }),
            (r.g = (function() {
                if ('object' == typeof globalThis) return globalThis;
                try {
                    return this || new Function('return this')();
                } catch (t) {
                    if ('object' == typeof window) return window;
                }
            })()),
            (r.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
            (r.r = t => {
                'undefined' != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(t, Symbol.toStringTag, {
                        value: 'Module',
                    }),
                    Object.defineProperty(t, '__esModule', { value: !0 });
            }),
            (r.nmd = t => ((t.paths = []), t.children || (t.children = []), t)),
            r(156)
        );
    })()
);
